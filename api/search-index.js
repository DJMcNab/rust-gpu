var searchIndex = JSON.parse('{\
"aho_corasick":{"doc":"A library for finding occurrences of many patterns at …","i":[[0,"packed","aho_corasick","A lower level API for packed multiple substring search, …",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a …",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed …",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed …",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports …",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports …",0,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of …",null,null],[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear …",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular …",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular …",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an …",null,null],[13,"Standard","","Use standard match semantics, which support overlapping …",1,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports …",1,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports …",1,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an …",null,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would …",2,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",3,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs …",2,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",4,null],[12,"requested_max","","The maximum ID required by premultiplication.",4,null],[8,"StateID","aho_corasick","A trait describing the representation of an automaton\'s …",null,null],[10,"from_usize","","Convert from a <code>usize</code> to this implementation\'s …",5,[[]]],[10,"to_usize","","Convert this implementation\'s representation to a <code>usize</code>.",5,[[]]],[10,"max_id","","Return the maximum state identifier supported by this …",5,[[]]],[3,"Match","","A representation of a match reported by an Aho-Corasick …",null,null],[11,"pattern","","Returns the identifier of the pattern that matched.",6,[[]]],[11,"start","","The starting position of the match.",6,[[]]],[11,"end","","The ending position of the match.",6,[[]]],[11,"is_empty","","Returns true if and only if this match is empty. That is, …",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","aho_corasick::packed","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","aho_corasick","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next","","",8,[[],[["option",4],["match",3]]]],[11,"next","","",9,[[],[["option",4],["match",3]]]],[11,"next","","",10,[[],[["result",6],["option",4]]]],[11,"next","aho_corasick::packed","",16,[[],[["option",4],["match",3]]]],[11,"clone","aho_corasick","",7,[[],["ahocorasick",3]]],[11,"clone","","",11,[[],["ahocorasickbuilder",3]]],[11,"clone","","",1,[[],["matchkind",4]]],[11,"clone","","",12,[[],["error",3]]],[11,"clone","","",2,[[],["errorkind",4]]],[11,"clone","aho_corasick::packed","",0,[[],["matchkind",4]]],[11,"clone","","",13,[[],["config",3]]],[11,"clone","","",14,[[],["builder",3]]],[11,"clone","","",15,[[],["searcher",3]]],[11,"clone","aho_corasick","",6,[[],["match",3]]],[11,"default","","",11,[[],["ahocorasickbuilder",3]]],[11,"default","","",1,[[],["matchkind",4]]],[11,"default","aho_corasick::packed","",0,[[],["matchkind",4]]],[11,"default","","",13,[[],["config",3]]],[11,"default","","",14,[[],["builder",3]]],[11,"eq","aho_corasick","",1,[[["matchkind",4]]]],[11,"eq","aho_corasick::packed","",0,[[["matchkind",4]]]],[11,"eq","aho_corasick","",6,[[["match",3]]]],[11,"ne","","",6,[[["match",3]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick::packed","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","","",6,[[]]],[11,"description","","",12,[[]]],[11,"new","","Create a new Aho-Corasick automaton using the default …",7,[[],["ahocorasick",3]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically …",7,[[],["ahocorasick",3]]],[11,"is_match","","Returns true if and only if this automaton matches the …",7,[[["asref",8]]]],[11,"earliest_find","","Returns the location of the first detected match in …",7,[[["asref",8]],[["option",4],["match",3]]]],[11,"find","","Returns the location of the first match according to the …",7,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the …",7,[[],["finditer",3]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given …",7,[[],["findoverlappingiter",3]]],[11,"replace_all","","Replace all matches with a corresponding value in the …",7,[[],["string",3]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding …",7,[[],["vec",3]]],[11,"replace_all_with","","Replace all matches using a closure called on each match. …",7,[[["string",3]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called …",7,[[["vec",3]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the …",7,[[["read",8]],[["streamfinditer",3],["read",8]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in …",7,[[],["result",6]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this …",7,[[],["result",6]]],[11,"match_kind","","Returns the match kind used by this automaton.",7,[[],["matchkind",4]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this …",7,[[]]],[11,"pattern_count","","Return the total number of patterns matched by this …",7,[[]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports …",7,[[]]],[11,"supports_stream","","Returns true if and only if this automaton supports …",7,[[]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this …",7,[[]]],[11,"new","","Create a new builder for configuring an Aho-Corasick …",11,[[],["ahocorasickbuilder",3]]],[11,"build","","Build an Aho-Corasick automaton using the configuration …",11,[[],["ahocorasick",3]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration …",11,[[],[["error",3],["result",4],["ahocorasick",3]]]],[11,"auto_configure","","Automatically configure the settings on this builder …",11,[[],["ahocorasickbuilder",3]]],[11,"match_kind","","Set the desired match semantics.",11,[[["matchkind",4]],["ahocorasickbuilder",3]]],[11,"anchored","","Enable anchored mode, which requires all matches to start …",11,[[],["ahocorasickbuilder",3]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",11,[[],["ahocorasickbuilder",3]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense …",11,[[],["ahocorasickbuilder",3]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a …",11,[[],["ahocorasickbuilder",3]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",11,[[],["ahocorasickbuilder",3]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping …",11,[[],["ahocorasickbuilder",3]]],[11,"premultiply","","Premultiply state identifiers in the transition table. …",11,[[],["ahocorasickbuilder",3]]],[11,"kind","","Return the kind of this error.",12,[[],["errorkind",4]]],[11,"new","aho_corasick::packed","Create a new default configuration. A default …",13,[[],["config",3]]],[11,"builder","","Create a packed builder from this configuration. The …",13,[[],["builder",3]]],[11,"match_kind","","Set the match semantics for this configuration.",13,[[["matchkind",4]],["config",3]]],[11,"new","","Create a new builder for constructing a multi-pattern …",14,[[],["builder",3]]],[11,"build","","Build a searcher from the patterns added to this builder …",14,[[],[["option",4],["searcher",3]]]],[11,"add","","Add the given pattern to this set to match.",14,[[["asref",8]],["builder",3]]],[11,"extend","","Add the given iterator of patterns to this set to match.",14,[[],["builder",3]]],[11,"new","","A convenience function for constructing a searcher from …",15,[[],[["option",4],["searcher",3]]]],[11,"find","","Return the first occurrence of any of the patterns in …",15,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_at","","Return the first occurrence of any of the patterns in …",15,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the …",15,[[],["finditer",3]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",15,[[],["matchkind",4]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required …",15,[[]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this …",15,[[]]]],"p":[[4,"MatchKind"],[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[8,"StateID"],[3,"Match"],[3,"AhoCorasick"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"AhoCorasickBuilder"],[3,"Error"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[3,"FindIter"]]},\
"bimap":{"doc":"A fast two-way bijective map.","i":[[0,"btree","bimap","A bimap backed by two <code>BTreeMap</code>s.",null,null],[3,"BiBTreeMap","bimap::btree","A bimap backed by two <code>BTreeMap</code>s.",null,null],[11,"new","","Creates an empty <code>BiBTreeMap</code>.",0,[[]]],[11,"len","","Returns the number of left-right pairs in the bimap.",0,[[]]],[11,"is_empty","","Returns <code>true</code> if the bimap contains no left-right pairs, …",0,[[]]],[11,"clear","","Removes all left-right pairs from the bimap.",0,[[]]],[11,"iter","","Creates an iterator over the left-right pairs in the …",0,[[],["iter",3]]],[11,"left_values","","Creates an iterator over the left values in the bimap in …",0,[[],["leftvalues",3]]],[11,"right_values","","Creates an iterator over the right values in the bimap in …",0,[[],["rightvalues",3]]],[11,"get_by_left","","Returns a reference to the right value corresponding to …",0,[[],["option",4]]],[11,"get_by_right","","Returns a reference to the left value corresponding to …",0,[[],["option",4]]],[11,"contains_left","","Returns <code>true</code> if the bimap contains the given left value …",0,[[]]],[11,"contains_right","","Returns <code>true</code> if the map contains the given right value …",0,[[]]],[11,"remove_by_left","","Removes the left-right pair corresponding to the given …",0,[[],["option",4]]],[11,"remove_by_right","","Removes the left-right pair corresponding to the given …",0,[[],["option",4]]],[11,"insert","","Inserts the given left-right pair into the bimap.",0,[[],["overwritten",4]]],[11,"insert_no_overwrite","","Inserts the given left-right pair into the bimap without …",0,[[],["result",4]]],[11,"left_range","","Creates an iterator over the left-right pairs lying …",0,[[],["leftrange",3]]],[11,"right_range","","Creates an iterator over the left-right pairs lying …",0,[[],["rightrange",3]]],[3,"IntoIter","","An owning iterator over the left-right pairs in a …",null,null],[3,"Iter","","An iterator over the left-right pairs in a <code>BiBTreeMap</code>.",null,null],[3,"LeftValues","","An iterator over the left values in a <code>BiBTreeMap</code>.",null,null],[3,"RightValues","","An iterator over the right values in a <code>BiBTreeMap</code>.",null,null],[3,"LeftRange","","An iterator over a range of left-right pairs in a …",null,null],[3,"RightRange","","An iterator over a range of left-right pairs in a …",null,null],[0,"hash","bimap","A bimap backed by two <code>HashMap</code>s.",null,null],[3,"BiHashMap","bimap::hash","A bimap backed by two <code>HashMap</code>s.",null,null],[11,"new","","Creates an empty <code>BiHashMap</code>.",1,[[]]],[11,"with_capacity","","Creates a new empty <code>BiHashMap</code> with the given capacity.",1,[[]]],[11,"len","","Returns the number of left-right pairs in the bimap.",1,[[]]],[11,"is_empty","","Returns <code>true</code> if the bimap contains no left-right pairs, …",1,[[]]],[11,"capacity","","Returns a lower bound on the number of left-right pairs …",1,[[]]],[11,"clear","","Removes all left-right pairs from the bimap.",1,[[]]],[11,"iter","","Creates an iterator over the left-right pairs in the …",1,[[],["iter",3]]],[11,"left_values","","Creates an iterator over the left values in the bimap in …",1,[[],["leftvalues",3]]],[11,"right_values","","Creates an iterator over the right values in the bimap in …",1,[[],["rightvalues",3]]],[11,"with_hashers","","Creates a new empty <code>BiHashMap</code> using <code>hash_builder_left</code> to …",1,[[]]],[11,"with_capacity_and_hashers","","Creates a new empty <code>BiHashMap</code> with the given capacity, …",1,[[]]],[11,"get_by_left","","Returns a reference to the right value corresponding to …",1,[[],["option",4]]],[11,"get_by_right","","Returns a reference to the left value corresponding to …",1,[[],["option",4]]],[11,"contains_left","","Returns <code>true</code> if the bimap contains the given left value …",1,[[]]],[11,"contains_right","","Returns <code>true</code> if the map contains the given right value …",1,[[]]],[11,"remove_by_left","","Removes the left-right pair corresponding to the given …",1,[[],["option",4]]],[11,"remove_by_right","","Removes the left-right pair corresponding to the given …",1,[[],["option",4]]],[11,"insert","","Inserts the given left-right pair into the bimap.",1,[[],["overwritten",4]]],[11,"insert_no_overwrite","","Inserts the given left-right pair into the bimap without …",1,[[],["result",4]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[]]],[3,"IntoIter","","An owning iterator over the left-right pairs in a …",null,null],[3,"Iter","","An iterator over the left-right pairs in a <code>BiHashMap</code>.",null,null],[3,"LeftValues","","An iterator over the left values in a <code>BiHashMap</code>.",null,null],[3,"RightValues","","An iterator over the right values in a <code>BiHashMap</code>.",null,null],[6,"BiMap","bimap","Type definition for convenience and compatibility with …",null,null],[4,"Overwritten","","The previous left-right pairs, if any, that were …",null,null],[13,"Neither","","Neither the left nor the right value previously existed …",2,null],[13,"Left","","The left value existed in the bimap, and the previous …",2,null],[13,"Right","","The right value existed in the bimap, and the previous …",2,null],[13,"Pair","","The left-right pair already existed in the bimap, and the …",2,null],[13,"Both","","Both the left and the right value existed in the bimap, …",2,null],[11,"did_overwrite","","Returns a boolean indicating if the <code>Overwritten</code> variant …",2,[[]]],[11,"from","bimap::btree","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","bimap::hash","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","bimap","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","bimap::btree","",3,[[],["option",4]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","bimap::hash","",1,[[["intoiterator",8]]]],[11,"into_iter","bimap::btree","",0,[[],["intoiter",3]]],[11,"into_iter","bimap::hash","",1,[[],["intoiter",3]]],[11,"next","bimap::btree","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","bimap::hash","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"clone","bimap::btree","",0,[[],["bibtreemap",3]]],[11,"clone","bimap::hash","",1,[[],["bihashmap",3]]],[11,"clone","bimap","",2,[[],["overwritten",4]]],[11,"default","bimap::btree","",0,[[],["bibtreemap",3]]],[11,"default","bimap::hash","",1,[[],["bihashmap",3]]],[11,"cmp","bimap::btree","",0,[[],["ordering",4]]],[11,"eq","","",0,[[]]],[11,"eq","bimap::hash","",1,[[]]],[11,"eq","bimap","",2,[[["overwritten",4]]]],[11,"ne","","",2,[[["overwritten",4]]]],[11,"partial_cmp","bimap::btree","",0,[[],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","bimap::hash","",1,[[["formatter",3]],["result",6]]],[11,"fmt","bimap","",2,[[["formatter",3]],["result",6]]],[11,"hash","bimap::btree","",0,[[]]],[11,"hash","bimap","",2,[[]]],[11,"from_iter","bimap::btree","",0,[[],["bibtreemap",3]]],[11,"from_iter","bimap::hash","",1,[[],["bihashmap",3]]]],"p":[[3,"BiBTreeMap"],[3,"BiHashMap"],[4,"Overwritten"],[3,"IntoIter"],[3,"Iter"],[3,"LeftValues"],[3,"RightValues"],[3,"LeftRange"],[3,"RightRange"],[3,"IntoIter"],[3,"Iter"],[3,"LeftValues"],[3,"RightValues"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","i":[[8,"ReadBytesExt","byteorder","Extends <code>Read</code> with methods for reading numbers. (For …",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[8,"WriteBytesExt","","Extends <code>Write</code> with methods for writing numbers. (For …",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[],["result",6]]],[8,"ByteOrder","","<code>ByteOrder</code> describes types that can serialize integers as …",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from <code>buf</code>.",2,[[]]],[11,"read_u24","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.",2,[[]]],[10,"read_u32","","Reads an unsigned 32 bit integer from <code>buf</code>.",2,[[]]],[11,"read_u48","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.",2,[[]]],[10,"read_u64","","Reads an unsigned 64 bit integer from <code>buf</code>.",2,[[]]],[10,"read_u128","","Reads an unsigned 128 bit integer from <code>buf</code>.",2,[[]]],[10,"read_uint","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from <code>buf</code>.",2,[[]]],[10,"write_u16","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_u24","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.",2,[[]]],[10,"write_u32","","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_u48","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.",2,[[]]],[10,"write_u64","","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[10,"write_u128","","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[10,"write_uint","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[10,"write_uint128","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from <code>buf</code>.",2,[[]]],[11,"read_i24","","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.",2,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from <code>buf</code>.",2,[[]]],[11,"read_i48","","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.",2,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from <code>buf</code>.",2,[[]]],[11,"read_i128","","Reads a signed 128 bit integer from <code>buf</code>.",2,[[]]],[11,"read_int","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[]]],[11,"read_int128","","Reads a signed n-bytes integer from <code>buf</code>.",2,[[]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[11,"write_i16","","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_i24","","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.",2,[[]]],[11,"write_i32","","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_i48","","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.",2,[[]]],[11,"write_i64","","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_i128","","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.",2,[[]]],[11,"write_int","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[11,"write_int128","","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.",2,[[]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",2,[[]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",2,[[]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point …",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point …",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a …",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a …",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a …",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to …",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a …",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a …",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a …",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a …",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 …",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 …",2,[[]]],[4,"BigEndian","","Defines big-endian serialization.",null,null],[6,"BE","","A type alias for <code>BigEndian</code>.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"LE","","A type alias for <code>LittleEndian</code>.",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"read_u16","","",3,[[]]],[11,"read_u32","","",3,[[]]],[11,"read_u64","","",3,[[]]],[11,"read_u128","","",3,[[]]],[11,"read_uint","","",3,[[]]],[11,"read_uint128","","",3,[[]]],[11,"write_u16","","",3,[[]]],[11,"write_u32","","",3,[[]]],[11,"write_u64","","",3,[[]]],[11,"write_u128","","",3,[[]]],[11,"write_uint","","",3,[[]]],[11,"write_uint128","","",3,[[]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[]]],[11,"read_u32","","",4,[[]]],[11,"read_u64","","",4,[[]]],[11,"read_u128","","",4,[[]]],[11,"read_uint","","",4,[[]]],[11,"read_uint128","","",4,[[]]],[11,"write_u16","","",4,[[]]],[11,"write_u32","","",4,[[]]],[11,"write_u64","","",4,[[]]],[11,"write_u128","","",4,[[]]],[11,"write_uint","","",4,[[]]],[11,"write_uint128","","",4,[[]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[],["bigendian",4]]],[11,"clone","","",4,[[],["littleendian",4]]],[11,"default","","",3,[[],["bigendian",4]]],[11,"default","","",4,[[],["littleendian",4]]],[11,"cmp","","",3,[[["bigendian",4]],["ordering",4]]],[11,"cmp","","",4,[[["littleendian",4]],["ordering",4]]],[11,"eq","","",3,[[["bigendian",4]]]],[11,"eq","","",4,[[["littleendian",4]]]],[11,"partial_cmp","","",3,[[["bigendian",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["littleendian",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying …",0,[[],["result",6]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying …",0,[[],["result",6]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[],["result",6]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point …",0,[[],["result",6]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point …",0,[[],["result",6]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the …",0,[[],["result",6]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the …",0,[[],["result",6]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the …",0,[[],["result",6]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the …",0,[[],["result",6]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the …",0,[[],["result",6]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the …",0,[[],["result",6]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the …",0,[[],["result",6]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the …",0,[[],["result",6]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the …",0,[[],["result",6]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) …",0,[[],["result",6]]],[11,"read_f32_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) …",0,[[],["result",6]]],[11,"read_f64_into_unchecked","","<strong>DEPRECATED</strong>.",0,[[],["result",6]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying …",1,[[],["result",6]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying …",1,[[],["result",6]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[],["result",6]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating …",1,[[],["result",6]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating …",1,[[],["result",6]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"derive_more":{"doc":"<code>derive_more</code>Rust has lots of builtin traits that are …","i":[],"p":[]},\
"filetime":{"doc":"Timestamps for files in Rust","i":[[3,"FileTime","filetime","A helper structure to represent a timestamp for a file.",null,null],[11,"zero","","Creates a new timestamp representing a 0 time.",0,[[],["filetime",3]]],[11,"now","","Creates a new timestamp representing the current system …",0,[[],["filetime",3]]],[11,"from_unix_time","","Creates a new instance of <code>FileTime</code> with a number of …",0,[[],["filetime",3]]],[11,"from_last_modification_time","","Creates a new timestamp from the last modification time …",0,[[["metadata",3]],["filetime",3]]],[11,"from_last_access_time","","Creates a new timestamp from the last access time listed …",0,[[["metadata",3]],["filetime",3]]],[11,"from_creation_time","","Creates a new timestamp from the creation time listed in …",0,[[["metadata",3]],[["filetime",3],["option",4]]]],[11,"from_system_time","","Creates a new timestamp from the given SystemTime.",0,[[["systemtime",3]],["filetime",3]]],[11,"seconds","","Returns the whole number of seconds represented by this …",0,[[]]],[11,"unix_seconds","","Returns the whole number of seconds represented by this …",0,[[]]],[11,"nanoseconds","","Returns the nanosecond precision of this timestamp.",0,[[]]],[5,"set_file_times","","Set the last access and modification times for a file on …",null,[[["filetime",3]],["result",6]]],[5,"set_file_handle_times","","Set the last access and modification times for a file …",null,[[["filetime",3],["file",3],["option",4]],["result",6]]],[5,"set_symlink_file_times","","Set the last access and modification times for a file on …",null,[[["filetime",3]],["result",6]]],[5,"set_file_mtime","","Set the last modification time for a file on the …",null,[[["filetime",3]],["result",6]]],[5,"set_file_atime","","Set the last access time for a file on the filesystem.",null,[[["filetime",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["systemtime",3]],["filetime",3]]],[11,"clone","","",0,[[],["filetime",3]]],[11,"cmp","","",0,[[["filetime",3]],["ordering",4]]],[11,"eq","","",0,[[["filetime",3]]]],[11,"ne","","",0,[[["filetime",3]]]],[11,"partial_cmp","","",0,[[["filetime",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["filetime",3]]]],[11,"le","","",0,[[["filetime",3]]]],[11,"gt","","",0,[[["filetime",3]]]],[11,"ge","","",0,[[["filetime",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]]],"p":[[3,"FileTime"]]},\
"fxhash":{"doc":"Fx HashThis hashing algorithm was extracted from the …","i":[[6,"FxBuildHasher","fxhash","A builder for default Fx hashers.",null,null],[6,"FxHashMap","","A <code>HashMap</code> using a default Fx hasher.",null,null],[6,"FxHashSet","","A <code>HashSet</code> using a default Fx hasher.",null,null],[3,"FxHasher","","This hashing algorithm was extracted from the Rustc …",null,null],[3,"FxHasher64","","This hashing algorithm was extracted from the Rustc …",null,null],[3,"FxHasher32","","This hashing algorithm was extracted from the Rustc …",null,null],[5,"hash64","","A convenience function for when you need a quick 64-bit …",null,[[]]],[5,"hash32","","A convenience function for when you need a quick 32-bit …",null,[[]]],[5,"hash","","A convenience function for when you need a quick usize …",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["fxhasher",3]]],[11,"clone","","",1,[[],["fxhasher64",3]]],[11,"clone","","",2,[[],["fxhasher32",3]]],[11,"default","","",0,[[],["fxhasher",3]]],[11,"default","","",1,[[],["fxhasher64",3]]],[11,"default","","",2,[[],["fxhasher32",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"write","","",0,[[]]],[11,"write_u8","","",0,[[]]],[11,"write_u16","","",0,[[]]],[11,"write_u32","","",0,[[]]],[11,"write_u64","","",0,[[]]],[11,"write_usize","","",0,[[]]],[11,"finish","","",0,[[]]],[11,"write","","",1,[[]]],[11,"write_u8","","",1,[[]]],[11,"write_u16","","",1,[[]]],[11,"write_u32","","",1,[[]]],[11,"write_u64","","",1,[[]]],[11,"write_usize","","",1,[[]]],[11,"finish","","",1,[[]]],[11,"write","","",2,[[]]],[11,"write_u8","","",2,[[]]],[11,"write_u16","","",2,[[]]],[11,"write_u32","","",2,[[]]],[11,"write_u64","","",2,[[]]],[11,"write_usize","","",2,[[]]],[11,"finish","","",2,[[]]]],"p":[[3,"FxHasher"],[3,"FxHasher64"],[3,"FxHasher32"]]},\
"getrandom":{"doc":"Interface to the random number generator of the operating …","i":[[3,"Error","getrandom","A small and <code>no_std</code> compatible error type.",null,null],[5,"getrandom","","Fill <code>dest</code> with random bytes from the system\'s preferred …",null,[[],[["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",0,[[],["option",4]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]]],"p":[[3,"Error"]]},\
"glam":{"doc":"glam<code>glam</code> is a simple and fast linear algebra library for …","i":[[0,"swizzles","glam","",null,null],[8,"Vec2Swizzles","glam::swizzles","",null,null],[10,"xxxx","","",0,[[],["vec4",3]]],[10,"xxxy","","",0,[[],["vec4",3]]],[10,"xxyx","","",0,[[],["vec4",3]]],[10,"xxyy","","",0,[[],["vec4",3]]],[10,"xyxx","","",0,[[],["vec4",3]]],[10,"xyxy","","",0,[[],["vec4",3]]],[10,"xyyx","","",0,[[],["vec4",3]]],[10,"xyyy","","",0,[[],["vec4",3]]],[10,"yxxx","","",0,[[],["vec4",3]]],[10,"yxxy","","",0,[[],["vec4",3]]],[10,"yxyx","","",0,[[],["vec4",3]]],[10,"yxyy","","",0,[[],["vec4",3]]],[10,"yyxx","","",0,[[],["vec4",3]]],[10,"yyxy","","",0,[[],["vec4",3]]],[10,"yyyx","","",0,[[],["vec4",3]]],[10,"yyyy","","",0,[[],["vec4",3]]],[10,"xxx","","",0,[[],["vec3",3]]],[10,"xxy","","",0,[[],["vec3",3]]],[10,"xyx","","",0,[[],["vec3",3]]],[10,"xyy","","",0,[[],["vec3",3]]],[10,"yxx","","",0,[[],["vec3",3]]],[10,"yxy","","",0,[[],["vec3",3]]],[10,"yyx","","",0,[[],["vec3",3]]],[10,"yyy","","",0,[[],["vec3",3]]],[10,"xx","","",0,[[],["vec2",3]]],[10,"yx","","",0,[[],["vec2",3]]],[10,"yy","","",0,[[],["vec2",3]]],[8,"Vec3ASwizzles","","",null,null],[10,"xxxx","","",1,[[],["vec4",3]]],[10,"xxxy","","",1,[[],["vec4",3]]],[10,"xxxz","","",1,[[],["vec4",3]]],[10,"xxyx","","",1,[[],["vec4",3]]],[10,"xxyy","","",1,[[],["vec4",3]]],[10,"xxyz","","",1,[[],["vec4",3]]],[10,"xxzx","","",1,[[],["vec4",3]]],[10,"xxzy","","",1,[[],["vec4",3]]],[10,"xxzz","","",1,[[],["vec4",3]]],[10,"xyxx","","",1,[[],["vec4",3]]],[10,"xyxy","","",1,[[],["vec4",3]]],[10,"xyxz","","",1,[[],["vec4",3]]],[10,"xyyx","","",1,[[],["vec4",3]]],[10,"xyyy","","",1,[[],["vec4",3]]],[10,"xyyz","","",1,[[],["vec4",3]]],[10,"xyzx","","",1,[[],["vec4",3]]],[10,"xyzy","","",1,[[],["vec4",3]]],[10,"xyzz","","",1,[[],["vec4",3]]],[10,"xzxx","","",1,[[],["vec4",3]]],[10,"xzxy","","",1,[[],["vec4",3]]],[10,"xzxz","","",1,[[],["vec4",3]]],[10,"xzyx","","",1,[[],["vec4",3]]],[10,"xzyy","","",1,[[],["vec4",3]]],[10,"xzyz","","",1,[[],["vec4",3]]],[10,"xzzx","","",1,[[],["vec4",3]]],[10,"xzzy","","",1,[[],["vec4",3]]],[10,"xzzz","","",1,[[],["vec4",3]]],[10,"yxxx","","",1,[[],["vec4",3]]],[10,"yxxy","","",1,[[],["vec4",3]]],[10,"yxxz","","",1,[[],["vec4",3]]],[10,"yxyx","","",1,[[],["vec4",3]]],[10,"yxyy","","",1,[[],["vec4",3]]],[10,"yxyz","","",1,[[],["vec4",3]]],[10,"yxzx","","",1,[[],["vec4",3]]],[10,"yxzy","","",1,[[],["vec4",3]]],[10,"yxzz","","",1,[[],["vec4",3]]],[10,"yyxx","","",1,[[],["vec4",3]]],[10,"yyxy","","",1,[[],["vec4",3]]],[10,"yyxz","","",1,[[],["vec4",3]]],[10,"yyyx","","",1,[[],["vec4",3]]],[10,"yyyy","","",1,[[],["vec4",3]]],[10,"yyyz","","",1,[[],["vec4",3]]],[10,"yyzx","","",1,[[],["vec4",3]]],[10,"yyzy","","",1,[[],["vec4",3]]],[10,"yyzz","","",1,[[],["vec4",3]]],[10,"yzxx","","",1,[[],["vec4",3]]],[10,"yzxy","","",1,[[],["vec4",3]]],[10,"yzxz","","",1,[[],["vec4",3]]],[10,"yzyx","","",1,[[],["vec4",3]]],[10,"yzyy","","",1,[[],["vec4",3]]],[10,"yzyz","","",1,[[],["vec4",3]]],[10,"yzzx","","",1,[[],["vec4",3]]],[10,"yzzy","","",1,[[],["vec4",3]]],[10,"yzzz","","",1,[[],["vec4",3]]],[10,"zxxx","","",1,[[],["vec4",3]]],[10,"zxxy","","",1,[[],["vec4",3]]],[10,"zxxz","","",1,[[],["vec4",3]]],[10,"zxyx","","",1,[[],["vec4",3]]],[10,"zxyy","","",1,[[],["vec4",3]]],[10,"zxyz","","",1,[[],["vec4",3]]],[10,"zxzx","","",1,[[],["vec4",3]]],[10,"zxzy","","",1,[[],["vec4",3]]],[10,"zxzz","","",1,[[],["vec4",3]]],[10,"zyxx","","",1,[[],["vec4",3]]],[10,"zyxy","","",1,[[],["vec4",3]]],[10,"zyxz","","",1,[[],["vec4",3]]],[10,"zyyx","","",1,[[],["vec4",3]]],[10,"zyyy","","",1,[[],["vec4",3]]],[10,"zyyz","","",1,[[],["vec4",3]]],[10,"zyzx","","",1,[[],["vec4",3]]],[10,"zyzy","","",1,[[],["vec4",3]]],[10,"zyzz","","",1,[[],["vec4",3]]],[10,"zzxx","","",1,[[],["vec4",3]]],[10,"zzxy","","",1,[[],["vec4",3]]],[10,"zzxz","","",1,[[],["vec4",3]]],[10,"zzyx","","",1,[[],["vec4",3]]],[10,"zzyy","","",1,[[],["vec4",3]]],[10,"zzyz","","",1,[[],["vec4",3]]],[10,"zzzx","","",1,[[],["vec4",3]]],[10,"zzzy","","",1,[[],["vec4",3]]],[10,"zzzz","","",1,[[],["vec4",3]]],[10,"xxx","","",1,[[],["vec3a",3]]],[10,"xxy","","",1,[[],["vec3a",3]]],[10,"xxz","","",1,[[],["vec3a",3]]],[10,"xyx","","",1,[[],["vec3a",3]]],[10,"xyy","","",1,[[],["vec3a",3]]],[10,"xzx","","",1,[[],["vec3a",3]]],[10,"xzy","","",1,[[],["vec3a",3]]],[10,"xzz","","",1,[[],["vec3a",3]]],[10,"yxx","","",1,[[],["vec3a",3]]],[10,"yxy","","",1,[[],["vec3a",3]]],[10,"yxz","","",1,[[],["vec3a",3]]],[10,"yyx","","",1,[[],["vec3a",3]]],[10,"yyy","","",1,[[],["vec3a",3]]],[10,"yyz","","",1,[[],["vec3a",3]]],[10,"yzx","","",1,[[],["vec3a",3]]],[10,"yzy","","",1,[[],["vec3a",3]]],[10,"yzz","","",1,[[],["vec3a",3]]],[10,"zxx","","",1,[[],["vec3a",3]]],[10,"zxy","","",1,[[],["vec3a",3]]],[10,"zxz","","",1,[[],["vec3a",3]]],[10,"zyx","","",1,[[],["vec3a",3]]],[10,"zyy","","",1,[[],["vec3a",3]]],[10,"zyz","","",1,[[],["vec3a",3]]],[10,"zzx","","",1,[[],["vec3a",3]]],[10,"zzy","","",1,[[],["vec3a",3]]],[10,"zzz","","",1,[[],["vec3a",3]]],[10,"xx","","",1,[[],["vec2",3]]],[10,"xy","","",1,[[],["vec2",3]]],[10,"xz","","",1,[[],["vec2",3]]],[10,"yx","","",1,[[],["vec2",3]]],[10,"yy","","",1,[[],["vec2",3]]],[10,"yz","","",1,[[],["vec2",3]]],[10,"zx","","",1,[[],["vec2",3]]],[10,"zy","","",1,[[],["vec2",3]]],[10,"zz","","",1,[[],["vec2",3]]],[8,"Vec3Swizzles","","",null,null],[10,"xxxx","","",2,[[],["vec4",3]]],[10,"xxxy","","",2,[[],["vec4",3]]],[10,"xxxz","","",2,[[],["vec4",3]]],[10,"xxyx","","",2,[[],["vec4",3]]],[10,"xxyy","","",2,[[],["vec4",3]]],[10,"xxyz","","",2,[[],["vec4",3]]],[10,"xxzx","","",2,[[],["vec4",3]]],[10,"xxzy","","",2,[[],["vec4",3]]],[10,"xxzz","","",2,[[],["vec4",3]]],[10,"xyxx","","",2,[[],["vec4",3]]],[10,"xyxy","","",2,[[],["vec4",3]]],[10,"xyxz","","",2,[[],["vec4",3]]],[10,"xyyx","","",2,[[],["vec4",3]]],[10,"xyyy","","",2,[[],["vec4",3]]],[10,"xyyz","","",2,[[],["vec4",3]]],[10,"xyzx","","",2,[[],["vec4",3]]],[10,"xyzy","","",2,[[],["vec4",3]]],[10,"xyzz","","",2,[[],["vec4",3]]],[10,"xzxx","","",2,[[],["vec4",3]]],[10,"xzxy","","",2,[[],["vec4",3]]],[10,"xzxz","","",2,[[],["vec4",3]]],[10,"xzyx","","",2,[[],["vec4",3]]],[10,"xzyy","","",2,[[],["vec4",3]]],[10,"xzyz","","",2,[[],["vec4",3]]],[10,"xzzx","","",2,[[],["vec4",3]]],[10,"xzzy","","",2,[[],["vec4",3]]],[10,"xzzz","","",2,[[],["vec4",3]]],[10,"yxxx","","",2,[[],["vec4",3]]],[10,"yxxy","","",2,[[],["vec4",3]]],[10,"yxxz","","",2,[[],["vec4",3]]],[10,"yxyx","","",2,[[],["vec4",3]]],[10,"yxyy","","",2,[[],["vec4",3]]],[10,"yxyz","","",2,[[],["vec4",3]]],[10,"yxzx","","",2,[[],["vec4",3]]],[10,"yxzy","","",2,[[],["vec4",3]]],[10,"yxzz","","",2,[[],["vec4",3]]],[10,"yyxx","","",2,[[],["vec4",3]]],[10,"yyxy","","",2,[[],["vec4",3]]],[10,"yyxz","","",2,[[],["vec4",3]]],[10,"yyyx","","",2,[[],["vec4",3]]],[10,"yyyy","","",2,[[],["vec4",3]]],[10,"yyyz","","",2,[[],["vec4",3]]],[10,"yyzx","","",2,[[],["vec4",3]]],[10,"yyzy","","",2,[[],["vec4",3]]],[10,"yyzz","","",2,[[],["vec4",3]]],[10,"yzxx","","",2,[[],["vec4",3]]],[10,"yzxy","","",2,[[],["vec4",3]]],[10,"yzxz","","",2,[[],["vec4",3]]],[10,"yzyx","","",2,[[],["vec4",3]]],[10,"yzyy","","",2,[[],["vec4",3]]],[10,"yzyz","","",2,[[],["vec4",3]]],[10,"yzzx","","",2,[[],["vec4",3]]],[10,"yzzy","","",2,[[],["vec4",3]]],[10,"yzzz","","",2,[[],["vec4",3]]],[10,"zxxx","","",2,[[],["vec4",3]]],[10,"zxxy","","",2,[[],["vec4",3]]],[10,"zxxz","","",2,[[],["vec4",3]]],[10,"zxyx","","",2,[[],["vec4",3]]],[10,"zxyy","","",2,[[],["vec4",3]]],[10,"zxyz","","",2,[[],["vec4",3]]],[10,"zxzx","","",2,[[],["vec4",3]]],[10,"zxzy","","",2,[[],["vec4",3]]],[10,"zxzz","","",2,[[],["vec4",3]]],[10,"zyxx","","",2,[[],["vec4",3]]],[10,"zyxy","","",2,[[],["vec4",3]]],[10,"zyxz","","",2,[[],["vec4",3]]],[10,"zyyx","","",2,[[],["vec4",3]]],[10,"zyyy","","",2,[[],["vec4",3]]],[10,"zyyz","","",2,[[],["vec4",3]]],[10,"zyzx","","",2,[[],["vec4",3]]],[10,"zyzy","","",2,[[],["vec4",3]]],[10,"zyzz","","",2,[[],["vec4",3]]],[10,"zzxx","","",2,[[],["vec4",3]]],[10,"zzxy","","",2,[[],["vec4",3]]],[10,"zzxz","","",2,[[],["vec4",3]]],[10,"zzyx","","",2,[[],["vec4",3]]],[10,"zzyy","","",2,[[],["vec4",3]]],[10,"zzyz","","",2,[[],["vec4",3]]],[10,"zzzx","","",2,[[],["vec4",3]]],[10,"zzzy","","",2,[[],["vec4",3]]],[10,"zzzz","","",2,[[],["vec4",3]]],[10,"xxx","","",2,[[],["vec3",3]]],[10,"xxy","","",2,[[],["vec3",3]]],[10,"xxz","","",2,[[],["vec3",3]]],[10,"xyx","","",2,[[],["vec3",3]]],[10,"xyy","","",2,[[],["vec3",3]]],[10,"xzx","","",2,[[],["vec3",3]]],[10,"xzy","","",2,[[],["vec3",3]]],[10,"xzz","","",2,[[],["vec3",3]]],[10,"yxx","","",2,[[],["vec3",3]]],[10,"yxy","","",2,[[],["vec3",3]]],[10,"yxz","","",2,[[],["vec3",3]]],[10,"yyx","","",2,[[],["vec3",3]]],[10,"yyy","","",2,[[],["vec3",3]]],[10,"yyz","","",2,[[],["vec3",3]]],[10,"yzx","","",2,[[],["vec3",3]]],[10,"yzy","","",2,[[],["vec3",3]]],[10,"yzz","","",2,[[],["vec3",3]]],[10,"zxx","","",2,[[],["vec3",3]]],[10,"zxy","","",2,[[],["vec3",3]]],[10,"zxz","","",2,[[],["vec3",3]]],[10,"zyx","","",2,[[],["vec3",3]]],[10,"zyy","","",2,[[],["vec3",3]]],[10,"zyz","","",2,[[],["vec3",3]]],[10,"zzx","","",2,[[],["vec3",3]]],[10,"zzy","","",2,[[],["vec3",3]]],[10,"zzz","","",2,[[],["vec3",3]]],[10,"xx","","",2,[[],["vec2",3]]],[10,"xy","","",2,[[],["vec2",3]]],[10,"xz","","",2,[[],["vec2",3]]],[10,"yx","","",2,[[],["vec2",3]]],[10,"yy","","",2,[[],["vec2",3]]],[10,"yz","","",2,[[],["vec2",3]]],[10,"zx","","",2,[[],["vec2",3]]],[10,"zy","","",2,[[],["vec2",3]]],[10,"zz","","",2,[[],["vec2",3]]],[8,"Vec4Swizzles","","",null,null],[10,"xxxx","","",3,[[],["vec4",3]]],[10,"xxxy","","",3,[[],["vec4",3]]],[10,"xxxz","","",3,[[],["vec4",3]]],[10,"xxxw","","",3,[[],["vec4",3]]],[10,"xxyx","","",3,[[],["vec4",3]]],[10,"xxyy","","",3,[[],["vec4",3]]],[10,"xxyz","","",3,[[],["vec4",3]]],[10,"xxyw","","",3,[[],["vec4",3]]],[10,"xxzx","","",3,[[],["vec4",3]]],[10,"xxzy","","",3,[[],["vec4",3]]],[10,"xxzz","","",3,[[],["vec4",3]]],[10,"xxzw","","",3,[[],["vec4",3]]],[10,"xxwx","","",3,[[],["vec4",3]]],[10,"xxwy","","",3,[[],["vec4",3]]],[10,"xxwz","","",3,[[],["vec4",3]]],[10,"xxww","","",3,[[],["vec4",3]]],[10,"xyxx","","",3,[[],["vec4",3]]],[10,"xyxy","","",3,[[],["vec4",3]]],[10,"xyxz","","",3,[[],["vec4",3]]],[10,"xyxw","","",3,[[],["vec4",3]]],[10,"xyyx","","",3,[[],["vec4",3]]],[10,"xyyy","","",3,[[],["vec4",3]]],[10,"xyyz","","",3,[[],["vec4",3]]],[10,"xyyw","","",3,[[],["vec4",3]]],[10,"xyzx","","",3,[[],["vec4",3]]],[10,"xyzy","","",3,[[],["vec4",3]]],[10,"xyzz","","",3,[[],["vec4",3]]],[10,"xywx","","",3,[[],["vec4",3]]],[10,"xywy","","",3,[[],["vec4",3]]],[10,"xywz","","",3,[[],["vec4",3]]],[10,"xyww","","",3,[[],["vec4",3]]],[10,"xzxx","","",3,[[],["vec4",3]]],[10,"xzxy","","",3,[[],["vec4",3]]],[10,"xzxz","","",3,[[],["vec4",3]]],[10,"xzxw","","",3,[[],["vec4",3]]],[10,"xzyx","","",3,[[],["vec4",3]]],[10,"xzyy","","",3,[[],["vec4",3]]],[10,"xzyz","","",3,[[],["vec4",3]]],[10,"xzyw","","",3,[[],["vec4",3]]],[10,"xzzx","","",3,[[],["vec4",3]]],[10,"xzzy","","",3,[[],["vec4",3]]],[10,"xzzz","","",3,[[],["vec4",3]]],[10,"xzzw","","",3,[[],["vec4",3]]],[10,"xzwx","","",3,[[],["vec4",3]]],[10,"xzwy","","",3,[[],["vec4",3]]],[10,"xzwz","","",3,[[],["vec4",3]]],[10,"xzww","","",3,[[],["vec4",3]]],[10,"xwxx","","",3,[[],["vec4",3]]],[10,"xwxy","","",3,[[],["vec4",3]]],[10,"xwxz","","",3,[[],["vec4",3]]],[10,"xwxw","","",3,[[],["vec4",3]]],[10,"xwyx","","",3,[[],["vec4",3]]],[10,"xwyy","","",3,[[],["vec4",3]]],[10,"xwyz","","",3,[[],["vec4",3]]],[10,"xwyw","","",3,[[],["vec4",3]]],[10,"xwzx","","",3,[[],["vec4",3]]],[10,"xwzy","","",3,[[],["vec4",3]]],[10,"xwzz","","",3,[[],["vec4",3]]],[10,"xwzw","","",3,[[],["vec4",3]]],[10,"xwwx","","",3,[[],["vec4",3]]],[10,"xwwy","","",3,[[],["vec4",3]]],[10,"xwwz","","",3,[[],["vec4",3]]],[10,"xwww","","",3,[[],["vec4",3]]],[10,"yxxx","","",3,[[],["vec4",3]]],[10,"yxxy","","",3,[[],["vec4",3]]],[10,"yxxz","","",3,[[],["vec4",3]]],[10,"yxxw","","",3,[[],["vec4",3]]],[10,"yxyx","","",3,[[],["vec4",3]]],[10,"yxyy","","",3,[[],["vec4",3]]],[10,"yxyz","","",3,[[],["vec4",3]]],[10,"yxyw","","",3,[[],["vec4",3]]],[10,"yxzx","","",3,[[],["vec4",3]]],[10,"yxzy","","",3,[[],["vec4",3]]],[10,"yxzz","","",3,[[],["vec4",3]]],[10,"yxzw","","",3,[[],["vec4",3]]],[10,"yxwx","","",3,[[],["vec4",3]]],[10,"yxwy","","",3,[[],["vec4",3]]],[10,"yxwz","","",3,[[],["vec4",3]]],[10,"yxww","","",3,[[],["vec4",3]]],[10,"yyxx","","",3,[[],["vec4",3]]],[10,"yyxy","","",3,[[],["vec4",3]]],[10,"yyxz","","",3,[[],["vec4",3]]],[10,"yyxw","","",3,[[],["vec4",3]]],[10,"yyyx","","",3,[[],["vec4",3]]],[10,"yyyy","","",3,[[],["vec4",3]]],[10,"yyyz","","",3,[[],["vec4",3]]],[10,"yyyw","","",3,[[],["vec4",3]]],[10,"yyzx","","",3,[[],["vec4",3]]],[10,"yyzy","","",3,[[],["vec4",3]]],[10,"yyzz","","",3,[[],["vec4",3]]],[10,"yyzw","","",3,[[],["vec4",3]]],[10,"yywx","","",3,[[],["vec4",3]]],[10,"yywy","","",3,[[],["vec4",3]]],[10,"yywz","","",3,[[],["vec4",3]]],[10,"yyww","","",3,[[],["vec4",3]]],[10,"yzxx","","",3,[[],["vec4",3]]],[10,"yzxy","","",3,[[],["vec4",3]]],[10,"yzxz","","",3,[[],["vec4",3]]],[10,"yzxw","","",3,[[],["vec4",3]]],[10,"yzyx","","",3,[[],["vec4",3]]],[10,"yzyy","","",3,[[],["vec4",3]]],[10,"yzyz","","",3,[[],["vec4",3]]],[10,"yzyw","","",3,[[],["vec4",3]]],[10,"yzzx","","",3,[[],["vec4",3]]],[10,"yzzy","","",3,[[],["vec4",3]]],[10,"yzzz","","",3,[[],["vec4",3]]],[10,"yzzw","","",3,[[],["vec4",3]]],[10,"yzwx","","",3,[[],["vec4",3]]],[10,"yzwy","","",3,[[],["vec4",3]]],[10,"yzwz","","",3,[[],["vec4",3]]],[10,"yzww","","",3,[[],["vec4",3]]],[10,"ywxx","","",3,[[],["vec4",3]]],[10,"ywxy","","",3,[[],["vec4",3]]],[10,"ywxz","","",3,[[],["vec4",3]]],[10,"ywxw","","",3,[[],["vec4",3]]],[10,"ywyx","","",3,[[],["vec4",3]]],[10,"ywyy","","",3,[[],["vec4",3]]],[10,"ywyz","","",3,[[],["vec4",3]]],[10,"ywyw","","",3,[[],["vec4",3]]],[10,"ywzx","","",3,[[],["vec4",3]]],[10,"ywzy","","",3,[[],["vec4",3]]],[10,"ywzz","","",3,[[],["vec4",3]]],[10,"ywzw","","",3,[[],["vec4",3]]],[10,"ywwx","","",3,[[],["vec4",3]]],[10,"ywwy","","",3,[[],["vec4",3]]],[10,"ywwz","","",3,[[],["vec4",3]]],[10,"ywww","","",3,[[],["vec4",3]]],[10,"zxxx","","",3,[[],["vec4",3]]],[10,"zxxy","","",3,[[],["vec4",3]]],[10,"zxxz","","",3,[[],["vec4",3]]],[10,"zxxw","","",3,[[],["vec4",3]]],[10,"zxyx","","",3,[[],["vec4",3]]],[10,"zxyy","","",3,[[],["vec4",3]]],[10,"zxyz","","",3,[[],["vec4",3]]],[10,"zxyw","","",3,[[],["vec4",3]]],[10,"zxzx","","",3,[[],["vec4",3]]],[10,"zxzy","","",3,[[],["vec4",3]]],[10,"zxzz","","",3,[[],["vec4",3]]],[10,"zxzw","","",3,[[],["vec4",3]]],[10,"zxwx","","",3,[[],["vec4",3]]],[10,"zxwy","","",3,[[],["vec4",3]]],[10,"zxwz","","",3,[[],["vec4",3]]],[10,"zxww","","",3,[[],["vec4",3]]],[10,"zyxx","","",3,[[],["vec4",3]]],[10,"zyxy","","",3,[[],["vec4",3]]],[10,"zyxz","","",3,[[],["vec4",3]]],[10,"zyxw","","",3,[[],["vec4",3]]],[10,"zyyx","","",3,[[],["vec4",3]]],[10,"zyyy","","",3,[[],["vec4",3]]],[10,"zyyz","","",3,[[],["vec4",3]]],[10,"zyyw","","",3,[[],["vec4",3]]],[10,"zyzx","","",3,[[],["vec4",3]]],[10,"zyzy","","",3,[[],["vec4",3]]],[10,"zyzz","","",3,[[],["vec4",3]]],[10,"zyzw","","",3,[[],["vec4",3]]],[10,"zywx","","",3,[[],["vec4",3]]],[10,"zywy","","",3,[[],["vec4",3]]],[10,"zywz","","",3,[[],["vec4",3]]],[10,"zyww","","",3,[[],["vec4",3]]],[10,"zzxx","","",3,[[],["vec4",3]]],[10,"zzxy","","",3,[[],["vec4",3]]],[10,"zzxz","","",3,[[],["vec4",3]]],[10,"zzxw","","",3,[[],["vec4",3]]],[10,"zzyx","","",3,[[],["vec4",3]]],[10,"zzyy","","",3,[[],["vec4",3]]],[10,"zzyz","","",3,[[],["vec4",3]]],[10,"zzyw","","",3,[[],["vec4",3]]],[10,"zzzx","","",3,[[],["vec4",3]]],[10,"zzzy","","",3,[[],["vec4",3]]],[10,"zzzz","","",3,[[],["vec4",3]]],[10,"zzzw","","",3,[[],["vec4",3]]],[10,"zzwx","","",3,[[],["vec4",3]]],[10,"zzwy","","",3,[[],["vec4",3]]],[10,"zzwz","","",3,[[],["vec4",3]]],[10,"zzww","","",3,[[],["vec4",3]]],[10,"zwxx","","",3,[[],["vec4",3]]],[10,"zwxy","","",3,[[],["vec4",3]]],[10,"zwxz","","",3,[[],["vec4",3]]],[10,"zwxw","","",3,[[],["vec4",3]]],[10,"zwyx","","",3,[[],["vec4",3]]],[10,"zwyy","","",3,[[],["vec4",3]]],[10,"zwyz","","",3,[[],["vec4",3]]],[10,"zwyw","","",3,[[],["vec4",3]]],[10,"zwzx","","",3,[[],["vec4",3]]],[10,"zwzy","","",3,[[],["vec4",3]]],[10,"zwzz","","",3,[[],["vec4",3]]],[10,"zwzw","","",3,[[],["vec4",3]]],[10,"zwwx","","",3,[[],["vec4",3]]],[10,"zwwy","","",3,[[],["vec4",3]]],[10,"zwwz","","",3,[[],["vec4",3]]],[10,"zwww","","",3,[[],["vec4",3]]],[10,"wxxx","","",3,[[],["vec4",3]]],[10,"wxxy","","",3,[[],["vec4",3]]],[10,"wxxz","","",3,[[],["vec4",3]]],[10,"wxxw","","",3,[[],["vec4",3]]],[10,"wxyx","","",3,[[],["vec4",3]]],[10,"wxyy","","",3,[[],["vec4",3]]],[10,"wxyz","","",3,[[],["vec4",3]]],[10,"wxyw","","",3,[[],["vec4",3]]],[10,"wxzx","","",3,[[],["vec4",3]]],[10,"wxzy","","",3,[[],["vec4",3]]],[10,"wxzz","","",3,[[],["vec4",3]]],[10,"wxzw","","",3,[[],["vec4",3]]],[10,"wxwx","","",3,[[],["vec4",3]]],[10,"wxwy","","",3,[[],["vec4",3]]],[10,"wxwz","","",3,[[],["vec4",3]]],[10,"wxww","","",3,[[],["vec4",3]]],[10,"wyxx","","",3,[[],["vec4",3]]],[10,"wyxy","","",3,[[],["vec4",3]]],[10,"wyxz","","",3,[[],["vec4",3]]],[10,"wyxw","","",3,[[],["vec4",3]]],[10,"wyyx","","",3,[[],["vec4",3]]],[10,"wyyy","","",3,[[],["vec4",3]]],[10,"wyyz","","",3,[[],["vec4",3]]],[10,"wyyw","","",3,[[],["vec4",3]]],[10,"wyzx","","",3,[[],["vec4",3]]],[10,"wyzy","","",3,[[],["vec4",3]]],[10,"wyzz","","",3,[[],["vec4",3]]],[10,"wyzw","","",3,[[],["vec4",3]]],[10,"wywx","","",3,[[],["vec4",3]]],[10,"wywy","","",3,[[],["vec4",3]]],[10,"wywz","","",3,[[],["vec4",3]]],[10,"wyww","","",3,[[],["vec4",3]]],[10,"wzxx","","",3,[[],["vec4",3]]],[10,"wzxy","","",3,[[],["vec4",3]]],[10,"wzxz","","",3,[[],["vec4",3]]],[10,"wzxw","","",3,[[],["vec4",3]]],[10,"wzyx","","",3,[[],["vec4",3]]],[10,"wzyy","","",3,[[],["vec4",3]]],[10,"wzyz","","",3,[[],["vec4",3]]],[10,"wzyw","","",3,[[],["vec4",3]]],[10,"wzzx","","",3,[[],["vec4",3]]],[10,"wzzy","","",3,[[],["vec4",3]]],[10,"wzzz","","",3,[[],["vec4",3]]],[10,"wzzw","","",3,[[],["vec4",3]]],[10,"wzwx","","",3,[[],["vec4",3]]],[10,"wzwy","","",3,[[],["vec4",3]]],[10,"wzwz","","",3,[[],["vec4",3]]],[10,"wzww","","",3,[[],["vec4",3]]],[10,"wwxx","","",3,[[],["vec4",3]]],[10,"wwxy","","",3,[[],["vec4",3]]],[10,"wwxz","","",3,[[],["vec4",3]]],[10,"wwxw","","",3,[[],["vec4",3]]],[10,"wwyx","","",3,[[],["vec4",3]]],[10,"wwyy","","",3,[[],["vec4",3]]],[10,"wwyz","","",3,[[],["vec4",3]]],[10,"wwyw","","",3,[[],["vec4",3]]],[10,"wwzx","","",3,[[],["vec4",3]]],[10,"wwzy","","",3,[[],["vec4",3]]],[10,"wwzz","","",3,[[],["vec4",3]]],[10,"wwzw","","",3,[[],["vec4",3]]],[10,"wwwx","","",3,[[],["vec4",3]]],[10,"wwwy","","",3,[[],["vec4",3]]],[10,"wwwz","","",3,[[],["vec4",3]]],[10,"wwww","","",3,[[],["vec4",3]]],[10,"xxx","","",3,[[],["vec3",3]]],[10,"xxy","","",3,[[],["vec3",3]]],[10,"xxz","","",3,[[],["vec3",3]]],[10,"xxw","","",3,[[],["vec3",3]]],[10,"xyx","","",3,[[],["vec3",3]]],[10,"xyy","","",3,[[],["vec3",3]]],[10,"xyz","","",3,[[],["vec3",3]]],[10,"xyw","","",3,[[],["vec3",3]]],[10,"xzx","","",3,[[],["vec3",3]]],[10,"xzy","","",3,[[],["vec3",3]]],[10,"xzz","","",3,[[],["vec3",3]]],[10,"xzw","","",3,[[],["vec3",3]]],[10,"xwx","","",3,[[],["vec3",3]]],[10,"xwy","","",3,[[],["vec3",3]]],[10,"xwz","","",3,[[],["vec3",3]]],[10,"xww","","",3,[[],["vec3",3]]],[10,"yxx","","",3,[[],["vec3",3]]],[10,"yxy","","",3,[[],["vec3",3]]],[10,"yxz","","",3,[[],["vec3",3]]],[10,"yxw","","",3,[[],["vec3",3]]],[10,"yyx","","",3,[[],["vec3",3]]],[10,"yyy","","",3,[[],["vec3",3]]],[10,"yyz","","",3,[[],["vec3",3]]],[10,"yyw","","",3,[[],["vec3",3]]],[10,"yzx","","",3,[[],["vec3",3]]],[10,"yzy","","",3,[[],["vec3",3]]],[10,"yzz","","",3,[[],["vec3",3]]],[10,"yzw","","",3,[[],["vec3",3]]],[10,"ywx","","",3,[[],["vec3",3]]],[10,"ywy","","",3,[[],["vec3",3]]],[10,"ywz","","",3,[[],["vec3",3]]],[10,"yww","","",3,[[],["vec3",3]]],[10,"zxx","","",3,[[],["vec3",3]]],[10,"zxy","","",3,[[],["vec3",3]]],[10,"zxz","","",3,[[],["vec3",3]]],[10,"zxw","","",3,[[],["vec3",3]]],[10,"zyx","","",3,[[],["vec3",3]]],[10,"zyy","","",3,[[],["vec3",3]]],[10,"zyz","","",3,[[],["vec3",3]]],[10,"zyw","","",3,[[],["vec3",3]]],[10,"zzx","","",3,[[],["vec3",3]]],[10,"zzy","","",3,[[],["vec3",3]]],[10,"zzz","","",3,[[],["vec3",3]]],[10,"zzw","","",3,[[],["vec3",3]]],[10,"zwx","","",3,[[],["vec3",3]]],[10,"zwy","","",3,[[],["vec3",3]]],[10,"zwz","","",3,[[],["vec3",3]]],[10,"zww","","",3,[[],["vec3",3]]],[10,"wxx","","",3,[[],["vec3",3]]],[10,"wxy","","",3,[[],["vec3",3]]],[10,"wxz","","",3,[[],["vec3",3]]],[10,"wxw","","",3,[[],["vec3",3]]],[10,"wyx","","",3,[[],["vec3",3]]],[10,"wyy","","",3,[[],["vec3",3]]],[10,"wyz","","",3,[[],["vec3",3]]],[10,"wyw","","",3,[[],["vec3",3]]],[10,"wzx","","",3,[[],["vec3",3]]],[10,"wzy","","",3,[[],["vec3",3]]],[10,"wzz","","",3,[[],["vec3",3]]],[10,"wzw","","",3,[[],["vec3",3]]],[10,"wwx","","",3,[[],["vec3",3]]],[10,"wwy","","",3,[[],["vec3",3]]],[10,"wwz","","",3,[[],["vec3",3]]],[10,"www","","",3,[[],["vec3",3]]],[10,"xx","","",3,[[],["vec2",3]]],[10,"xy","","",3,[[],["vec2",3]]],[10,"xz","","",3,[[],["vec2",3]]],[10,"xw","","",3,[[],["vec2",3]]],[10,"yx","","",3,[[],["vec2",3]]],[10,"yy","","",3,[[],["vec2",3]]],[10,"yz","","",3,[[],["vec2",3]]],[10,"yw","","",3,[[],["vec2",3]]],[10,"zx","","",3,[[],["vec2",3]]],[10,"zy","","",3,[[],["vec2",3]]],[10,"zz","","",3,[[],["vec2",3]]],[10,"zw","","",3,[[],["vec2",3]]],[10,"wx","","",3,[[],["vec2",3]]],[10,"wy","","",3,[[],["vec2",3]]],[10,"wz","","",3,[[],["vec2",3]]],[10,"ww","","",3,[[],["vec2",3]]],[5,"mat2","glam","Creates a <code>Mat2</code> from two column vectors.",null,[[["vec2",3]],["mat2",3]]],[5,"mat3","","Creates a <code>Mat3</code> from three column vectors.",null,[[["vec3",3]],["mat3",3]]],[5,"mat4","","Creates a <code>Mat4</code> from four column vectors.",null,[[["vec4",3]],["mat4",3]]],[5,"quat","","Creates a <code>Quat</code> from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.",null,[[],["quat",3]]],[5,"vec2","","Creates a <code>Vec2</code>.",null,[[],["vec2",3]]],[5,"vec3","","Creates a <code>Vec3</code>.",null,[[],["vec3",3]]],[5,"vec3a","","Creates a <code>Vec3</code>.",null,[[],["vec3a",3]]],[5,"vec4","","Creates a <code>Vec4</code>.",null,[[],["vec4",3]]],[3,"Mat2","","A 2x2 column major matrix.",null,null],[12,"x_axis","","",4,null],[12,"y_axis","","",4,null],[3,"Mat3","","A 3x3 column major matrix.",null,null],[12,"x_axis","","",5,null],[12,"y_axis","","",5,null],[12,"z_axis","","",5,null],[3,"Mat4","","A 4x4 column major matrix.",null,null],[12,"x_axis","","",6,null],[12,"y_axis","","",6,null],[12,"z_axis","","",6,null],[12,"w_axis","","",6,null],[3,"Quat","","A quaternion representing an orientation.",null,null],[12,"x","","",7,null],[12,"y","","",7,null],[12,"z","","",7,null],[12,"w","","",7,null],[3,"Vec2","","A 2-dimensional vector.",null,null],[12,"x","","",8,null],[12,"y","","",8,null],[3,"Vec2Mask","","A 2-dimensional vector mask.",null,null],[3,"Vec3","","A 3-dimensional vector without SIMD support.",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[12,"z","","",9,null],[3,"Vec3A","","A 3-dimensional vector with SIMD support.",null,null],[12,"x","","",10,null],[12,"y","","",10,null],[12,"z","","",10,null],[3,"Vec3AMask","","A 3-dimensional vector mask.",null,null],[3,"Vec3Mask","","A 3-dimensional vector mask.",null,null],[3,"Vec4","","A 4-dimensional vector.",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"z","","",11,null],[12,"w","","",11,null],[3,"Vec4Mask","","A 4-dimensional vector mask.",null,null],[8,"Vec2Swizzles","","",null,null],[10,"xxxx","","",0,[[],["vec4",3]]],[10,"xxxy","","",0,[[],["vec4",3]]],[10,"xxyx","","",0,[[],["vec4",3]]],[10,"xxyy","","",0,[[],["vec4",3]]],[10,"xyxx","","",0,[[],["vec4",3]]],[10,"xyxy","","",0,[[],["vec4",3]]],[10,"xyyx","","",0,[[],["vec4",3]]],[10,"xyyy","","",0,[[],["vec4",3]]],[10,"yxxx","","",0,[[],["vec4",3]]],[10,"yxxy","","",0,[[],["vec4",3]]],[10,"yxyx","","",0,[[],["vec4",3]]],[10,"yxyy","","",0,[[],["vec4",3]]],[10,"yyxx","","",0,[[],["vec4",3]]],[10,"yyxy","","",0,[[],["vec4",3]]],[10,"yyyx","","",0,[[],["vec4",3]]],[10,"yyyy","","",0,[[],["vec4",3]]],[10,"xxx","","",0,[[],["vec3",3]]],[10,"xxy","","",0,[[],["vec3",3]]],[10,"xyx","","",0,[[],["vec3",3]]],[10,"xyy","","",0,[[],["vec3",3]]],[10,"yxx","","",0,[[],["vec3",3]]],[10,"yxy","","",0,[[],["vec3",3]]],[10,"yyx","","",0,[[],["vec3",3]]],[10,"yyy","","",0,[[],["vec3",3]]],[10,"xx","","",0,[[],["vec2",3]]],[10,"yx","","",0,[[],["vec2",3]]],[10,"yy","","",0,[[],["vec2",3]]],[8,"Vec3ASwizzles","","",null,null],[10,"xxxx","","",1,[[],["vec4",3]]],[10,"xxxy","","",1,[[],["vec4",3]]],[10,"xxxz","","",1,[[],["vec4",3]]],[10,"xxyx","","",1,[[],["vec4",3]]],[10,"xxyy","","",1,[[],["vec4",3]]],[10,"xxyz","","",1,[[],["vec4",3]]],[10,"xxzx","","",1,[[],["vec4",3]]],[10,"xxzy","","",1,[[],["vec4",3]]],[10,"xxzz","","",1,[[],["vec4",3]]],[10,"xyxx","","",1,[[],["vec4",3]]],[10,"xyxy","","",1,[[],["vec4",3]]],[10,"xyxz","","",1,[[],["vec4",3]]],[10,"xyyx","","",1,[[],["vec4",3]]],[10,"xyyy","","",1,[[],["vec4",3]]],[10,"xyyz","","",1,[[],["vec4",3]]],[10,"xyzx","","",1,[[],["vec4",3]]],[10,"xyzy","","",1,[[],["vec4",3]]],[10,"xyzz","","",1,[[],["vec4",3]]],[10,"xzxx","","",1,[[],["vec4",3]]],[10,"xzxy","","",1,[[],["vec4",3]]],[10,"xzxz","","",1,[[],["vec4",3]]],[10,"xzyx","","",1,[[],["vec4",3]]],[10,"xzyy","","",1,[[],["vec4",3]]],[10,"xzyz","","",1,[[],["vec4",3]]],[10,"xzzx","","",1,[[],["vec4",3]]],[10,"xzzy","","",1,[[],["vec4",3]]],[10,"xzzz","","",1,[[],["vec4",3]]],[10,"yxxx","","",1,[[],["vec4",3]]],[10,"yxxy","","",1,[[],["vec4",3]]],[10,"yxxz","","",1,[[],["vec4",3]]],[10,"yxyx","","",1,[[],["vec4",3]]],[10,"yxyy","","",1,[[],["vec4",3]]],[10,"yxyz","","",1,[[],["vec4",3]]],[10,"yxzx","","",1,[[],["vec4",3]]],[10,"yxzy","","",1,[[],["vec4",3]]],[10,"yxzz","","",1,[[],["vec4",3]]],[10,"yyxx","","",1,[[],["vec4",3]]],[10,"yyxy","","",1,[[],["vec4",3]]],[10,"yyxz","","",1,[[],["vec4",3]]],[10,"yyyx","","",1,[[],["vec4",3]]],[10,"yyyy","","",1,[[],["vec4",3]]],[10,"yyyz","","",1,[[],["vec4",3]]],[10,"yyzx","","",1,[[],["vec4",3]]],[10,"yyzy","","",1,[[],["vec4",3]]],[10,"yyzz","","",1,[[],["vec4",3]]],[10,"yzxx","","",1,[[],["vec4",3]]],[10,"yzxy","","",1,[[],["vec4",3]]],[10,"yzxz","","",1,[[],["vec4",3]]],[10,"yzyx","","",1,[[],["vec4",3]]],[10,"yzyy","","",1,[[],["vec4",3]]],[10,"yzyz","","",1,[[],["vec4",3]]],[10,"yzzx","","",1,[[],["vec4",3]]],[10,"yzzy","","",1,[[],["vec4",3]]],[10,"yzzz","","",1,[[],["vec4",3]]],[10,"zxxx","","",1,[[],["vec4",3]]],[10,"zxxy","","",1,[[],["vec4",3]]],[10,"zxxz","","",1,[[],["vec4",3]]],[10,"zxyx","","",1,[[],["vec4",3]]],[10,"zxyy","","",1,[[],["vec4",3]]],[10,"zxyz","","",1,[[],["vec4",3]]],[10,"zxzx","","",1,[[],["vec4",3]]],[10,"zxzy","","",1,[[],["vec4",3]]],[10,"zxzz","","",1,[[],["vec4",3]]],[10,"zyxx","","",1,[[],["vec4",3]]],[10,"zyxy","","",1,[[],["vec4",3]]],[10,"zyxz","","",1,[[],["vec4",3]]],[10,"zyyx","","",1,[[],["vec4",3]]],[10,"zyyy","","",1,[[],["vec4",3]]],[10,"zyyz","","",1,[[],["vec4",3]]],[10,"zyzx","","",1,[[],["vec4",3]]],[10,"zyzy","","",1,[[],["vec4",3]]],[10,"zyzz","","",1,[[],["vec4",3]]],[10,"zzxx","","",1,[[],["vec4",3]]],[10,"zzxy","","",1,[[],["vec4",3]]],[10,"zzxz","","",1,[[],["vec4",3]]],[10,"zzyx","","",1,[[],["vec4",3]]],[10,"zzyy","","",1,[[],["vec4",3]]],[10,"zzyz","","",1,[[],["vec4",3]]],[10,"zzzx","","",1,[[],["vec4",3]]],[10,"zzzy","","",1,[[],["vec4",3]]],[10,"zzzz","","",1,[[],["vec4",3]]],[10,"xxx","","",1,[[],["vec3a",3]]],[10,"xxy","","",1,[[],["vec3a",3]]],[10,"xxz","","",1,[[],["vec3a",3]]],[10,"xyx","","",1,[[],["vec3a",3]]],[10,"xyy","","",1,[[],["vec3a",3]]],[10,"xzx","","",1,[[],["vec3a",3]]],[10,"xzy","","",1,[[],["vec3a",3]]],[10,"xzz","","",1,[[],["vec3a",3]]],[10,"yxx","","",1,[[],["vec3a",3]]],[10,"yxy","","",1,[[],["vec3a",3]]],[10,"yxz","","",1,[[],["vec3a",3]]],[10,"yyx","","",1,[[],["vec3a",3]]],[10,"yyy","","",1,[[],["vec3a",3]]],[10,"yyz","","",1,[[],["vec3a",3]]],[10,"yzx","","",1,[[],["vec3a",3]]],[10,"yzy","","",1,[[],["vec3a",3]]],[10,"yzz","","",1,[[],["vec3a",3]]],[10,"zxx","","",1,[[],["vec3a",3]]],[10,"zxy","","",1,[[],["vec3a",3]]],[10,"zxz","","",1,[[],["vec3a",3]]],[10,"zyx","","",1,[[],["vec3a",3]]],[10,"zyy","","",1,[[],["vec3a",3]]],[10,"zyz","","",1,[[],["vec3a",3]]],[10,"zzx","","",1,[[],["vec3a",3]]],[10,"zzy","","",1,[[],["vec3a",3]]],[10,"zzz","","",1,[[],["vec3a",3]]],[10,"xx","","",1,[[],["vec2",3]]],[10,"xy","","",1,[[],["vec2",3]]],[10,"xz","","",1,[[],["vec2",3]]],[10,"yx","","",1,[[],["vec2",3]]],[10,"yy","","",1,[[],["vec2",3]]],[10,"yz","","",1,[[],["vec2",3]]],[10,"zx","","",1,[[],["vec2",3]]],[10,"zy","","",1,[[],["vec2",3]]],[10,"zz","","",1,[[],["vec2",3]]],[8,"Vec3Swizzles","","",null,null],[10,"xxxx","","",2,[[],["vec4",3]]],[10,"xxxy","","",2,[[],["vec4",3]]],[10,"xxxz","","",2,[[],["vec4",3]]],[10,"xxyx","","",2,[[],["vec4",3]]],[10,"xxyy","","",2,[[],["vec4",3]]],[10,"xxyz","","",2,[[],["vec4",3]]],[10,"xxzx","","",2,[[],["vec4",3]]],[10,"xxzy","","",2,[[],["vec4",3]]],[10,"xxzz","","",2,[[],["vec4",3]]],[10,"xyxx","","",2,[[],["vec4",3]]],[10,"xyxy","","",2,[[],["vec4",3]]],[10,"xyxz","","",2,[[],["vec4",3]]],[10,"xyyx","","",2,[[],["vec4",3]]],[10,"xyyy","","",2,[[],["vec4",3]]],[10,"xyyz","","",2,[[],["vec4",3]]],[10,"xyzx","","",2,[[],["vec4",3]]],[10,"xyzy","","",2,[[],["vec4",3]]],[10,"xyzz","","",2,[[],["vec4",3]]],[10,"xzxx","","",2,[[],["vec4",3]]],[10,"xzxy","","",2,[[],["vec4",3]]],[10,"xzxz","","",2,[[],["vec4",3]]],[10,"xzyx","","",2,[[],["vec4",3]]],[10,"xzyy","","",2,[[],["vec4",3]]],[10,"xzyz","","",2,[[],["vec4",3]]],[10,"xzzx","","",2,[[],["vec4",3]]],[10,"xzzy","","",2,[[],["vec4",3]]],[10,"xzzz","","",2,[[],["vec4",3]]],[10,"yxxx","","",2,[[],["vec4",3]]],[10,"yxxy","","",2,[[],["vec4",3]]],[10,"yxxz","","",2,[[],["vec4",3]]],[10,"yxyx","","",2,[[],["vec4",3]]],[10,"yxyy","","",2,[[],["vec4",3]]],[10,"yxyz","","",2,[[],["vec4",3]]],[10,"yxzx","","",2,[[],["vec4",3]]],[10,"yxzy","","",2,[[],["vec4",3]]],[10,"yxzz","","",2,[[],["vec4",3]]],[10,"yyxx","","",2,[[],["vec4",3]]],[10,"yyxy","","",2,[[],["vec4",3]]],[10,"yyxz","","",2,[[],["vec4",3]]],[10,"yyyx","","",2,[[],["vec4",3]]],[10,"yyyy","","",2,[[],["vec4",3]]],[10,"yyyz","","",2,[[],["vec4",3]]],[10,"yyzx","","",2,[[],["vec4",3]]],[10,"yyzy","","",2,[[],["vec4",3]]],[10,"yyzz","","",2,[[],["vec4",3]]],[10,"yzxx","","",2,[[],["vec4",3]]],[10,"yzxy","","",2,[[],["vec4",3]]],[10,"yzxz","","",2,[[],["vec4",3]]],[10,"yzyx","","",2,[[],["vec4",3]]],[10,"yzyy","","",2,[[],["vec4",3]]],[10,"yzyz","","",2,[[],["vec4",3]]],[10,"yzzx","","",2,[[],["vec4",3]]],[10,"yzzy","","",2,[[],["vec4",3]]],[10,"yzzz","","",2,[[],["vec4",3]]],[10,"zxxx","","",2,[[],["vec4",3]]],[10,"zxxy","","",2,[[],["vec4",3]]],[10,"zxxz","","",2,[[],["vec4",3]]],[10,"zxyx","","",2,[[],["vec4",3]]],[10,"zxyy","","",2,[[],["vec4",3]]],[10,"zxyz","","",2,[[],["vec4",3]]],[10,"zxzx","","",2,[[],["vec4",3]]],[10,"zxzy","","",2,[[],["vec4",3]]],[10,"zxzz","","",2,[[],["vec4",3]]],[10,"zyxx","","",2,[[],["vec4",3]]],[10,"zyxy","","",2,[[],["vec4",3]]],[10,"zyxz","","",2,[[],["vec4",3]]],[10,"zyyx","","",2,[[],["vec4",3]]],[10,"zyyy","","",2,[[],["vec4",3]]],[10,"zyyz","","",2,[[],["vec4",3]]],[10,"zyzx","","",2,[[],["vec4",3]]],[10,"zyzy","","",2,[[],["vec4",3]]],[10,"zyzz","","",2,[[],["vec4",3]]],[10,"zzxx","","",2,[[],["vec4",3]]],[10,"zzxy","","",2,[[],["vec4",3]]],[10,"zzxz","","",2,[[],["vec4",3]]],[10,"zzyx","","",2,[[],["vec4",3]]],[10,"zzyy","","",2,[[],["vec4",3]]],[10,"zzyz","","",2,[[],["vec4",3]]],[10,"zzzx","","",2,[[],["vec4",3]]],[10,"zzzy","","",2,[[],["vec4",3]]],[10,"zzzz","","",2,[[],["vec4",3]]],[10,"xxx","","",2,[[],["vec3",3]]],[10,"xxy","","",2,[[],["vec3",3]]],[10,"xxz","","",2,[[],["vec3",3]]],[10,"xyx","","",2,[[],["vec3",3]]],[10,"xyy","","",2,[[],["vec3",3]]],[10,"xzx","","",2,[[],["vec3",3]]],[10,"xzy","","",2,[[],["vec3",3]]],[10,"xzz","","",2,[[],["vec3",3]]],[10,"yxx","","",2,[[],["vec3",3]]],[10,"yxy","","",2,[[],["vec3",3]]],[10,"yxz","","",2,[[],["vec3",3]]],[10,"yyx","","",2,[[],["vec3",3]]],[10,"yyy","","",2,[[],["vec3",3]]],[10,"yyz","","",2,[[],["vec3",3]]],[10,"yzx","","",2,[[],["vec3",3]]],[10,"yzy","","",2,[[],["vec3",3]]],[10,"yzz","","",2,[[],["vec3",3]]],[10,"zxx","","",2,[[],["vec3",3]]],[10,"zxy","","",2,[[],["vec3",3]]],[10,"zxz","","",2,[[],["vec3",3]]],[10,"zyx","","",2,[[],["vec3",3]]],[10,"zyy","","",2,[[],["vec3",3]]],[10,"zyz","","",2,[[],["vec3",3]]],[10,"zzx","","",2,[[],["vec3",3]]],[10,"zzy","","",2,[[],["vec3",3]]],[10,"zzz","","",2,[[],["vec3",3]]],[10,"xx","","",2,[[],["vec2",3]]],[10,"xy","","",2,[[],["vec2",3]]],[10,"xz","","",2,[[],["vec2",3]]],[10,"yx","","",2,[[],["vec2",3]]],[10,"yy","","",2,[[],["vec2",3]]],[10,"yz","","",2,[[],["vec2",3]]],[10,"zx","","",2,[[],["vec2",3]]],[10,"zy","","",2,[[],["vec2",3]]],[10,"zz","","",2,[[],["vec2",3]]],[8,"Vec4Swizzles","","",null,null],[10,"xxxx","","",3,[[],["vec4",3]]],[10,"xxxy","","",3,[[],["vec4",3]]],[10,"xxxz","","",3,[[],["vec4",3]]],[10,"xxxw","","",3,[[],["vec4",3]]],[10,"xxyx","","",3,[[],["vec4",3]]],[10,"xxyy","","",3,[[],["vec4",3]]],[10,"xxyz","","",3,[[],["vec4",3]]],[10,"xxyw","","",3,[[],["vec4",3]]],[10,"xxzx","","",3,[[],["vec4",3]]],[10,"xxzy","","",3,[[],["vec4",3]]],[10,"xxzz","","",3,[[],["vec4",3]]],[10,"xxzw","","",3,[[],["vec4",3]]],[10,"xxwx","","",3,[[],["vec4",3]]],[10,"xxwy","","",3,[[],["vec4",3]]],[10,"xxwz","","",3,[[],["vec4",3]]],[10,"xxww","","",3,[[],["vec4",3]]],[10,"xyxx","","",3,[[],["vec4",3]]],[10,"xyxy","","",3,[[],["vec4",3]]],[10,"xyxz","","",3,[[],["vec4",3]]],[10,"xyxw","","",3,[[],["vec4",3]]],[10,"xyyx","","",3,[[],["vec4",3]]],[10,"xyyy","","",3,[[],["vec4",3]]],[10,"xyyz","","",3,[[],["vec4",3]]],[10,"xyyw","","",3,[[],["vec4",3]]],[10,"xyzx","","",3,[[],["vec4",3]]],[10,"xyzy","","",3,[[],["vec4",3]]],[10,"xyzz","","",3,[[],["vec4",3]]],[10,"xywx","","",3,[[],["vec4",3]]],[10,"xywy","","",3,[[],["vec4",3]]],[10,"xywz","","",3,[[],["vec4",3]]],[10,"xyww","","",3,[[],["vec4",3]]],[10,"xzxx","","",3,[[],["vec4",3]]],[10,"xzxy","","",3,[[],["vec4",3]]],[10,"xzxz","","",3,[[],["vec4",3]]],[10,"xzxw","","",3,[[],["vec4",3]]],[10,"xzyx","","",3,[[],["vec4",3]]],[10,"xzyy","","",3,[[],["vec4",3]]],[10,"xzyz","","",3,[[],["vec4",3]]],[10,"xzyw","","",3,[[],["vec4",3]]],[10,"xzzx","","",3,[[],["vec4",3]]],[10,"xzzy","","",3,[[],["vec4",3]]],[10,"xzzz","","",3,[[],["vec4",3]]],[10,"xzzw","","",3,[[],["vec4",3]]],[10,"xzwx","","",3,[[],["vec4",3]]],[10,"xzwy","","",3,[[],["vec4",3]]],[10,"xzwz","","",3,[[],["vec4",3]]],[10,"xzww","","",3,[[],["vec4",3]]],[10,"xwxx","","",3,[[],["vec4",3]]],[10,"xwxy","","",3,[[],["vec4",3]]],[10,"xwxz","","",3,[[],["vec4",3]]],[10,"xwxw","","",3,[[],["vec4",3]]],[10,"xwyx","","",3,[[],["vec4",3]]],[10,"xwyy","","",3,[[],["vec4",3]]],[10,"xwyz","","",3,[[],["vec4",3]]],[10,"xwyw","","",3,[[],["vec4",3]]],[10,"xwzx","","",3,[[],["vec4",3]]],[10,"xwzy","","",3,[[],["vec4",3]]],[10,"xwzz","","",3,[[],["vec4",3]]],[10,"xwzw","","",3,[[],["vec4",3]]],[10,"xwwx","","",3,[[],["vec4",3]]],[10,"xwwy","","",3,[[],["vec4",3]]],[10,"xwwz","","",3,[[],["vec4",3]]],[10,"xwww","","",3,[[],["vec4",3]]],[10,"yxxx","","",3,[[],["vec4",3]]],[10,"yxxy","","",3,[[],["vec4",3]]],[10,"yxxz","","",3,[[],["vec4",3]]],[10,"yxxw","","",3,[[],["vec4",3]]],[10,"yxyx","","",3,[[],["vec4",3]]],[10,"yxyy","","",3,[[],["vec4",3]]],[10,"yxyz","","",3,[[],["vec4",3]]],[10,"yxyw","","",3,[[],["vec4",3]]],[10,"yxzx","","",3,[[],["vec4",3]]],[10,"yxzy","","",3,[[],["vec4",3]]],[10,"yxzz","","",3,[[],["vec4",3]]],[10,"yxzw","","",3,[[],["vec4",3]]],[10,"yxwx","","",3,[[],["vec4",3]]],[10,"yxwy","","",3,[[],["vec4",3]]],[10,"yxwz","","",3,[[],["vec4",3]]],[10,"yxww","","",3,[[],["vec4",3]]],[10,"yyxx","","",3,[[],["vec4",3]]],[10,"yyxy","","",3,[[],["vec4",3]]],[10,"yyxz","","",3,[[],["vec4",3]]],[10,"yyxw","","",3,[[],["vec4",3]]],[10,"yyyx","","",3,[[],["vec4",3]]],[10,"yyyy","","",3,[[],["vec4",3]]],[10,"yyyz","","",3,[[],["vec4",3]]],[10,"yyyw","","",3,[[],["vec4",3]]],[10,"yyzx","","",3,[[],["vec4",3]]],[10,"yyzy","","",3,[[],["vec4",3]]],[10,"yyzz","","",3,[[],["vec4",3]]],[10,"yyzw","","",3,[[],["vec4",3]]],[10,"yywx","","",3,[[],["vec4",3]]],[10,"yywy","","",3,[[],["vec4",3]]],[10,"yywz","","",3,[[],["vec4",3]]],[10,"yyww","","",3,[[],["vec4",3]]],[10,"yzxx","","",3,[[],["vec4",3]]],[10,"yzxy","","",3,[[],["vec4",3]]],[10,"yzxz","","",3,[[],["vec4",3]]],[10,"yzxw","","",3,[[],["vec4",3]]],[10,"yzyx","","",3,[[],["vec4",3]]],[10,"yzyy","","",3,[[],["vec4",3]]],[10,"yzyz","","",3,[[],["vec4",3]]],[10,"yzyw","","",3,[[],["vec4",3]]],[10,"yzzx","","",3,[[],["vec4",3]]],[10,"yzzy","","",3,[[],["vec4",3]]],[10,"yzzz","","",3,[[],["vec4",3]]],[10,"yzzw","","",3,[[],["vec4",3]]],[10,"yzwx","","",3,[[],["vec4",3]]],[10,"yzwy","","",3,[[],["vec4",3]]],[10,"yzwz","","",3,[[],["vec4",3]]],[10,"yzww","","",3,[[],["vec4",3]]],[10,"ywxx","","",3,[[],["vec4",3]]],[10,"ywxy","","",3,[[],["vec4",3]]],[10,"ywxz","","",3,[[],["vec4",3]]],[10,"ywxw","","",3,[[],["vec4",3]]],[10,"ywyx","","",3,[[],["vec4",3]]],[10,"ywyy","","",3,[[],["vec4",3]]],[10,"ywyz","","",3,[[],["vec4",3]]],[10,"ywyw","","",3,[[],["vec4",3]]],[10,"ywzx","","",3,[[],["vec4",3]]],[10,"ywzy","","",3,[[],["vec4",3]]],[10,"ywzz","","",3,[[],["vec4",3]]],[10,"ywzw","","",3,[[],["vec4",3]]],[10,"ywwx","","",3,[[],["vec4",3]]],[10,"ywwy","","",3,[[],["vec4",3]]],[10,"ywwz","","",3,[[],["vec4",3]]],[10,"ywww","","",3,[[],["vec4",3]]],[10,"zxxx","","",3,[[],["vec4",3]]],[10,"zxxy","","",3,[[],["vec4",3]]],[10,"zxxz","","",3,[[],["vec4",3]]],[10,"zxxw","","",3,[[],["vec4",3]]],[10,"zxyx","","",3,[[],["vec4",3]]],[10,"zxyy","","",3,[[],["vec4",3]]],[10,"zxyz","","",3,[[],["vec4",3]]],[10,"zxyw","","",3,[[],["vec4",3]]],[10,"zxzx","","",3,[[],["vec4",3]]],[10,"zxzy","","",3,[[],["vec4",3]]],[10,"zxzz","","",3,[[],["vec4",3]]],[10,"zxzw","","",3,[[],["vec4",3]]],[10,"zxwx","","",3,[[],["vec4",3]]],[10,"zxwy","","",3,[[],["vec4",3]]],[10,"zxwz","","",3,[[],["vec4",3]]],[10,"zxww","","",3,[[],["vec4",3]]],[10,"zyxx","","",3,[[],["vec4",3]]],[10,"zyxy","","",3,[[],["vec4",3]]],[10,"zyxz","","",3,[[],["vec4",3]]],[10,"zyxw","","",3,[[],["vec4",3]]],[10,"zyyx","","",3,[[],["vec4",3]]],[10,"zyyy","","",3,[[],["vec4",3]]],[10,"zyyz","","",3,[[],["vec4",3]]],[10,"zyyw","","",3,[[],["vec4",3]]],[10,"zyzx","","",3,[[],["vec4",3]]],[10,"zyzy","","",3,[[],["vec4",3]]],[10,"zyzz","","",3,[[],["vec4",3]]],[10,"zyzw","","",3,[[],["vec4",3]]],[10,"zywx","","",3,[[],["vec4",3]]],[10,"zywy","","",3,[[],["vec4",3]]],[10,"zywz","","",3,[[],["vec4",3]]],[10,"zyww","","",3,[[],["vec4",3]]],[10,"zzxx","","",3,[[],["vec4",3]]],[10,"zzxy","","",3,[[],["vec4",3]]],[10,"zzxz","","",3,[[],["vec4",3]]],[10,"zzxw","","",3,[[],["vec4",3]]],[10,"zzyx","","",3,[[],["vec4",3]]],[10,"zzyy","","",3,[[],["vec4",3]]],[10,"zzyz","","",3,[[],["vec4",3]]],[10,"zzyw","","",3,[[],["vec4",3]]],[10,"zzzx","","",3,[[],["vec4",3]]],[10,"zzzy","","",3,[[],["vec4",3]]],[10,"zzzz","","",3,[[],["vec4",3]]],[10,"zzzw","","",3,[[],["vec4",3]]],[10,"zzwx","","",3,[[],["vec4",3]]],[10,"zzwy","","",3,[[],["vec4",3]]],[10,"zzwz","","",3,[[],["vec4",3]]],[10,"zzww","","",3,[[],["vec4",3]]],[10,"zwxx","","",3,[[],["vec4",3]]],[10,"zwxy","","",3,[[],["vec4",3]]],[10,"zwxz","","",3,[[],["vec4",3]]],[10,"zwxw","","",3,[[],["vec4",3]]],[10,"zwyx","","",3,[[],["vec4",3]]],[10,"zwyy","","",3,[[],["vec4",3]]],[10,"zwyz","","",3,[[],["vec4",3]]],[10,"zwyw","","",3,[[],["vec4",3]]],[10,"zwzx","","",3,[[],["vec4",3]]],[10,"zwzy","","",3,[[],["vec4",3]]],[10,"zwzz","","",3,[[],["vec4",3]]],[10,"zwzw","","",3,[[],["vec4",3]]],[10,"zwwx","","",3,[[],["vec4",3]]],[10,"zwwy","","",3,[[],["vec4",3]]],[10,"zwwz","","",3,[[],["vec4",3]]],[10,"zwww","","",3,[[],["vec4",3]]],[10,"wxxx","","",3,[[],["vec4",3]]],[10,"wxxy","","",3,[[],["vec4",3]]],[10,"wxxz","","",3,[[],["vec4",3]]],[10,"wxxw","","",3,[[],["vec4",3]]],[10,"wxyx","","",3,[[],["vec4",3]]],[10,"wxyy","","",3,[[],["vec4",3]]],[10,"wxyz","","",3,[[],["vec4",3]]],[10,"wxyw","","",3,[[],["vec4",3]]],[10,"wxzx","","",3,[[],["vec4",3]]],[10,"wxzy","","",3,[[],["vec4",3]]],[10,"wxzz","","",3,[[],["vec4",3]]],[10,"wxzw","","",3,[[],["vec4",3]]],[10,"wxwx","","",3,[[],["vec4",3]]],[10,"wxwy","","",3,[[],["vec4",3]]],[10,"wxwz","","",3,[[],["vec4",3]]],[10,"wxww","","",3,[[],["vec4",3]]],[10,"wyxx","","",3,[[],["vec4",3]]],[10,"wyxy","","",3,[[],["vec4",3]]],[10,"wyxz","","",3,[[],["vec4",3]]],[10,"wyxw","","",3,[[],["vec4",3]]],[10,"wyyx","","",3,[[],["vec4",3]]],[10,"wyyy","","",3,[[],["vec4",3]]],[10,"wyyz","","",3,[[],["vec4",3]]],[10,"wyyw","","",3,[[],["vec4",3]]],[10,"wyzx","","",3,[[],["vec4",3]]],[10,"wyzy","","",3,[[],["vec4",3]]],[10,"wyzz","","",3,[[],["vec4",3]]],[10,"wyzw","","",3,[[],["vec4",3]]],[10,"wywx","","",3,[[],["vec4",3]]],[10,"wywy","","",3,[[],["vec4",3]]],[10,"wywz","","",3,[[],["vec4",3]]],[10,"wyww","","",3,[[],["vec4",3]]],[10,"wzxx","","",3,[[],["vec4",3]]],[10,"wzxy","","",3,[[],["vec4",3]]],[10,"wzxz","","",3,[[],["vec4",3]]],[10,"wzxw","","",3,[[],["vec4",3]]],[10,"wzyx","","",3,[[],["vec4",3]]],[10,"wzyy","","",3,[[],["vec4",3]]],[10,"wzyz","","",3,[[],["vec4",3]]],[10,"wzyw","","",3,[[],["vec4",3]]],[10,"wzzx","","",3,[[],["vec4",3]]],[10,"wzzy","","",3,[[],["vec4",3]]],[10,"wzzz","","",3,[[],["vec4",3]]],[10,"wzzw","","",3,[[],["vec4",3]]],[10,"wzwx","","",3,[[],["vec4",3]]],[10,"wzwy","","",3,[[],["vec4",3]]],[10,"wzwz","","",3,[[],["vec4",3]]],[10,"wzww","","",3,[[],["vec4",3]]],[10,"wwxx","","",3,[[],["vec4",3]]],[10,"wwxy","","",3,[[],["vec4",3]]],[10,"wwxz","","",3,[[],["vec4",3]]],[10,"wwxw","","",3,[[],["vec4",3]]],[10,"wwyx","","",3,[[],["vec4",3]]],[10,"wwyy","","",3,[[],["vec4",3]]],[10,"wwyz","","",3,[[],["vec4",3]]],[10,"wwyw","","",3,[[],["vec4",3]]],[10,"wwzx","","",3,[[],["vec4",3]]],[10,"wwzy","","",3,[[],["vec4",3]]],[10,"wwzz","","",3,[[],["vec4",3]]],[10,"wwzw","","",3,[[],["vec4",3]]],[10,"wwwx","","",3,[[],["vec4",3]]],[10,"wwwy","","",3,[[],["vec4",3]]],[10,"wwwz","","",3,[[],["vec4",3]]],[10,"wwww","","",3,[[],["vec4",3]]],[10,"xxx","","",3,[[],["vec3",3]]],[10,"xxy","","",3,[[],["vec3",3]]],[10,"xxz","","",3,[[],["vec3",3]]],[10,"xxw","","",3,[[],["vec3",3]]],[10,"xyx","","",3,[[],["vec3",3]]],[10,"xyy","","",3,[[],["vec3",3]]],[10,"xyz","","",3,[[],["vec3",3]]],[10,"xyw","","",3,[[],["vec3",3]]],[10,"xzx","","",3,[[],["vec3",3]]],[10,"xzy","","",3,[[],["vec3",3]]],[10,"xzz","","",3,[[],["vec3",3]]],[10,"xzw","","",3,[[],["vec3",3]]],[10,"xwx","","",3,[[],["vec3",3]]],[10,"xwy","","",3,[[],["vec3",3]]],[10,"xwz","","",3,[[],["vec3",3]]],[10,"xww","","",3,[[],["vec3",3]]],[10,"yxx","","",3,[[],["vec3",3]]],[10,"yxy","","",3,[[],["vec3",3]]],[10,"yxz","","",3,[[],["vec3",3]]],[10,"yxw","","",3,[[],["vec3",3]]],[10,"yyx","","",3,[[],["vec3",3]]],[10,"yyy","","",3,[[],["vec3",3]]],[10,"yyz","","",3,[[],["vec3",3]]],[10,"yyw","","",3,[[],["vec3",3]]],[10,"yzx","","",3,[[],["vec3",3]]],[10,"yzy","","",3,[[],["vec3",3]]],[10,"yzz","","",3,[[],["vec3",3]]],[10,"yzw","","",3,[[],["vec3",3]]],[10,"ywx","","",3,[[],["vec3",3]]],[10,"ywy","","",3,[[],["vec3",3]]],[10,"ywz","","",3,[[],["vec3",3]]],[10,"yww","","",3,[[],["vec3",3]]],[10,"zxx","","",3,[[],["vec3",3]]],[10,"zxy","","",3,[[],["vec3",3]]],[10,"zxz","","",3,[[],["vec3",3]]],[10,"zxw","","",3,[[],["vec3",3]]],[10,"zyx","","",3,[[],["vec3",3]]],[10,"zyy","","",3,[[],["vec3",3]]],[10,"zyz","","",3,[[],["vec3",3]]],[10,"zyw","","",3,[[],["vec3",3]]],[10,"zzx","","",3,[[],["vec3",3]]],[10,"zzy","","",3,[[],["vec3",3]]],[10,"zzz","","",3,[[],["vec3",3]]],[10,"zzw","","",3,[[],["vec3",3]]],[10,"zwx","","",3,[[],["vec3",3]]],[10,"zwy","","",3,[[],["vec3",3]]],[10,"zwz","","",3,[[],["vec3",3]]],[10,"zww","","",3,[[],["vec3",3]]],[10,"wxx","","",3,[[],["vec3",3]]],[10,"wxy","","",3,[[],["vec3",3]]],[10,"wxz","","",3,[[],["vec3",3]]],[10,"wxw","","",3,[[],["vec3",3]]],[10,"wyx","","",3,[[],["vec3",3]]],[10,"wyy","","",3,[[],["vec3",3]]],[10,"wyz","","",3,[[],["vec3",3]]],[10,"wyw","","",3,[[],["vec3",3]]],[10,"wzx","","",3,[[],["vec3",3]]],[10,"wzy","","",3,[[],["vec3",3]]],[10,"wzz","","",3,[[],["vec3",3]]],[10,"wzw","","",3,[[],["vec3",3]]],[10,"wwx","","",3,[[],["vec3",3]]],[10,"wwy","","",3,[[],["vec3",3]]],[10,"wwz","","",3,[[],["vec3",3]]],[10,"www","","",3,[[],["vec3",3]]],[10,"xx","","",3,[[],["vec2",3]]],[10,"xy","","",3,[[],["vec2",3]]],[10,"xz","","",3,[[],["vec2",3]]],[10,"xw","","",3,[[],["vec2",3]]],[10,"yx","","",3,[[],["vec2",3]]],[10,"yy","","",3,[[],["vec2",3]]],[10,"yz","","",3,[[],["vec2",3]]],[10,"yw","","",3,[[],["vec2",3]]],[10,"zx","","",3,[[],["vec2",3]]],[10,"zy","","",3,[[],["vec2",3]]],[10,"zz","","",3,[[],["vec2",3]]],[10,"zw","","",3,[[],["vec2",3]]],[10,"wx","","",3,[[],["vec2",3]]],[10,"wy","","",3,[[],["vec2",3]]],[10,"wz","","",3,[[],["vec2",3]]],[10,"ww","","",3,[[],["vec2",3]]],[14,"const_mat2","","Creates a <code>Mat2</code> from two column vectors that can be used …",null,null],[14,"const_mat3","","Creates a <code>Mat3</code> from three column vectors that can be used …",null,null],[14,"const_mat4","","Creates a <code>Mat4</code> from four column vectors that can be used …",null,null],[14,"const_quat","","Creates a <code>Quat</code> from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values that can be used …",null,null],[14,"const_vec2","","Creates a <code>Vec2</code> that can be used to initialize a constant …",null,null],[14,"const_vec3","","Creates a <code>Vec3</code> that can be used to initialize a constant …",null,null],[14,"const_vec3a","","Creates a <code>Vec3A</code> that can be used to initialize a constant …",null,null],[14,"const_vec4","","Creates a <code>Vec4</code> that can be used to initialize a constant …",null,null],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"xxxx","","",8,[[],["vec4",3]]],[11,"xxxy","","",8,[[],["vec4",3]]],[11,"xxyx","","",8,[[],["vec4",3]]],[11,"xxyy","","",8,[[],["vec4",3]]],[11,"xyxx","","",8,[[],["vec4",3]]],[11,"xyxy","","",8,[[],["vec4",3]]],[11,"xyyx","","",8,[[],["vec4",3]]],[11,"xyyy","","",8,[[],["vec4",3]]],[11,"yxxx","","",8,[[],["vec4",3]]],[11,"yxxy","","",8,[[],["vec4",3]]],[11,"yxyx","","",8,[[],["vec4",3]]],[11,"yxyy","","",8,[[],["vec4",3]]],[11,"yyxx","","",8,[[],["vec4",3]]],[11,"yyxy","","",8,[[],["vec4",3]]],[11,"yyyx","","",8,[[],["vec4",3]]],[11,"yyyy","","",8,[[],["vec4",3]]],[11,"xxx","","",8,[[],["vec3",3]]],[11,"xxy","","",8,[[],["vec3",3]]],[11,"xyx","","",8,[[],["vec3",3]]],[11,"xyy","","",8,[[],["vec3",3]]],[11,"yxx","","",8,[[],["vec3",3]]],[11,"yxy","","",8,[[],["vec3",3]]],[11,"yyx","","",8,[[],["vec3",3]]],[11,"yyy","","",8,[[],["vec3",3]]],[11,"xx","","",8,[[],["vec2",3]]],[11,"yx","","",8,[[],["vec2",3]]],[11,"yy","","",8,[[],["vec2",3]]],[11,"xxxx","","",9,[[],["vec4",3]]],[11,"xxxy","","",9,[[],["vec4",3]]],[11,"xxxz","","",9,[[],["vec4",3]]],[11,"xxyx","","",9,[[],["vec4",3]]],[11,"xxyy","","",9,[[],["vec4",3]]],[11,"xxyz","","",9,[[],["vec4",3]]],[11,"xxzx","","",9,[[],["vec4",3]]],[11,"xxzy","","",9,[[],["vec4",3]]],[11,"xxzz","","",9,[[],["vec4",3]]],[11,"xyxx","","",9,[[],["vec4",3]]],[11,"xyxy","","",9,[[],["vec4",3]]],[11,"xyxz","","",9,[[],["vec4",3]]],[11,"xyyx","","",9,[[],["vec4",3]]],[11,"xyyy","","",9,[[],["vec4",3]]],[11,"xyyz","","",9,[[],["vec4",3]]],[11,"xyzx","","",9,[[],["vec4",3]]],[11,"xyzy","","",9,[[],["vec4",3]]],[11,"xyzz","","",9,[[],["vec4",3]]],[11,"xzxx","","",9,[[],["vec4",3]]],[11,"xzxy","","",9,[[],["vec4",3]]],[11,"xzxz","","",9,[[],["vec4",3]]],[11,"xzyx","","",9,[[],["vec4",3]]],[11,"xzyy","","",9,[[],["vec4",3]]],[11,"xzyz","","",9,[[],["vec4",3]]],[11,"xzzx","","",9,[[],["vec4",3]]],[11,"xzzy","","",9,[[],["vec4",3]]],[11,"xzzz","","",9,[[],["vec4",3]]],[11,"yxxx","","",9,[[],["vec4",3]]],[11,"yxxy","","",9,[[],["vec4",3]]],[11,"yxxz","","",9,[[],["vec4",3]]],[11,"yxyx","","",9,[[],["vec4",3]]],[11,"yxyy","","",9,[[],["vec4",3]]],[11,"yxyz","","",9,[[],["vec4",3]]],[11,"yxzx","","",9,[[],["vec4",3]]],[11,"yxzy","","",9,[[],["vec4",3]]],[11,"yxzz","","",9,[[],["vec4",3]]],[11,"yyxx","","",9,[[],["vec4",3]]],[11,"yyxy","","",9,[[],["vec4",3]]],[11,"yyxz","","",9,[[],["vec4",3]]],[11,"yyyx","","",9,[[],["vec4",3]]],[11,"yyyy","","",9,[[],["vec4",3]]],[11,"yyyz","","",9,[[],["vec4",3]]],[11,"yyzx","","",9,[[],["vec4",3]]],[11,"yyzy","","",9,[[],["vec4",3]]],[11,"yyzz","","",9,[[],["vec4",3]]],[11,"yzxx","","",9,[[],["vec4",3]]],[11,"yzxy","","",9,[[],["vec4",3]]],[11,"yzxz","","",9,[[],["vec4",3]]],[11,"yzyx","","",9,[[],["vec4",3]]],[11,"yzyy","","",9,[[],["vec4",3]]],[11,"yzyz","","",9,[[],["vec4",3]]],[11,"yzzx","","",9,[[],["vec4",3]]],[11,"yzzy","","",9,[[],["vec4",3]]],[11,"yzzz","","",9,[[],["vec4",3]]],[11,"zxxx","","",9,[[],["vec4",3]]],[11,"zxxy","","",9,[[],["vec4",3]]],[11,"zxxz","","",9,[[],["vec4",3]]],[11,"zxyx","","",9,[[],["vec4",3]]],[11,"zxyy","","",9,[[],["vec4",3]]],[11,"zxyz","","",9,[[],["vec4",3]]],[11,"zxzx","","",9,[[],["vec4",3]]],[11,"zxzy","","",9,[[],["vec4",3]]],[11,"zxzz","","",9,[[],["vec4",3]]],[11,"zyxx","","",9,[[],["vec4",3]]],[11,"zyxy","","",9,[[],["vec4",3]]],[11,"zyxz","","",9,[[],["vec4",3]]],[11,"zyyx","","",9,[[],["vec4",3]]],[11,"zyyy","","",9,[[],["vec4",3]]],[11,"zyyz","","",9,[[],["vec4",3]]],[11,"zyzx","","",9,[[],["vec4",3]]],[11,"zyzy","","",9,[[],["vec4",3]]],[11,"zyzz","","",9,[[],["vec4",3]]],[11,"zzxx","","",9,[[],["vec4",3]]],[11,"zzxy","","",9,[[],["vec4",3]]],[11,"zzxz","","",9,[[],["vec4",3]]],[11,"zzyx","","",9,[[],["vec4",3]]],[11,"zzyy","","",9,[[],["vec4",3]]],[11,"zzyz","","",9,[[],["vec4",3]]],[11,"zzzx","","",9,[[],["vec4",3]]],[11,"zzzy","","",9,[[],["vec4",3]]],[11,"zzzz","","",9,[[],["vec4",3]]],[11,"xxx","","",9,[[],["vec3",3]]],[11,"xxy","","",9,[[],["vec3",3]]],[11,"xxz","","",9,[[],["vec3",3]]],[11,"xyx","","",9,[[],["vec3",3]]],[11,"xyy","","",9,[[],["vec3",3]]],[11,"xzx","","",9,[[],["vec3",3]]],[11,"xzy","","",9,[[],["vec3",3]]],[11,"xzz","","",9,[[],["vec3",3]]],[11,"yxx","","",9,[[],["vec3",3]]],[11,"yxy","","",9,[[],["vec3",3]]],[11,"yxz","","",9,[[],["vec3",3]]],[11,"yyx","","",9,[[],["vec3",3]]],[11,"yyy","","",9,[[],["vec3",3]]],[11,"yyz","","",9,[[],["vec3",3]]],[11,"yzx","","",9,[[],["vec3",3]]],[11,"yzy","","",9,[[],["vec3",3]]],[11,"yzz","","",9,[[],["vec3",3]]],[11,"zxx","","",9,[[],["vec3",3]]],[11,"zxy","","",9,[[],["vec3",3]]],[11,"zxz","","",9,[[],["vec3",3]]],[11,"zyx","","",9,[[],["vec3",3]]],[11,"zyy","","",9,[[],["vec3",3]]],[11,"zyz","","",9,[[],["vec3",3]]],[11,"zzx","","",9,[[],["vec3",3]]],[11,"zzy","","",9,[[],["vec3",3]]],[11,"zzz","","",9,[[],["vec3",3]]],[11,"xx","","",9,[[],["vec2",3]]],[11,"xy","","",9,[[],["vec2",3]]],[11,"xz","","",9,[[],["vec2",3]]],[11,"yx","","",9,[[],["vec2",3]]],[11,"yy","","",9,[[],["vec2",3]]],[11,"yz","","",9,[[],["vec2",3]]],[11,"zx","","",9,[[],["vec2",3]]],[11,"zy","","",9,[[],["vec2",3]]],[11,"zz","","",9,[[],["vec2",3]]],[11,"xxxx","","",10,[[],["vec4",3]]],[11,"xxxy","","",10,[[],["vec4",3]]],[11,"xxxz","","",10,[[],["vec4",3]]],[11,"xxyx","","",10,[[],["vec4",3]]],[11,"xxyy","","",10,[[],["vec4",3]]],[11,"xxyz","","",10,[[],["vec4",3]]],[11,"xxzx","","",10,[[],["vec4",3]]],[11,"xxzy","","",10,[[],["vec4",3]]],[11,"xxzz","","",10,[[],["vec4",3]]],[11,"xyxx","","",10,[[],["vec4",3]]],[11,"xyxy","","",10,[[],["vec4",3]]],[11,"xyxz","","",10,[[],["vec4",3]]],[11,"xyyx","","",10,[[],["vec4",3]]],[11,"xyyy","","",10,[[],["vec4",3]]],[11,"xyyz","","",10,[[],["vec4",3]]],[11,"xyzx","","",10,[[],["vec4",3]]],[11,"xyzy","","",10,[[],["vec4",3]]],[11,"xyzz","","",10,[[],["vec4",3]]],[11,"xzxx","","",10,[[],["vec4",3]]],[11,"xzxy","","",10,[[],["vec4",3]]],[11,"xzxz","","",10,[[],["vec4",3]]],[11,"xzyx","","",10,[[],["vec4",3]]],[11,"xzyy","","",10,[[],["vec4",3]]],[11,"xzyz","","",10,[[],["vec4",3]]],[11,"xzzx","","",10,[[],["vec4",3]]],[11,"xzzy","","",10,[[],["vec4",3]]],[11,"xzzz","","",10,[[],["vec4",3]]],[11,"yxxx","","",10,[[],["vec4",3]]],[11,"yxxy","","",10,[[],["vec4",3]]],[11,"yxxz","","",10,[[],["vec4",3]]],[11,"yxyx","","",10,[[],["vec4",3]]],[11,"yxyy","","",10,[[],["vec4",3]]],[11,"yxyz","","",10,[[],["vec4",3]]],[11,"yxzx","","",10,[[],["vec4",3]]],[11,"yxzy","","",10,[[],["vec4",3]]],[11,"yxzz","","",10,[[],["vec4",3]]],[11,"yyxx","","",10,[[],["vec4",3]]],[11,"yyxy","","",10,[[],["vec4",3]]],[11,"yyxz","","",10,[[],["vec4",3]]],[11,"yyyx","","",10,[[],["vec4",3]]],[11,"yyyy","","",10,[[],["vec4",3]]],[11,"yyyz","","",10,[[],["vec4",3]]],[11,"yyzx","","",10,[[],["vec4",3]]],[11,"yyzy","","",10,[[],["vec4",3]]],[11,"yyzz","","",10,[[],["vec4",3]]],[11,"yzxx","","",10,[[],["vec4",3]]],[11,"yzxy","","",10,[[],["vec4",3]]],[11,"yzxz","","",10,[[],["vec4",3]]],[11,"yzyx","","",10,[[],["vec4",3]]],[11,"yzyy","","",10,[[],["vec4",3]]],[11,"yzyz","","",10,[[],["vec4",3]]],[11,"yzzx","","",10,[[],["vec4",3]]],[11,"yzzy","","",10,[[],["vec4",3]]],[11,"yzzz","","",10,[[],["vec4",3]]],[11,"zxxx","","",10,[[],["vec4",3]]],[11,"zxxy","","",10,[[],["vec4",3]]],[11,"zxxz","","",10,[[],["vec4",3]]],[11,"zxyx","","",10,[[],["vec4",3]]],[11,"zxyy","","",10,[[],["vec4",3]]],[11,"zxyz","","",10,[[],["vec4",3]]],[11,"zxzx","","",10,[[],["vec4",3]]],[11,"zxzy","","",10,[[],["vec4",3]]],[11,"zxzz","","",10,[[],["vec4",3]]],[11,"zyxx","","",10,[[],["vec4",3]]],[11,"zyxy","","",10,[[],["vec4",3]]],[11,"zyxz","","",10,[[],["vec4",3]]],[11,"zyyx","","",10,[[],["vec4",3]]],[11,"zyyy","","",10,[[],["vec4",3]]],[11,"zyyz","","",10,[[],["vec4",3]]],[11,"zyzx","","",10,[[],["vec4",3]]],[11,"zyzy","","",10,[[],["vec4",3]]],[11,"zyzz","","",10,[[],["vec4",3]]],[11,"zzxx","","",10,[[],["vec4",3]]],[11,"zzxy","","",10,[[],["vec4",3]]],[11,"zzxz","","",10,[[],["vec4",3]]],[11,"zzyx","","",10,[[],["vec4",3]]],[11,"zzyy","","",10,[[],["vec4",3]]],[11,"zzyz","","",10,[[],["vec4",3]]],[11,"zzzx","","",10,[[],["vec4",3]]],[11,"zzzy","","",10,[[],["vec4",3]]],[11,"zzzz","","",10,[[],["vec4",3]]],[11,"xxx","","",10,[[],["vec3a",3]]],[11,"xxy","","",10,[[],["vec3a",3]]],[11,"xxz","","",10,[[],["vec3a",3]]],[11,"xyx","","",10,[[],["vec3a",3]]],[11,"xyy","","",10,[[],["vec3a",3]]],[11,"xzx","","",10,[[],["vec3a",3]]],[11,"xzy","","",10,[[],["vec3a",3]]],[11,"xzz","","",10,[[],["vec3a",3]]],[11,"yxx","","",10,[[],["vec3a",3]]],[11,"yxy","","",10,[[],["vec3a",3]]],[11,"yxz","","",10,[[],["vec3a",3]]],[11,"yyx","","",10,[[],["vec3a",3]]],[11,"yyy","","",10,[[],["vec3a",3]]],[11,"yyz","","",10,[[],["vec3a",3]]],[11,"yzx","","",10,[[],["vec3a",3]]],[11,"yzy","","",10,[[],["vec3a",3]]],[11,"yzz","","",10,[[],["vec3a",3]]],[11,"zxx","","",10,[[],["vec3a",3]]],[11,"zxy","","",10,[[],["vec3a",3]]],[11,"zxz","","",10,[[],["vec3a",3]]],[11,"zyx","","",10,[[],["vec3a",3]]],[11,"zyy","","",10,[[],["vec3a",3]]],[11,"zyz","","",10,[[],["vec3a",3]]],[11,"zzx","","",10,[[],["vec3a",3]]],[11,"zzy","","",10,[[],["vec3a",3]]],[11,"zzz","","",10,[[],["vec3a",3]]],[11,"xx","","",10,[[],["vec2",3]]],[11,"xy","","",10,[[],["vec2",3]]],[11,"xz","","",10,[[],["vec2",3]]],[11,"yx","","",10,[[],["vec2",3]]],[11,"yy","","",10,[[],["vec2",3]]],[11,"yz","","",10,[[],["vec2",3]]],[11,"zx","","",10,[[],["vec2",3]]],[11,"zy","","",10,[[],["vec2",3]]],[11,"zz","","",10,[[],["vec2",3]]],[11,"xxxx","","",11,[[],["vec4",3]]],[11,"xxxy","","",11,[[],["vec4",3]]],[11,"xxxz","","",11,[[],["vec4",3]]],[11,"xxxw","","",11,[[],["vec4",3]]],[11,"xxyx","","",11,[[],["vec4",3]]],[11,"xxyy","","",11,[[],["vec4",3]]],[11,"xxyz","","",11,[[],["vec4",3]]],[11,"xxyw","","",11,[[],["vec4",3]]],[11,"xxzx","","",11,[[],["vec4",3]]],[11,"xxzy","","",11,[[],["vec4",3]]],[11,"xxzz","","",11,[[],["vec4",3]]],[11,"xxzw","","",11,[[],["vec4",3]]],[11,"xxwx","","",11,[[],["vec4",3]]],[11,"xxwy","","",11,[[],["vec4",3]]],[11,"xxwz","","",11,[[],["vec4",3]]],[11,"xxww","","",11,[[],["vec4",3]]],[11,"xyxx","","",11,[[],["vec4",3]]],[11,"xyxy","","",11,[[],["vec4",3]]],[11,"xyxz","","",11,[[],["vec4",3]]],[11,"xyxw","","",11,[[],["vec4",3]]],[11,"xyyx","","",11,[[],["vec4",3]]],[11,"xyyy","","",11,[[],["vec4",3]]],[11,"xyyz","","",11,[[],["vec4",3]]],[11,"xyyw","","",11,[[],["vec4",3]]],[11,"xyzx","","",11,[[],["vec4",3]]],[11,"xyzy","","",11,[[],["vec4",3]]],[11,"xyzz","","",11,[[],["vec4",3]]],[11,"xywx","","",11,[[],["vec4",3]]],[11,"xywy","","",11,[[],["vec4",3]]],[11,"xywz","","",11,[[],["vec4",3]]],[11,"xyww","","",11,[[],["vec4",3]]],[11,"xzxx","","",11,[[],["vec4",3]]],[11,"xzxy","","",11,[[],["vec4",3]]],[11,"xzxz","","",11,[[],["vec4",3]]],[11,"xzxw","","",11,[[],["vec4",3]]],[11,"xzyx","","",11,[[],["vec4",3]]],[11,"xzyy","","",11,[[],["vec4",3]]],[11,"xzyz","","",11,[[],["vec4",3]]],[11,"xzyw","","",11,[[],["vec4",3]]],[11,"xzzx","","",11,[[],["vec4",3]]],[11,"xzzy","","",11,[[],["vec4",3]]],[11,"xzzz","","",11,[[],["vec4",3]]],[11,"xzzw","","",11,[[],["vec4",3]]],[11,"xzwx","","",11,[[],["vec4",3]]],[11,"xzwy","","",11,[[],["vec4",3]]],[11,"xzwz","","",11,[[],["vec4",3]]],[11,"xzww","","",11,[[],["vec4",3]]],[11,"xwxx","","",11,[[],["vec4",3]]],[11,"xwxy","","",11,[[],["vec4",3]]],[11,"xwxz","","",11,[[],["vec4",3]]],[11,"xwxw","","",11,[[],["vec4",3]]],[11,"xwyx","","",11,[[],["vec4",3]]],[11,"xwyy","","",11,[[],["vec4",3]]],[11,"xwyz","","",11,[[],["vec4",3]]],[11,"xwyw","","",11,[[],["vec4",3]]],[11,"xwzx","","",11,[[],["vec4",3]]],[11,"xwzy","","",11,[[],["vec4",3]]],[11,"xwzz","","",11,[[],["vec4",3]]],[11,"xwzw","","",11,[[],["vec4",3]]],[11,"xwwx","","",11,[[],["vec4",3]]],[11,"xwwy","","",11,[[],["vec4",3]]],[11,"xwwz","","",11,[[],["vec4",3]]],[11,"xwww","","",11,[[],["vec4",3]]],[11,"yxxx","","",11,[[],["vec4",3]]],[11,"yxxy","","",11,[[],["vec4",3]]],[11,"yxxz","","",11,[[],["vec4",3]]],[11,"yxxw","","",11,[[],["vec4",3]]],[11,"yxyx","","",11,[[],["vec4",3]]],[11,"yxyy","","",11,[[],["vec4",3]]],[11,"yxyz","","",11,[[],["vec4",3]]],[11,"yxyw","","",11,[[],["vec4",3]]],[11,"yxzx","","",11,[[],["vec4",3]]],[11,"yxzy","","",11,[[],["vec4",3]]],[11,"yxzz","","",11,[[],["vec4",3]]],[11,"yxzw","","",11,[[],["vec4",3]]],[11,"yxwx","","",11,[[],["vec4",3]]],[11,"yxwy","","",11,[[],["vec4",3]]],[11,"yxwz","","",11,[[],["vec4",3]]],[11,"yxww","","",11,[[],["vec4",3]]],[11,"yyxx","","",11,[[],["vec4",3]]],[11,"yyxy","","",11,[[],["vec4",3]]],[11,"yyxz","","",11,[[],["vec4",3]]],[11,"yyxw","","",11,[[],["vec4",3]]],[11,"yyyx","","",11,[[],["vec4",3]]],[11,"yyyy","","",11,[[],["vec4",3]]],[11,"yyyz","","",11,[[],["vec4",3]]],[11,"yyyw","","",11,[[],["vec4",3]]],[11,"yyzx","","",11,[[],["vec4",3]]],[11,"yyzy","","",11,[[],["vec4",3]]],[11,"yyzz","","",11,[[],["vec4",3]]],[11,"yyzw","","",11,[[],["vec4",3]]],[11,"yywx","","",11,[[],["vec4",3]]],[11,"yywy","","",11,[[],["vec4",3]]],[11,"yywz","","",11,[[],["vec4",3]]],[11,"yyww","","",11,[[],["vec4",3]]],[11,"yzxx","","",11,[[],["vec4",3]]],[11,"yzxy","","",11,[[],["vec4",3]]],[11,"yzxz","","",11,[[],["vec4",3]]],[11,"yzxw","","",11,[[],["vec4",3]]],[11,"yzyx","","",11,[[],["vec4",3]]],[11,"yzyy","","",11,[[],["vec4",3]]],[11,"yzyz","","",11,[[],["vec4",3]]],[11,"yzyw","","",11,[[],["vec4",3]]],[11,"yzzx","","",11,[[],["vec4",3]]],[11,"yzzy","","",11,[[],["vec4",3]]],[11,"yzzz","","",11,[[],["vec4",3]]],[11,"yzzw","","",11,[[],["vec4",3]]],[11,"yzwx","","",11,[[],["vec4",3]]],[11,"yzwy","","",11,[[],["vec4",3]]],[11,"yzwz","","",11,[[],["vec4",3]]],[11,"yzww","","",11,[[],["vec4",3]]],[11,"ywxx","","",11,[[],["vec4",3]]],[11,"ywxy","","",11,[[],["vec4",3]]],[11,"ywxz","","",11,[[],["vec4",3]]],[11,"ywxw","","",11,[[],["vec4",3]]],[11,"ywyx","","",11,[[],["vec4",3]]],[11,"ywyy","","",11,[[],["vec4",3]]],[11,"ywyz","","",11,[[],["vec4",3]]],[11,"ywyw","","",11,[[],["vec4",3]]],[11,"ywzx","","",11,[[],["vec4",3]]],[11,"ywzy","","",11,[[],["vec4",3]]],[11,"ywzz","","",11,[[],["vec4",3]]],[11,"ywzw","","",11,[[],["vec4",3]]],[11,"ywwx","","",11,[[],["vec4",3]]],[11,"ywwy","","",11,[[],["vec4",3]]],[11,"ywwz","","",11,[[],["vec4",3]]],[11,"ywww","","",11,[[],["vec4",3]]],[11,"zxxx","","",11,[[],["vec4",3]]],[11,"zxxy","","",11,[[],["vec4",3]]],[11,"zxxz","","",11,[[],["vec4",3]]],[11,"zxxw","","",11,[[],["vec4",3]]],[11,"zxyx","","",11,[[],["vec4",3]]],[11,"zxyy","","",11,[[],["vec4",3]]],[11,"zxyz","","",11,[[],["vec4",3]]],[11,"zxyw","","",11,[[],["vec4",3]]],[11,"zxzx","","",11,[[],["vec4",3]]],[11,"zxzy","","",11,[[],["vec4",3]]],[11,"zxzz","","",11,[[],["vec4",3]]],[11,"zxzw","","",11,[[],["vec4",3]]],[11,"zxwx","","",11,[[],["vec4",3]]],[11,"zxwy","","",11,[[],["vec4",3]]],[11,"zxwz","","",11,[[],["vec4",3]]],[11,"zxww","","",11,[[],["vec4",3]]],[11,"zyxx","","",11,[[],["vec4",3]]],[11,"zyxy","","",11,[[],["vec4",3]]],[11,"zyxz","","",11,[[],["vec4",3]]],[11,"zyxw","","",11,[[],["vec4",3]]],[11,"zyyx","","",11,[[],["vec4",3]]],[11,"zyyy","","",11,[[],["vec4",3]]],[11,"zyyz","","",11,[[],["vec4",3]]],[11,"zyyw","","",11,[[],["vec4",3]]],[11,"zyzx","","",11,[[],["vec4",3]]],[11,"zyzy","","",11,[[],["vec4",3]]],[11,"zyzz","","",11,[[],["vec4",3]]],[11,"zyzw","","",11,[[],["vec4",3]]],[11,"zywx","","",11,[[],["vec4",3]]],[11,"zywy","","",11,[[],["vec4",3]]],[11,"zywz","","",11,[[],["vec4",3]]],[11,"zyww","","",11,[[],["vec4",3]]],[11,"zzxx","","",11,[[],["vec4",3]]],[11,"zzxy","","",11,[[],["vec4",3]]],[11,"zzxz","","",11,[[],["vec4",3]]],[11,"zzxw","","",11,[[],["vec4",3]]],[11,"zzyx","","",11,[[],["vec4",3]]],[11,"zzyy","","",11,[[],["vec4",3]]],[11,"zzyz","","",11,[[],["vec4",3]]],[11,"zzyw","","",11,[[],["vec4",3]]],[11,"zzzx","","",11,[[],["vec4",3]]],[11,"zzzy","","",11,[[],["vec4",3]]],[11,"zzzz","","",11,[[],["vec4",3]]],[11,"zzzw","","",11,[[],["vec4",3]]],[11,"zzwx","","",11,[[],["vec4",3]]],[11,"zzwy","","",11,[[],["vec4",3]]],[11,"zzwz","","",11,[[],["vec4",3]]],[11,"zzww","","",11,[[],["vec4",3]]],[11,"zwxx","","",11,[[],["vec4",3]]],[11,"zwxy","","",11,[[],["vec4",3]]],[11,"zwxz","","",11,[[],["vec4",3]]],[11,"zwxw","","",11,[[],["vec4",3]]],[11,"zwyx","","",11,[[],["vec4",3]]],[11,"zwyy","","",11,[[],["vec4",3]]],[11,"zwyz","","",11,[[],["vec4",3]]],[11,"zwyw","","",11,[[],["vec4",3]]],[11,"zwzx","","",11,[[],["vec4",3]]],[11,"zwzy","","",11,[[],["vec4",3]]],[11,"zwzz","","",11,[[],["vec4",3]]],[11,"zwzw","","",11,[[],["vec4",3]]],[11,"zwwx","","",11,[[],["vec4",3]]],[11,"zwwy","","",11,[[],["vec4",3]]],[11,"zwwz","","",11,[[],["vec4",3]]],[11,"zwww","","",11,[[],["vec4",3]]],[11,"wxxx","","",11,[[],["vec4",3]]],[11,"wxxy","","",11,[[],["vec4",3]]],[11,"wxxz","","",11,[[],["vec4",3]]],[11,"wxxw","","",11,[[],["vec4",3]]],[11,"wxyx","","",11,[[],["vec4",3]]],[11,"wxyy","","",11,[[],["vec4",3]]],[11,"wxyz","","",11,[[],["vec4",3]]],[11,"wxyw","","",11,[[],["vec4",3]]],[11,"wxzx","","",11,[[],["vec4",3]]],[11,"wxzy","","",11,[[],["vec4",3]]],[11,"wxzz","","",11,[[],["vec4",3]]],[11,"wxzw","","",11,[[],["vec4",3]]],[11,"wxwx","","",11,[[],["vec4",3]]],[11,"wxwy","","",11,[[],["vec4",3]]],[11,"wxwz","","",11,[[],["vec4",3]]],[11,"wxww","","",11,[[],["vec4",3]]],[11,"wyxx","","",11,[[],["vec4",3]]],[11,"wyxy","","",11,[[],["vec4",3]]],[11,"wyxz","","",11,[[],["vec4",3]]],[11,"wyxw","","",11,[[],["vec4",3]]],[11,"wyyx","","",11,[[],["vec4",3]]],[11,"wyyy","","",11,[[],["vec4",3]]],[11,"wyyz","","",11,[[],["vec4",3]]],[11,"wyyw","","",11,[[],["vec4",3]]],[11,"wyzx","","",11,[[],["vec4",3]]],[11,"wyzy","","",11,[[],["vec4",3]]],[11,"wyzz","","",11,[[],["vec4",3]]],[11,"wyzw","","",11,[[],["vec4",3]]],[11,"wywx","","",11,[[],["vec4",3]]],[11,"wywy","","",11,[[],["vec4",3]]],[11,"wywz","","",11,[[],["vec4",3]]],[11,"wyww","","",11,[[],["vec4",3]]],[11,"wzxx","","",11,[[],["vec4",3]]],[11,"wzxy","","",11,[[],["vec4",3]]],[11,"wzxz","","",11,[[],["vec4",3]]],[11,"wzxw","","",11,[[],["vec4",3]]],[11,"wzyx","","",11,[[],["vec4",3]]],[11,"wzyy","","",11,[[],["vec4",3]]],[11,"wzyz","","",11,[[],["vec4",3]]],[11,"wzyw","","",11,[[],["vec4",3]]],[11,"wzzx","","",11,[[],["vec4",3]]],[11,"wzzy","","",11,[[],["vec4",3]]],[11,"wzzz","","",11,[[],["vec4",3]]],[11,"wzzw","","",11,[[],["vec4",3]]],[11,"wzwx","","",11,[[],["vec4",3]]],[11,"wzwy","","",11,[[],["vec4",3]]],[11,"wzwz","","",11,[[],["vec4",3]]],[11,"wzww","","",11,[[],["vec4",3]]],[11,"wwxx","","",11,[[],["vec4",3]]],[11,"wwxy","","",11,[[],["vec4",3]]],[11,"wwxz","","",11,[[],["vec4",3]]],[11,"wwxw","","",11,[[],["vec4",3]]],[11,"wwyx","","",11,[[],["vec4",3]]],[11,"wwyy","","",11,[[],["vec4",3]]],[11,"wwyz","","",11,[[],["vec4",3]]],[11,"wwyw","","",11,[[],["vec4",3]]],[11,"wwzx","","",11,[[],["vec4",3]]],[11,"wwzy","","",11,[[],["vec4",3]]],[11,"wwzz","","",11,[[],["vec4",3]]],[11,"wwzw","","",11,[[],["vec4",3]]],[11,"wwwx","","",11,[[],["vec4",3]]],[11,"wwwy","","",11,[[],["vec4",3]]],[11,"wwwz","","",11,[[],["vec4",3]]],[11,"wwww","","",11,[[],["vec4",3]]],[11,"xxx","","",11,[[],["vec3",3]]],[11,"xxy","","",11,[[],["vec3",3]]],[11,"xxz","","",11,[[],["vec3",3]]],[11,"xxw","","",11,[[],["vec3",3]]],[11,"xyx","","",11,[[],["vec3",3]]],[11,"xyy","","",11,[[],["vec3",3]]],[11,"xyz","","",11,[[],["vec3",3]]],[11,"xyw","","",11,[[],["vec3",3]]],[11,"xzx","","",11,[[],["vec3",3]]],[11,"xzy","","",11,[[],["vec3",3]]],[11,"xzz","","",11,[[],["vec3",3]]],[11,"xzw","","",11,[[],["vec3",3]]],[11,"xwx","","",11,[[],["vec3",3]]],[11,"xwy","","",11,[[],["vec3",3]]],[11,"xwz","","",11,[[],["vec3",3]]],[11,"xww","","",11,[[],["vec3",3]]],[11,"yxx","","",11,[[],["vec3",3]]],[11,"yxy","","",11,[[],["vec3",3]]],[11,"yxz","","",11,[[],["vec3",3]]],[11,"yxw","","",11,[[],["vec3",3]]],[11,"yyx","","",11,[[],["vec3",3]]],[11,"yyy","","",11,[[],["vec3",3]]],[11,"yyz","","",11,[[],["vec3",3]]],[11,"yyw","","",11,[[],["vec3",3]]],[11,"yzx","","",11,[[],["vec3",3]]],[11,"yzy","","",11,[[],["vec3",3]]],[11,"yzz","","",11,[[],["vec3",3]]],[11,"yzw","","",11,[[],["vec3",3]]],[11,"ywx","","",11,[[],["vec3",3]]],[11,"ywy","","",11,[[],["vec3",3]]],[11,"ywz","","",11,[[],["vec3",3]]],[11,"yww","","",11,[[],["vec3",3]]],[11,"zxx","","",11,[[],["vec3",3]]],[11,"zxy","","",11,[[],["vec3",3]]],[11,"zxz","","",11,[[],["vec3",3]]],[11,"zxw","","",11,[[],["vec3",3]]],[11,"zyx","","",11,[[],["vec3",3]]],[11,"zyy","","",11,[[],["vec3",3]]],[11,"zyz","","",11,[[],["vec3",3]]],[11,"zyw","","",11,[[],["vec3",3]]],[11,"zzx","","",11,[[],["vec3",3]]],[11,"zzy","","",11,[[],["vec3",3]]],[11,"zzz","","",11,[[],["vec3",3]]],[11,"zzw","","",11,[[],["vec3",3]]],[11,"zwx","","",11,[[],["vec3",3]]],[11,"zwy","","",11,[[],["vec3",3]]],[11,"zwz","","",11,[[],["vec3",3]]],[11,"zww","","",11,[[],["vec3",3]]],[11,"wxx","","",11,[[],["vec3",3]]],[11,"wxy","","",11,[[],["vec3",3]]],[11,"wxz","","",11,[[],["vec3",3]]],[11,"wxw","","",11,[[],["vec3",3]]],[11,"wyx","","",11,[[],["vec3",3]]],[11,"wyy","","",11,[[],["vec3",3]]],[11,"wyz","","",11,[[],["vec3",3]]],[11,"wyw","","",11,[[],["vec3",3]]],[11,"wzx","","",11,[[],["vec3",3]]],[11,"wzy","","",11,[[],["vec3",3]]],[11,"wzz","","",11,[[],["vec3",3]]],[11,"wzw","","",11,[[],["vec3",3]]],[11,"wwx","","",11,[[],["vec3",3]]],[11,"wwy","","",11,[[],["vec3",3]]],[11,"wwz","","",11,[[],["vec3",3]]],[11,"www","","",11,[[],["vec3",3]]],[11,"xx","","",11,[[],["vec2",3]]],[11,"xy","","",11,[[],["vec2",3]]],[11,"xz","","",11,[[],["vec2",3]]],[11,"xw","","",11,[[],["vec2",3]]],[11,"yx","","",11,[[],["vec2",3]]],[11,"yy","","",11,[[],["vec2",3]]],[11,"yz","","",11,[[],["vec2",3]]],[11,"yw","","",11,[[],["vec2",3]]],[11,"zx","","",11,[[],["vec2",3]]],[11,"zy","","",11,[[],["vec2",3]]],[11,"zz","","",11,[[],["vec2",3]]],[11,"zw","","",11,[[],["vec2",3]]],[11,"wx","","",11,[[],["vec2",3]]],[11,"wy","","",11,[[],["vec2",3]]],[11,"wz","","",11,[[],["vec2",3]]],[11,"ww","","",11,[[],["vec2",3]]],[11,"deref","","",4,[[]]],[11,"deref","","",7,[[]]],[11,"deref","","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",4,[[]]],[11,"deref_mut","","",10,[[]]],[11,"deref_mut","","",11,[[]]],[11,"from","","",7,[[["vec4",3]]]],[11,"from","","",11,[[["quat",3]]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[["__m128",3]]]],[11,"from","","",8,[[]]],[11,"from","","",8,[[]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[["vec3a",3]]]],[11,"from","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of the <code>Vec3</code>, …",8,[[["vec3",3]]]],[11,"from","","",10,[[["__m128",3]]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[["vec3",3]]]],[11,"from","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of the <code>Vec3A</code>, …",8,[[["vec3a",3]]]],[11,"from","","",11,[[["__m128",3]]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[]]],[11,"from","","Creates a <code>Vec3</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of the <code>Vec4</code>, …",10,[[["vec4",3]]]],[11,"from","","Creates a <code>Vec3</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of the <code>Vec4</code>, …",9,[[["vec4",3]]]],[11,"from","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of the <code>Vec4</code>, …",8,[[["vec4",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"div","","Divides a quaternion by an f32. The quotient is not …",7,[[]]],[11,"div","","",8,[[["vec2",3]]]],[11,"div","","",8,[[]]],[11,"div","","",9,[[]]],[11,"div","","",9,[[]]],[11,"div","","",10,[[]]],[11,"div","","",10,[[]]],[11,"div","","",11,[[]]],[11,"div","","",11,[[]]],[11,"sub","","",4,[[]]],[11,"sub","","",5,[[]]],[11,"sub","","",6,[[]]],[11,"sub","","Subtracts the other quaternion from self. The difference …",7,[[]]],[11,"sub","","",8,[[["vec2",3]]]],[11,"sub","","",9,[[]]],[11,"sub","","",10,[[]]],[11,"sub","","",11,[[]]],[11,"eq","","",4,[[["mat2",3]]]],[11,"ne","","",4,[[["mat2",3]]]],[11,"eq","","",5,[[["mat3",3]]]],[11,"ne","","",5,[[["mat3",3]]]],[11,"eq","","",6,[[["mat4",3]]]],[11,"ne","","",6,[[["mat4",3]]]],[11,"eq","","",7,[[]]],[11,"eq","","",8,[[["vec2",3]]]],[11,"ne","","",8,[[["vec2",3]]]],[11,"eq","","",12,[[["vec2mask",3]]]],[11,"ne","","",12,[[["vec2mask",3]]]],[11,"eq","","",9,[[["vec3",3]]]],[11,"ne","","",9,[[["vec3",3]]]],[11,"eq","","",13,[[["vec3mask",3]]]],[11,"ne","","",13,[[["vec3mask",3]]]],[11,"eq","","",10,[[["vec3a",3]]]],[11,"ne","","",10,[[["vec3a",3]]]],[11,"eq","","",14,[[]]],[11,"eq","","",11,[[["vec4",3]]]],[11,"ne","","",11,[[["vec4",3]]]],[11,"eq","","",15,[[]]],[11,"cmp","","",12,[[["vec2mask",3]],["ordering",4]]],[11,"cmp","","",13,[[["vec3mask",3]],["ordering",4]]],[11,"cmp","","",14,[[],["ordering",4]]],[11,"cmp","","",15,[[],["ordering",4]]],[11,"partial_cmp","","",4,[[["mat2",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["mat2",3]]]],[11,"le","","",4,[[["mat2",3]]]],[11,"gt","","",4,[[["mat2",3]]]],[11,"ge","","",4,[[["mat2",3]]]],[11,"partial_cmp","","",5,[[["mat3",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["mat3",3]]]],[11,"le","","",5,[[["mat3",3]]]],[11,"gt","","",5,[[["mat3",3]]]],[11,"ge","","",5,[[["mat3",3]]]],[11,"partial_cmp","","",6,[[["mat4",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["mat4",3]]]],[11,"le","","",6,[[["mat4",3]]]],[11,"gt","","",6,[[["mat4",3]]]],[11,"ge","","",6,[[["mat4",3]]]],[11,"partial_cmp","","",7,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",8,[[["vec2",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["vec2",3]]]],[11,"le","","",8,[[["vec2",3]]]],[11,"gt","","",8,[[["vec2",3]]]],[11,"ge","","",8,[[["vec2",3]]]],[11,"partial_cmp","","",12,[[["vec2mask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["vec2mask",3]]]],[11,"le","","",12,[[["vec2mask",3]]]],[11,"gt","","",12,[[["vec2mask",3]]]],[11,"ge","","",12,[[["vec2mask",3]]]],[11,"partial_cmp","","",9,[[["vec3",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["vec3",3]]]],[11,"le","","",9,[[["vec3",3]]]],[11,"gt","","",9,[[["vec3",3]]]],[11,"ge","","",9,[[["vec3",3]]]],[11,"partial_cmp","","",13,[[["vec3mask",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["vec3mask",3]]]],[11,"le","","",13,[[["vec3mask",3]]]],[11,"gt","","",13,[[["vec3mask",3]]]],[11,"ge","","",13,[[["vec3mask",3]]]],[11,"partial_cmp","","",10,[[["vec3a",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["vec3a",3]]]],[11,"le","","",10,[[["vec3a",3]]]],[11,"gt","","",10,[[["vec3a",3]]]],[11,"ge","","",10,[[["vec3a",3]]]],[11,"partial_cmp","","",14,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",11,[[["vec4",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["vec4",3]]]],[11,"le","","",11,[[["vec4",3]]]],[11,"gt","","",11,[[["vec4",3]]]],[11,"ge","","",11,[[["vec4",3]]]],[11,"partial_cmp","","",15,[[],[["option",4],["ordering",4]]]],[11,"add","","",4,[[]]],[11,"add","","",5,[[]]],[11,"add","","",6,[[]]],[11,"add","","Adds two quaternions. The sum is not guaranteed to be …",7,[[]]],[11,"add","","",8,[[]]],[11,"add","","",9,[[]]],[11,"add","","",10,[[]]],[11,"add","","",11,[[]]],[11,"mul","","",4,[[]]],[11,"mul","","",4,[[["vec2",3]],["vec2",3]]],[11,"mul","","",4,[[]]],[11,"mul","","",5,[[]]],[11,"mul","","",5,[[["vec3",3]],["vec3",3]]],[11,"mul","","",5,[[["vec3a",3]],["vec3a",3]]],[11,"mul","","",5,[[]]],[11,"mul","","",6,[[]]],[11,"mul","","",6,[[["vec4",3]],["vec4",3]]],[11,"mul","","",6,[[]]],[11,"mul","","Multiplies a quaternion with an f32. The product is not …",7,[[]]],[11,"mul","","",7,[[]]],[11,"mul","","",7,[[["vec3",3]]]],[11,"mul","","",7,[[["vec3a",3]]]],[11,"mul","","",8,[[["vec2",3]]]],[11,"mul","","",8,[[]]],[11,"mul","","",9,[[]]],[11,"mul","","",9,[[]]],[11,"mul","","",10,[[]]],[11,"mul","","",10,[[]]],[11,"mul","","",11,[[]]],[11,"mul","","",11,[[]]],[11,"neg","","",7,[[]]],[11,"neg","","",8,[[]]],[11,"neg","","",9,[[]]],[11,"neg","","",10,[[]]],[11,"neg","","",11,[[]]],[11,"add_assign","","",8,[[]]],[11,"add_assign","","",9,[[]]],[11,"add_assign","","",10,[[]]],[11,"add_assign","","",11,[[]]],[11,"sub_assign","","",8,[[["vec2",3]]]],[11,"sub_assign","","",9,[[]]],[11,"sub_assign","","",10,[[]]],[11,"sub_assign","","",11,[[]]],[11,"mul_assign","","",7,[[]]],[11,"mul_assign","","",8,[[["vec2",3]]]],[11,"mul_assign","","",8,[[]]],[11,"mul_assign","","",9,[[]]],[11,"mul_assign","","",9,[[]]],[11,"mul_assign","","",10,[[]]],[11,"mul_assign","","",10,[[]]],[11,"mul_assign","","",11,[[]]],[11,"mul_assign","","",11,[[]]],[11,"div_assign","","",8,[[["vec2",3]]]],[11,"div_assign","","",8,[[]]],[11,"div_assign","","",9,[[]]],[11,"div_assign","","",9,[[]]],[11,"div_assign","","",10,[[]]],[11,"div_assign","","",10,[[]]],[11,"div_assign","","",11,[[]]],[11,"div_assign","","",11,[[]]],[11,"not","","",12,[[]]],[11,"not","","",13,[[]]],[11,"not","","",14,[[]]],[11,"not","","",15,[[]]],[11,"bitand","","",12,[[]]],[11,"bitand","","",13,[[]]],[11,"bitand","","",14,[[]]],[11,"bitand","","",15,[[]]],[11,"bitor","","",12,[[]]],[11,"bitor","","",13,[[]]],[11,"bitor","","",14,[[]]],[11,"bitor","","",15,[[]]],[11,"bitand_assign","","",12,[[]]],[11,"bitand_assign","","",13,[[]]],[11,"bitand_assign","","",14,[[]]],[11,"bitand_assign","","",15,[[]]],[11,"bitor_assign","","",12,[[]]],[11,"bitor_assign","","",13,[[]]],[11,"bitor_assign","","",14,[[]]],[11,"bitor_assign","","",15,[[]]],[11,"index","","",8,[[]]],[11,"index","","",9,[[]]],[11,"index","","",10,[[]]],[11,"index","","",11,[[]]],[11,"index_mut","","",8,[[]]],[11,"index_mut","","",9,[[]]],[11,"index_mut","","",10,[[]]],[11,"index_mut","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_ref","","",5,[[]]],[11,"as_ref","","",6,[[]]],[11,"as_ref","","",7,[[]]],[11,"as_ref","","",8,[[]]],[11,"as_ref","","",12,[[]]],[11,"as_ref","","",9,[[]]],[11,"as_ref","","",13,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",14,[[]]],[11,"as_ref","","",11,[[]]],[11,"as_ref","","",15,[[]]],[11,"as_mut","","",4,[[]]],[11,"as_mut","","",5,[[]]],[11,"as_mut","","",6,[[]]],[11,"as_mut","","",7,[[]]],[11,"as_mut","","",8,[[]]],[11,"as_mut","","",9,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",11,[[]]],[11,"clone","","",4,[[],["mat2",3]]],[11,"clone","","",5,[[],["mat3",3]]],[11,"clone","","",6,[[],["mat4",3]]],[11,"clone","","",7,[[],["quat",3]]],[11,"clone","","",8,[[],["vec2",3]]],[11,"clone","","",12,[[],["vec2mask",3]]],[11,"clone","","",9,[[],["vec3",3]]],[11,"clone","","",13,[[],["vec3mask",3]]],[11,"clone","","",10,[[],["vec3a",3]]],[11,"clone","","",14,[[],["vec3amask",3]]],[11,"clone","","",11,[[],["vec4",3]]],[11,"clone","","",15,[[],["vec4mask",3]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[],["vec2",3]]],[11,"default","","",12,[[],["vec2mask",3]]],[11,"default","","",9,[[],["vec3",3]]],[11,"default","","",13,[[],["vec3mask",3]]],[11,"default","","",10,[[],["vec3a",3]]],[11,"default","","",14,[[]]],[11,"default","","",11,[[],["vec4",3]]],[11,"default","","",15,[[]]],[11,"zero","","Creates a 2x2 matrix with all elements set to <code>0.0</code>.",4,[[]]],[11,"identity","","Creates a 2x2 identity matrix.",4,[[]]],[11,"from_cols","","Creates a 2x2 matrix from two column vectors.",4,[[["vec2",3]]]],[11,"from_cols_array","","Creates a 2x2 matrix from a <code>[f32; 4]</code> stored in column …",4,[[]]],[11,"to_cols_array","","Creates a <code>[f32; 4]</code> storing data in column major order. If …",4,[[]]],[11,"from_cols_array_2d","","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> stored in …",4,[[]]],[11,"to_cols_array_2d","","Creates a <code>[[f32; 2]; 2]</code> storing data in column major …",4,[[]]],[11,"from_scale_angle","","Creates a 2x2 matrix containing the given <code>scale</code> and …",4,[[["vec2",3]]]],[11,"from_angle","","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …",4,[[]]],[11,"from_scale","","Creates a 2x2 matrix containing the given non-uniform …",4,[[["vec2",3]]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",4,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",4,[[]]],[11,"transpose","","Returns the transpose of <code>self</code>.",4,[[]]],[11,"determinant","","Returns the determinant of <code>self</code>.",4,[[]]],[11,"inverse","","Returns the inverse of <code>self</code>.",4,[[]]],[11,"mul_vec2","","Transforms a <code>Vec2</code>.",4,[[["vec2",3]],["vec2",3]]],[11,"mul_mat2","","Multiplies two 2x2 matrices.",4,[[]]],[11,"add_mat2","","Adds two 2x2 matrices.",4,[[]]],[11,"sub_mat2","","Subtracts two 2x2 matrices.",4,[[]]],[11,"mul_scalar","","Multiplies a 2x2 matrix by a scalar.",4,[[]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",4,[[]]],[11,"zero","","Creates a 3x3 matrix with all elements set to <code>0.0</code>.",5,[[]]],[11,"identity","","Creates a 3x3 identity matrix.",5,[[]]],[11,"from_cols","","Creates a 3x3 matrix from three column vectors.",5,[[["vec3",3]]]],[11,"from_cols_array","","Creates a 3x3 matrix from a <code>[f32; 9]</code> stored in column …",5,[[]]],[11,"to_cols_array","","Creates a <code>[f32; 9]</code> storing data in column major order. If …",5,[[]]],[11,"from_cols_array_2d","","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> stored in …",5,[[]]],[11,"to_cols_array_2d","","Creates a <code>[[f32; 3]; 3]</code> storing data in column major …",5,[[]]],[11,"from_scale_angle_translation","","Creates a 3x3 homogeneous transformation matrix from the …",5,[[["vec2",3]]]],[11,"from_quat","","Creates a 3x3 rotation matrix from the given quaternion.",5,[[["quat",3]]]],[11,"from_axis_angle","","Creates a 3x3 rotation matrix from a normalized rotation …",5,[[["vec3",3]]]],[11,"from_rotation_ypr","","Creates a 3x3 rotation matrix from the given Euler angles …",5,[[]]],[11,"from_rotation_x","","Creates a 3x3 rotation matrix from <code>angle</code> (in radians) …",5,[[]]],[11,"from_rotation_y","","Creates a 3x3 rotation matrix from <code>angle</code> (in radians) …",5,[[]]],[11,"from_rotation_z","","Creates a 3x3 rotation matrix from <code>angle</code> (in radians) …",5,[[]]],[11,"from_scale","","Creates a 3x3 non-uniform scale matrix.",5,[[["vec3",3]]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",5,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",5,[[]]],[11,"transpose","","Returns the transpose of <code>self</code>.",5,[[]]],[11,"determinant","","Returns the determinant of <code>self</code>.",5,[[]]],[11,"inverse","","Returns the inverse of <code>self</code>.",5,[[]]],[11,"mul_vec3a","","Transforms a <code>Vec3A</code>.",5,[[["vec3a",3]],["vec3a",3]]],[11,"mul_vec3","","Transforms a <code>Vec3</code>.",5,[[["vec3",3]],["vec3",3]]],[11,"mul_mat3","","Multiplies two 3x3 matrices.",5,[[]]],[11,"add_mat3","","Adds two 3x3 matrices.",5,[[]]],[11,"sub_mat3","","Subtracts two 3x3 matrices.",5,[[]]],[11,"mul_scalar","","Multiplies a 3x3 matrix by a scalar.",5,[[]]],[11,"transform_point2","","Transforms the given <code>Vec2</code> as 2D point. This is the …",5,[[["vec2",3]],["vec2",3]]],[11,"transform_vector2","","Transforms the given <code>Vec2</code> as 2D vector. This is the …",5,[[["vec2",3]],["vec2",3]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",5,[[]]],[11,"zero","","Creates a 4x4 matrix with all elements set to <code>0.0</code>.",6,[[]]],[11,"identity","","Creates a 4x4 identity matrix.",6,[[]]],[11,"from_cols","","Creates a 4x4 matrix from four column vectors.",6,[[["vec4",3]]]],[11,"from_cols_array","","Creates a 4x4 matrix from a <code>[f32; 16]</code> stored in column …",6,[[]]],[11,"to_cols_array","","Creates a <code>[f32; 16]</code> storing data in column major order. …",6,[[]]],[11,"from_cols_array_2d","","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> stored in …",6,[[]]],[11,"to_cols_array_2d","","Creates a <code>[[f32; 4]; 4]</code> storing data in column major …",6,[[]]],[11,"from_scale_rotation_translation","","Creates a 4x4 homogeneous transformation matrix from the …",6,[[["vec3",3],["quat",3]]]],[11,"from_rotation_translation","","Creates a 4x4 homogeneous transformation matrix from the …",6,[[["vec3",3],["quat",3]]]],[11,"to_scale_rotation_translation","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …",6,[[]]],[11,"from_quat","","Creates a 4x4 homogeneous transformation matrix from the …",6,[[["quat",3]]]],[11,"from_translation","","Creates a 4x4 homogeneous transformation matrix from the …",6,[[["vec3",3]]]],[11,"from_axis_angle","","Creates a 4x4 homogeneous transformation matrix …",6,[[["vec3",3]]]],[11,"from_rotation_ypr","","Creates a 4x4 homogeneous transformation matrix …",6,[[]]],[11,"from_rotation_x","","Creates a 4x4 homogeneous transformation matrix …",6,[[]]],[11,"from_rotation_y","","Creates a 4x4 homogeneous transformation matrix …",6,[[]]],[11,"from_rotation_z","","Creates a 4x4 homogeneous transformation matrix …",6,[[]]],[11,"from_scale","","Creates a 4x4 homogeneous transformation matrix …",6,[[["vec3",3]]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",6,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",6,[[]]],[11,"transpose","","Returns the transpose of <code>self</code>.",6,[[]]],[11,"determinant","","Returns the determinant of <code>self</code>.",6,[[]]],[11,"inverse","","Returns the inverse of <code>self</code>.",6,[[]]],[11,"look_at_lh","","Creates a left-handed view matrix using a camera …",6,[[["vec3",3]]]],[11,"look_at_rh","","Creates a right-handed view matrix using a camera …",6,[[["vec3",3]]]],[11,"perspective_rh_gl","","Creates a right-handed perspective projection matrix with …",6,[[]]],[11,"perspective_lh","","Creates a left-handed perspective projection matrix with […",6,[[]]],[11,"perspective_rh","","Creates a right-handed perspective projection matrix with …",6,[[]]],[11,"perspective_infinite_lh","","Creates an infinite left-handed perspective projection …",6,[[]]],[11,"perspective_infinite_reverse_lh","","Creates an infinite left-handed perspective projection …",6,[[]]],[11,"perspective_infinite_rh","","Creates an infinite right-handed perspective projection …",6,[[]]],[11,"perspective_infinite_reverse_rh","","Creates an infinite reverse right-handed perspective …",6,[[]]],[11,"orthographic_rh_gl","","Creates a right-handed orthographic projection matrix …",6,[[]]],[11,"orthographic_lh","","Creates a left-handed orthographic projection matrix with …",6,[[]]],[11,"orthographic_rh","","Creates a right-handed orthographic projection matrix …",6,[[]]],[11,"mul_vec4","","Transforms a 4D vector.",6,[[["vec4",3]],["vec4",3]]],[11,"mul_mat4","","Multiplies two 4x4 matrices.",6,[[]]],[11,"add_mat4","","Adds two 4x4 matrices.",6,[[]]],[11,"sub_mat4","","Subtracts two 4x4 matrices.",6,[[]]],[11,"mul_scalar","","Multiplies this matrix by a scalar value.",6,[[]]],[11,"transform_point3","","Transforms the given <code>Vec3</code> as 3D point.",6,[[["vec3",3]],["vec3",3]]],[11,"transform_point3a","","Transforms the given <code>Vec3A</code> as 3D point.",6,[[["vec3a",3]],["vec3a",3]]],[11,"transform_vector3","","Transforms the give <code>Vec3</code> as 3D vector.",6,[[["vec3",3]],["vec3",3]]],[11,"transform_vector3a","","Transforms the give <code>Vec3A</code> as 3D vector.",6,[[["vec3a",3]],["vec3a",3]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",6,[[]]],[11,"from_xyzw","","Creates a new rotation quaternion.",7,[[]]],[11,"identity","","",7,[[]]],[11,"from_slice_unaligned","","Creates a rotation quaternion from an unaligned <code>&[f32]</code>.",7,[[]]],[11,"write_to_slice_unaligned","","Writes the quaternion to an unaligned <code>&mut [f32]</code>.",7,[[]]],[11,"from_axis_angle","","Create a quaterion for a normalized rotation axis and …",7,[[["vec3",3]]]],[11,"from_rotation_x","","Creates a quaternion from the angle (in radians) around …",7,[[]]],[11,"from_rotation_y","","Creates a quaternion from the angle (in radians) around …",7,[[]]],[11,"from_rotation_z","","Creates a quaternion from the angle (in radians) around …",7,[[]]],[11,"from_rotation_ypr","","Create a quaternion from the given yaw (around y), pitch …",7,[[]]],[11,"from_rotation_mat3","","Creates a quaternion from a 3x3 rotation matrix.",7,[[["mat3",3]]]],[11,"from_rotation_mat4","","Creates a quaternion from a 3x3 rotation matrix inside a …",7,[[["mat4",3]]]],[11,"to_axis_angle","","Returns the rotation axis and angle of <code>self</code>.",7,[[]]],[11,"conjugate","","Returns the quaternion conjugate of <code>self</code>. For a unit …",7,[[]]],[11,"dot","","Computes the dot product of <code>self</code> and <code>other</code>. The dot …",7,[[]]],[11,"length","","Computes the length of <code>self</code>.",7,[[]]],[11,"length_squared","","Computes the squared length of <code>self</code>.",7,[[]]],[11,"length_recip","","Computes <code>1.0 / Quat::length()</code>.",7,[[]]],[11,"normalize","","Returns <code>self</code> normalized to length 1.0.",7,[[]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",7,[[]]],[11,"is_nan","","",7,[[]]],[11,"is_normalized","","Returns whether <code>self</code> of length <code>1.0</code> or not.",7,[[]]],[11,"is_near_identity","","",7,[[]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",7,[[]]],[11,"lerp","","Performs a linear interpolation between <code>self</code> and <code>other</code> …",7,[[]]],[11,"slerp","","Performs a spherical linear interpolation between <code>self</code> …",7,[[]]],[11,"mul_vec3a","","Multiplies a quaternion and a 3D vector, rotating it.",7,[[["vec3a",3]],["vec3a",3]]],[11,"mul_vec3","","Multiplies a quaternion and a 3D vector, rotating it.",7,[[["vec3",3]],["vec3",3]]],[11,"mul_quat","","Multiplies two quaternions. If they each represent a …",7,[[]]],[11,"is_nan_mask","","Performs <code>is_nan</code> on each element of self, returning a …",8,[[],["vec2mask",3]]],[11,"signum","","Returns a <code>Vec2</code> with elements representing the sign of <code>self</code>…",8,[[]]],[11,"recip","","Returns a <code>Vec2</code> containing the reciprocal <code>1.0/n</code> of each …",8,[[]]],[11,"lerp","","Performs a linear interpolation between <code>self</code> and <code>other</code> …",8,[[]]],[11,"is_normalized","","Returns whether <code>self</code> is length <code>1.0</code> or not.",8,[[]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",8,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",8,[[]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",8,[[]]],[11,"new","","Creates a new <code>Vec2</code>.",8,[[],["vec2",3]]],[11,"zero","","Creates a <code>Vec2</code> with all elements set to <code>0.0</code>.",8,[[],["vec2",3]]],[11,"one","","Creates a <code>Vec2</code> with all elements set to <code>1.0</code>.",8,[[],["vec2",3]]],[11,"unit_x","","Creates a <code>Vec2</code> with values <code>[x: 1.0, y: 0.0]</code>.",8,[[],["vec2",3]]],[11,"unit_y","","Creates a <code>Vec2</code> with values <code>[x: 0.0, y: 1.0]</code>.",8,[[],["vec2",3]]],[11,"splat","","Creates a <code>Vec2</code> with all elements set to <code>v</code>.",8,[[],["vec2",3]]],[11,"extend","","Creates a <code>Vec3</code> from <code>self</code> and the given <code>z</code> value.",8,[[],["vec3",3]]],[11,"dot","","Computes the dot product of <code>self</code> and <code>other</code>.",8,[[["vec2",3]]]],[11,"length","","Computes the length of <code>self</code>.",8,[[]]],[11,"length_squared","","Computes the squared length of <code>self</code>.",8,[[]]],[11,"length_recip","","Computes <code>1.0 / Vec2::length()</code>.",8,[[]]],[11,"distance","","Computes the Euclidean distance between two points.",8,[[["vec2",3]]]],[11,"distance_squared","","Compute the squared Euclidean distance between two points.",8,[[["vec2",3]]]],[11,"normalize","","Returns <code>self</code> normalized to length 1.0.",8,[[],["vec2",3]]],[11,"min","","Returns the vertical minimum of <code>self</code> and <code>other</code>.",8,[[["vec2",3]],["vec2",3]]],[11,"max","","Returns the vertical maximum of <code>self</code> and <code>other</code>.",8,[[["vec2",3]],["vec2",3]]],[11,"min_element","","Returns the horizontal minimum of <code>self</code>\'s elements.",8,[[]]],[11,"max_element","","Returns the horizontal maximum of <code>self</code>\'s elements.",8,[[]]],[11,"cmpeq","","Performs a vertical <code>==</code> comparison between <code>self</code> and <code>other</code>, …",8,[[["vec2",3]],["vec2mask",3]]],[11,"cmpne","","Performs a vertical <code>!=</code> comparison between <code>self</code> and <code>other</code>, …",8,[[["vec2",3]],["vec2mask",3]]],[11,"cmpge","","Performs a vertical <code>>=</code> comparison between <code>self</code> and <code>other</code>, …",8,[[["vec2",3]],["vec2mask",3]]],[11,"cmpgt","","Performs a vertical <code>></code> comparison between <code>self</code> and <code>other</code>, …",8,[[["vec2",3]],["vec2mask",3]]],[11,"cmple","","Performs a vertical <code><=</code> comparison between <code>self</code> and <code>other</code>, …",8,[[["vec2",3]],["vec2mask",3]]],[11,"cmplt","","Performs a vertical <code><</code> comparison between <code>self</code> and <code>other</code>, …",8,[[["vec2",3]],["vec2mask",3]]],[11,"from_slice_unaligned","","Creates a <code>Vec2</code> from the first two values in <code>slice</code>.",8,[[]]],[11,"write_to_slice_unaligned","","Writes the elements of <code>self</code> to the first two elements in …",8,[[]]],[11,"abs","","Returns a <code>Vec2</code> containing the absolute value of each …",8,[[]]],[11,"round","","Returns a <code>Vec2</code> containing the nearest integer to a number …",8,[[]]],[11,"floor","","Returns a <code>Vec2</code> containing the largest integer less than …",8,[[]]],[11,"ceil","","Returns a <code>Vec2</code> containing the smallest integer greater …",8,[[]]],[11,"exp","","Returns a <code>Vec2</code> containing <code>e^self</code> (the exponential …",8,[[]]],[11,"powf","","Returns a <code>Vec2</code> containing each element of <code>self</code> raised to …",8,[[]]],[11,"perp","","Returns a <code>Vec2</code> that is equal to <code>self</code> rotated by 90 …",8,[[]]],[11,"perp_dot","","The perpendicular dot product of the vector and <code>other</code>.",8,[[["vec2",3]]]],[11,"angle_between","","Returns the angle between two vectors, in radians.",8,[[]]],[11,"new","","Creates a new <code>Vec2Mask</code>.",12,[[]]],[11,"bitmask","","Returns a bitmask with the lowest two bits set from the …",12,[[]]],[11,"any","","Returns true if any of the elements are true, false …",12,[[]]],[11,"all","","Returns true if all the elements are true, false …",12,[[]]],[11,"select","","Creates a <code>Vec2</code> from the elements in <code>if_true</code> and <code>if_false</code>, …",12,[[["vec2",3]],["vec2",3]]],[11,"new","","Creates a new <code>Vec3</code>.",9,[[]]],[11,"zero","","Creates a <code>Vec3</code> with all elements set to <code>0.0</code>.",9,[[]]],[11,"one","","Creates a <code>Vec3</code> with all elements set to <code>1.0</code>.",9,[[]]],[11,"unit_x","","Creates a <code>Vec3</code> with values <code>[x: 1.0, y: 0.0, z: 0.0]</code>.",9,[[]]],[11,"unit_y","","Creates a <code>Vec3</code> with values <code>[x: 0.0, y: 1.0, z: 0.0]</code>.",9,[[]]],[11,"unit_z","","Creates a <code>Vec3</code> with values <code>[x: 0.0, y: 0.0, z: 1.0]</code>.",9,[[]]],[11,"splat","","Creates a <code>Vec3</code> with all elements set to <code>v</code>.",9,[[]]],[11,"extend","","Creates a <code>Vec4</code> from <code>self</code> and the given <code>w</code> value.",9,[[],["vec4",3]]],[11,"truncate","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …",9,[[],["vec2",3]]],[11,"dot","","Computes the dot product of <code>self</code> and <code>other</code>.",9,[[]]],[11,"cross","","Computes the cross product of <code>self</code> and <code>other</code>.",9,[[]]],[11,"length","","Computes the length of <code>self</code>.",9,[[]]],[11,"length_squared","","Computes the squared length of <code>self</code>.",9,[[]]],[11,"length_recip","","Computes <code>1.0 / Vec3::length()</code>.",9,[[]]],[11,"distance","","Computes the Euclidean distance between two points in …",9,[[["vec3",3]]]],[11,"distance_squared","","Compute the squared Euclidean distance between two points …",9,[[["vec3",3]]]],[11,"normalize","","Returns <code>self</code> normalized to length 1.0.",9,[[]]],[11,"min","","Returns the vertical minimum of <code>self</code> and <code>other</code>.",9,[[]]],[11,"max","","Returns the vertical maximum of <code>self</code> and <code>other</code>.",9,[[]]],[11,"min_element","","Returns the horizontal minimum of <code>self</code>\'s elements.",9,[[]]],[11,"max_element","","Returns the horizontal maximum of <code>self</code>\'s elements.",9,[[]]],[11,"cmpeq","","Performs a vertical <code>==</code> comparison between <code>self</code> and <code>other</code>, …",9,[[],["vec3mask",3]]],[11,"cmpne","","Performs a vertical <code>!=</code> comparison between <code>self</code> and <code>other</code>, …",9,[[],["vec3mask",3]]],[11,"cmpge","","Performs a vertical <code>>=</code> comparison between <code>self</code> and <code>other</code>, …",9,[[],["vec3mask",3]]],[11,"cmpgt","","Performs a vertical <code>></code> comparison between <code>self</code> and <code>other</code>, …",9,[[],["vec3mask",3]]],[11,"cmple","","Performs a vertical <code><=</code> comparison between <code>self</code> and <code>other</code>, …",9,[[],["vec3mask",3]]],[11,"cmplt","","Performs a vertical <code><</code> comparison between <code>self</code> and <code>other</code>, …",9,[[],["vec3mask",3]]],[11,"from_slice_unaligned","","Creates a <code>Vec3</code> from the first three values in <code>slice</code>.",9,[[]]],[11,"write_to_slice_unaligned","","Writes the elements of <code>self</code> to the first three elements …",9,[[]]],[11,"abs","","Returns a <code>Vec3</code> containing the absolute value of each …",9,[[]]],[11,"round","","Returns a <code>Vec3</code> containing the nearest integer to a number …",9,[[]]],[11,"floor","","Returns a <code>Vec3</code> containing the largest integer less than …",9,[[]]],[11,"ceil","","Returns a <code>Vec3</code> containing the smallest integer greater …",9,[[]]],[11,"exp","","Returns a <code>Vec3</code> containing <code>e^self</code> (the exponential …",9,[[]]],[11,"powf","","Returns a <code>Vec3</code> containing each element of <code>self</code> raised to …",9,[[]]],[11,"is_nan_mask","","Performs <code>is_nan()</code> on each element of self, returning a …",9,[[],["vec3mask",3]]],[11,"signum","","Returns a <code>Vec3</code> with elements representing the sign of <code>self</code>…",9,[[]]],[11,"recip","","Returns a <code>Vec3</code> containing the reciprocal <code>1.0/n</code> of each …",9,[[]]],[11,"lerp","","Performs a linear interpolation between <code>self</code> and <code>other</code> …",9,[[]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",9,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",9,[[]]],[11,"is_normalized","","Returns whether <code>self</code> of length <code>1.0</code> or not.",9,[[]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",9,[[]]],[11,"angle_between","","Returns the angle between two vectors, in radians.",9,[[]]],[11,"new","","Creates a new <code>Vec3Mask</code>.",13,[[]]],[11,"bitmask","","Returns a bitmask with the lowest three bits set from the …",13,[[]]],[11,"any","","Returns true if any of the elements are true, false …",13,[[]]],[11,"all","","Returns true if all the elements are true, false …",13,[[]]],[11,"select","","Creates a <code>Vec3</code> from the elements in <code>if_true</code> and <code>if_false</code>, …",13,[[["vec3",3]],["vec3",3]]],[11,"new","","Creates a new <code>Vec3A</code>.",10,[[]]],[11,"zero","","Creates a <code>Vec3A</code> with all elements set to <code>0.0</code>.",10,[[]]],[11,"one","","Creates a <code>Vec3A</code> with all elements set to <code>1.0</code>.",10,[[]]],[11,"unit_x","","Creates a <code>Vec3A</code> with values <code>[x: 1.0, y: 0.0, z: 0.0]</code>.",10,[[]]],[11,"unit_y","","Creates a <code>Vec3A</code> with values <code>[x: 0.0, y: 1.0, z: 0.0]</code>.",10,[[]]],[11,"unit_z","","Creates a <code>Vec3A</code> with values <code>[x: 0.0, y: 0.0, z: 1.0]</code>.",10,[[]]],[11,"splat","","Creates a <code>Vec3A</code> with all elements set to <code>v</code>.",10,[[]]],[11,"extend","","Creates a <code>Vec4</code> from <code>self</code> and the given <code>w</code> value.",10,[[],["vec4",3]]],[11,"truncate","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …",10,[[],["vec2",3]]],[11,"dot","","Computes the dot product of <code>self</code> and <code>other</code>.",10,[[]]],[11,"cross","","Computes the cross product of <code>self</code> and <code>other</code>.",10,[[]]],[11,"length","","Computes the length of <code>self</code>.",10,[[]]],[11,"length_squared","","Computes the squared length of <code>self</code>.",10,[[]]],[11,"length_recip","","Computes <code>1.0 / Vec3A::length()</code>.",10,[[]]],[11,"distance","","Computes the Euclidean distance between two points in …",10,[[["vec3a",3]]]],[11,"distance_squared","","Compute the squared euclidean distance between two points …",10,[[["vec3a",3]]]],[11,"normalize","","Returns <code>self</code> normalized to length 1.0.",10,[[]]],[11,"min","","Returns the vertical minimum of <code>self</code> and <code>other</code>.",10,[[]]],[11,"max","","Returns the vertical maximum of <code>self</code> and <code>other</code>.",10,[[]]],[11,"min_element","","Returns the horizontal minimum of <code>self</code>\'s elements.",10,[[]]],[11,"max_element","","Returns the horizontal maximum of <code>self</code>\'s elements.",10,[[]]],[11,"cmpeq","","Performs a vertical <code>==</code> comparison between <code>self</code> and <code>other</code>, …",10,[[],["vec3amask",3]]],[11,"cmpne","","Performs a vertical <code>!=</code> comparison between <code>self</code> and <code>other</code>, …",10,[[],["vec3amask",3]]],[11,"cmpge","","Performs a vertical <code>>=</code> comparison between <code>self</code> and <code>other</code>, …",10,[[],["vec3amask",3]]],[11,"cmpgt","","Performs a vertical <code>></code> comparison between <code>self</code> and <code>other</code>, …",10,[[],["vec3amask",3]]],[11,"cmple","","Performs a vertical <code><=</code> comparison between <code>self</code> and <code>other</code>, …",10,[[],["vec3amask",3]]],[11,"cmplt","","Performs a vertical <code><</code> comparison between <code>self</code> and <code>other</code>, …",10,[[],["vec3amask",3]]],[11,"from_slice_unaligned","","Creates a <code>Vec3A</code> from the first four values in <code>slice</code>.",10,[[]]],[11,"write_to_slice_unaligned","","Writes the elements of <code>self</code> to the first three elements …",10,[[]]],[11,"abs","","Returns a <code>Vec3A</code> containing the absolute value of each …",10,[[]]],[11,"round","","Returns a <code>Vec3A</code> containing the nearest integer to a …",10,[[]]],[11,"floor","","Returns a <code>Vec3A</code> containing the largest integer less than …",10,[[]]],[11,"ceil","","Returns a <code>Vec3A</code> containing the smallest integer greater …",10,[[]]],[11,"exp","","Returns a <code>Vec3A</code> containing <code>e^self</code> (the exponential …",10,[[]]],[11,"powf","","Returns a <code>Vec3A</code> containing each element of <code>self</code> raised to …",10,[[]]],[11,"is_nan_mask","","Performs <code>is_nan()</code> on each element of self, returning a …",10,[[],["vec3amask",3]]],[11,"signum","","Returns a <code>Vec3A</code> with elements representing the sign of …",10,[[]]],[11,"recip","","Returns a <code>Vec3A</code> containing the reciprocal <code>1.0/n</code> of each …",10,[[]]],[11,"lerp","","Performs a linear interpolation between <code>self</code> and <code>other</code> …",10,[[]]],[11,"is_normalized","","Returns whether <code>self</code> of length <code>1.0</code> or not.",10,[[]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",10,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",10,[[]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",10,[[]]],[11,"angle_between","","Returns the angle between two vectors, in radians.",10,[[]]],[11,"new","","Creates a new <code>Vec3AMask</code>.",14,[[]]],[11,"bitmask","","Returns a bitmask with the lowest three bits set from the …",14,[[]]],[11,"any","","Returns true if any of the elements are true, false …",14,[[]]],[11,"all","","Returns true if all the elements are true, false …",14,[[]]],[11,"select","","Creates a new <code>Vec3A</code> from the elements in <code>if_true</code> and …",14,[[["vec3a",3]],["vec3a",3]]],[11,"new","","Creates a new <code>Vec4</code>.",11,[[]]],[11,"zero","","Creates a <code>Vec4</code> with all elements set to <code>0.0</code>.",11,[[]]],[11,"one","","Creates a <code>Vec4</code> with all elements set to <code>1.0</code>.",11,[[]]],[11,"unit_x","","Creates a <code>Vec4</code> with values …",11,[[]]],[11,"unit_y","","Creates a <code>Vec4</code> with values …",11,[[]]],[11,"unit_z","","Creates a <code>Vec4</code> with values …",11,[[]]],[11,"unit_w","","Creates a <code>Vec4</code> with values …",11,[[]]],[11,"splat","","Creates a <code>Vec4</code> with all elements set to <code>v</code>.",11,[[]]],[11,"truncate","","Creates a <code>Vec3</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …",11,[[],["vec3",3]]],[11,"dot","","Computes the 4D dot product of <code>self</code> and <code>other</code>.",11,[[]]],[11,"length","","Computes the 4D length of <code>self</code>.",11,[[]]],[11,"length_squared","","Computes the squared 4D length of <code>self</code>.",11,[[]]],[11,"length_recip","","Computes <code>1.0 / Vec4::length()</code>.",11,[[]]],[11,"distance","","Computes the Euclidean distance between two points in …",11,[[["vec4",3]]]],[11,"distance_squared","","Compute the squared euclidean distance between two points …",11,[[["vec4",3]]]],[11,"normalize","","Returns <code>self</code> normalized to length 1.0.",11,[[]]],[11,"min","","Returns the vertical minimum of <code>self</code> and <code>other</code>.",11,[[]]],[11,"max","","Returns the vertical maximum of <code>self</code> and <code>other</code>.",11,[[]]],[11,"min_element","","Returns the horizontal minimum of <code>self</code>\'s elements.",11,[[]]],[11,"max_element","","Returns the horizontal maximum of <code>self</code>\'s elements.",11,[[]]],[11,"cmpeq","","Performs a vertical <code>==</code> comparison between <code>self</code> and <code>other</code>, …",11,[[],["vec4mask",3]]],[11,"cmpne","","Performs a vertical <code>!=</code> comparison between <code>self</code> and <code>other</code>, …",11,[[],["vec4mask",3]]],[11,"cmpge","","Performs a vertical <code>>=</code> comparison between <code>self</code> and <code>other</code>, …",11,[[],["vec4mask",3]]],[11,"cmpgt","","Performs a vertical <code>></code> comparison between <code>self</code> and <code>other</code>, …",11,[[],["vec4mask",3]]],[11,"cmple","","Performs a vertical <code><=</code> comparison between <code>self</code> and <code>other</code>, …",11,[[],["vec4mask",3]]],[11,"cmplt","","Performs a vertical <code><</code> comparison between <code>self</code> and <code>other</code>, …",11,[[],["vec4mask",3]]],[11,"from_slice_unaligned","","Creates a <code>Vec4</code> from the first four values in <code>slice</code>.",11,[[]]],[11,"write_to_slice_unaligned","","Writes the elements of <code>self</code> to the first four elements in …",11,[[]]],[11,"abs","","Returns a <code>Vec4</code> containing the absolute value of each …",11,[[]]],[11,"round","","Returns a <code>Vec4</code> containing the nearest integer to a number …",11,[[]]],[11,"floor","","Returns a <code>Vec4</code> containing the largest integer less than …",11,[[]]],[11,"ceil","","Returns a <code>Vec4</code> containing the smallest integer greater …",11,[[]]],[11,"exp","","Returns a <code>Vec4</code> containing <code>e^self</code> (the exponential …",11,[[]]],[11,"powf","","Returns a <code>Vec4</code> containing each element of <code>self</code> raised to …",11,[[]]],[11,"is_nan_mask","","Performs <code>is_nan</code> on each element of self, returning a …",11,[[],["vec4mask",3]]],[11,"signum","","Returns a <code>Vec4</code> with elements representing the sign of <code>self</code>…",11,[[]]],[11,"recip","","Returns a <code>Vec4</code> containing the reciprocal <code>1.0/n</code> of each …",11,[[]]],[11,"lerp","","Performs a linear interpolation between <code>self</code> and <code>other</code> …",11,[[]]],[11,"is_finite","","Returns <code>true</code> if, and only if, all elements are finite. If …",11,[[]]],[11,"is_nan","","Returns <code>true</code> if any elements are <code>NaN</code>.",11,[[]]],[11,"is_normalized","","Returns whether <code>self</code> is length <code>1.0</code> or not.",11,[[]]],[11,"abs_diff_eq","","Returns true if the absolute difference of all elements …",11,[[]]],[11,"new","","Creates a new <code>Vec4Mask</code>.",15,[[]]],[11,"bitmask","","Returns a bitmask with the lowest four bits set from the …",15,[[]]],[11,"any","","Returns true if any of the elements are true, false …",15,[[]]],[11,"all","","Returns true if all the elements are true, false …",15,[[]]],[11,"select","","Creates a <code>Vec4</code> from the elements in <code>if_true</code> and <code>if_false</code>, …",15,[[["vec4",3]],["vec4",3]]]],"p":[[8,"Vec2Swizzles"],[8,"Vec3ASwizzles"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[3,"Mat2"],[3,"Mat3"],[3,"Mat4"],[3,"Quat"],[3,"Vec2"],[3,"Vec3"],[3,"Vec3A"],[3,"Vec4"],[3,"Vec2Mask"],[3,"Vec3Mask"],[3,"Vec3AMask"],[3,"Vec4Mask"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google\'s high-performance …","i":[[0,"raw","hashbrown","Experimental and unsafe <code>RawTable</code> API. This module is only …",null,null],[3,"Bucket","hashbrown::raw","A reference to a hash table bucket containing a <code>T</code>.",null,null],[3,"RawTable","","A raw hash table with an unsafe API.",null,null],[3,"RawIter","","Iterator which returns a raw pointer to every full bucket …",null,null],[3,"RawIntoIter","","Iterator which consumes a table and returns elements.",null,null],[3,"RawDrain","","Iterator which consumes elements without freeing the …",null,null],[3,"RawIterHash","","Iterator over occupied buckets that could match a given …",null,null],[0,"hash_map","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[4,"DefaultHashBuilder","hashbrown::hash_map","Dummy default hasher for <code>HashMap</code>.",null,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"Iter","","An iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HashMap</code>.",null,null],[3,"Keys","","An iterator over the keys of a <code>HashMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>HashMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>HashMap</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashMap</code> which don\'t …",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>HashMap</code>.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",0,null],[13,"Vacant","","A vacant entry.",0,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",1,null],[13,"Vacant","","A vacant entry.",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[0,"hash_set","hashbrown","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>HashSet</code>.",null,null],[3,"IntoIter","","An owning iterator over the items of a <code>HashSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>HashSet</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashSet</code> which don\'t …",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of <code>HashSet</code>…",null,null],[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"HashSet","","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[4,"TryReserveError","","The error type for <code>try_reserve</code> methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the …",2,null],[13,"AllocError","","The memory allocator returned an error",2,null],[12,"layout","hashbrown::TryReserveError","The layout of the allocation request that failed.",3,null],[11,"from","hashbrown::raw","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","hashbrown::hash_map","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","hashbrown::hash_set","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"into_iter","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"into_iter","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"into_iter","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"into_iter","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"into_iter","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"into_iter","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"into_iter","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","hashbrown","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","hashbrown::hash_map","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_set","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",2,[[["formatter",3]],["result",6]]],[11,"eq","hashbrown::hash_map","",11,[[]]],[11,"eq","hashbrown::hash_set","",26,[[]]],[11,"eq","hashbrown","",2,[[["tryreserveerror",4]]]],[11,"ne","","",2,[[["tryreserveerror",4]]]],[11,"drop","hashbrown::raw","",5,[[]]],[11,"drop","","",7,[[]]],[11,"drop","","",8,[[]]],[11,"drop","hashbrown::hash_map","",18,[[]]],[11,"drop","hashbrown::hash_set","",30,[[]]],[11,"index","hashbrown::hash_map","Returns a reference to the value corresponding to the …",11,[[]]],[11,"len","","",12,[[]]],[11,"len","","",13,[[]]],[11,"len","","",14,[[]]],[11,"len","","",15,[[]]],[11,"len","","",16,[[]]],[11,"len","","",19,[[]]],[11,"len","","",17,[[]]],[11,"len","hashbrown::hash_set","",27,[[]]],[11,"len","","",28,[[]]],[11,"len","","",29,[[]]],[11,"from_iter","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"from_iter","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"next","hashbrown::raw","",6,[[],[["bucket",3],["option",4]]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],[["bucket",3],["option",4]]]],[11,"next","hashbrown::hash_map","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","hashbrown::hash_set","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"into_iter","hashbrown::raw","",5,[[],["rawintoiter",3]]],[11,"into_iter","hashbrown::hash_map","Creates a consuming iterator, that is, one that moves …",11,[[],["intoiter",3]]],[11,"into_iter","hashbrown::hash_set","Creates a consuming iterator, that is, one that moves …",26,[[],["intoiter",3]]],[11,"extend","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"extend","","",26,[[["intoiterator",8]]]],[11,"clone","hashbrown::raw","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone_from","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","hashbrown::hash_map","",11,[[]]],[11,"clone_from","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","hashbrown::hash_set","",26,[[]]],[11,"clone_from","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","hashbrown","",2,[[],["tryreserveerror",4]]],[11,"default","hashbrown::hash_map","Creates an empty <code>HashMap<K, V, S></code>, with the <code>Default</code> value …",11,[[]]],[11,"default","hashbrown::hash_set","Creates an empty <code>HashSet<T, S></code> with the <code>Default</code> value for …",26,[[]]],[11,"as_ptr","hashbrown::raw","",4,[[]]],[11,"drop","","",4,[[]]],[11,"read","","",4,[[]]],[11,"write","","",4,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_mut","","",4,[[]]],[11,"copy_from_nonoverlapping","","",4,[[]]],[11,"new","","Creates a new empty hash table without allocating any …",5,[[]]],[11,"try_with_capacity","","Attempts to allocate a new hash table with at least …",5,[[],[["result",4],["tryreserveerror",4]]]],[11,"with_capacity","","Allocates a new hash table with at least enough capacity …",5,[[]]],[11,"data_end","","Returns pointer to one past last element of data table.",5,[[],["nonnull",3]]],[11,"bucket_index","","Returns the index of a bucket from a <code>Bucket</code>.",5,[[["bucket",3]]]],[11,"bucket","","Returns a pointer to an element in the table.",5,[[],["bucket",3]]],[11,"erase_no_drop","","Erases an element from the table without dropping it.",5,[[["bucket",3]]]],[11,"erase","","Erases an element from the table, dropping it in place.",5,[[["bucket",3]]]],[11,"erase_entry","","Finds and erases an element from the table, dropping it …",5,[[]]],[11,"remove","","Removes an element from the table, returning it.",5,[[["bucket",3]]]],[11,"remove_entry","","Finds and removes an element from the table, returning it.",5,[[],["option",4]]],[11,"clear_no_drop","","Marks all table buckets as empty without dropping their …",5,[[]]],[11,"clear","","Removes all elements from the table without freeing the …",5,[[]]],[11,"shrink_to","","Shrinks the table to fit <code>max(self.len(), min_size)</code> …",5,[[]]],[11,"reserve","","Ensures that at least <code>additional</code> items can be inserted …",5,[[]]],[11,"try_reserve","","Tries to ensure that at least <code>additional</code> items can be …",5,[[],[["result",4],["tryreserveerror",4]]]],[11,"insert","","Inserts a new element into the table, and returns its raw …",5,[[],["bucket",3]]],[11,"insert_entry","","Inserts a new element into the table, and returns a …",5,[[]]],[11,"insert_no_grow","","Inserts a new element into the table, without growing the …",5,[[],["bucket",3]]],[11,"replace_bucket_with","","Temporary removes a bucket, applying the given function …",5,[[["bucket",3]]]],[11,"find","","Searches for an element in the table.",5,[[],[["bucket",3],["option",4]]]],[11,"get","","Gets a reference to an element in the table.",5,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to an element in the table.",5,[[],["option",4]]],[11,"capacity","","Returns the number of elements the map can hold without …",5,[[]]],[11,"len","","Returns the number of elements in the table.",5,[[]]],[11,"buckets","","Returns the number of buckets in the table.",5,[[]]],[11,"iter","","Returns an iterator over every element in the table. It …",5,[[],["rawiter",3]]],[11,"iter_hash","","Returns an iterator over occupied buckets that could …",5,[[],["rawiterhash",3]]],[11,"drain","","Returns an iterator which removes all elements from the …",5,[[],["rawdrain",3]]],[11,"drain_iter_from","","Returns an iterator which removes all elements from the …",5,[[["rawiter",3]],["rawdrain",3]]],[11,"into_iter_from","","Returns an iterator which consumes all elements from the …",5,[[["rawiter",3]],["rawintoiter",3]]],[11,"clone_from_with_hasher","","Variant of <code>clone_from</code> to use when a hasher is available.",5,[[]]],[11,"reflect_remove","","Refresh the iterator so that it reflects a removal from …",6,[[["bucket",3]]]],[11,"reflect_insert","","Refresh the iterator so that it reflects an insertion …",6,[[["bucket",3]]]],[11,"iter","","",7,[[],["rawiter",3]]],[11,"iter","","",8,[[],["rawiter",3]]],[11,"with_hasher","hashbrown::hash_map","Creates an empty <code>HashMap</code> which will use the given hash …",11,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashMap</code> with the specified capacity, …",11,[[]]],[11,"hasher","","Returns a reference to the map\'s <code>BuildHasher</code>.",11,[[]]],[11,"capacity","","Returns the number of elements the map can hold without …",11,[[]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The …",11,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The …",11,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",11,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary …",11,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary …",11,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",11,[[]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",11,[[]]],[11,"drain","","Clears the map, returning all key-value pairs as an …",11,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",11,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",11,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",11,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",11,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",11,[[],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It …",11,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It …",11,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",11,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",11,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",11,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied …",11,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",11,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",11,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",11,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",11,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",11,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",11,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",11,[[],["rawentrybuilder",3]]],[11,"from_key","","Creates a <code>RawEntryMut</code> from the given key.",20,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a <code>RawEntryMut</code> from the given key and its hash.",20,[[],["rawentrymut",4]]],[11,"from_hash","","Creates a <code>RawEntryMut</code> from the given hash.",20,[[],["rawentrymut",4]]],[11,"from_key","","Access an entry by key.",23,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",23,[[],["option",4]]],[11,"from_hash","","Access an entry by hash.",23,[[],["option",4]]],[11,"insert","","Sets the value of the entry, and returns a …",0,[[],["rawoccupiedentrymut",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",0,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",0,[[]]],[11,"key","","Gets a reference to the key in the entry.",21,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",21,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in …",21,[[]]],[11,"get","","Gets a reference to the value in the entry.",21,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",21,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",21,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",21,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the …",21,[[]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to …",21,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",21,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old …",21,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",21,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",21,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",21,[[],["rawentrymut",4]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",22,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key, …",22,[[]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",22,[[]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",1,[[],["occupiedentry",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",1,[[["fnonce",8]]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty, …",1,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",1,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",1,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",1,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"key","","Gets a reference to the key in the entry.",24,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",24,[[]]],[11,"get","","Gets a reference to the value in the entry.",24,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",24,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",24,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",24,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",24,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The …",24,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to …",24,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",24,[[],["entry",4]]],[11,"key","","Gets a reference to the key that would be used when …",25,[[]]],[11,"into_key","","Take ownership of the key.",25,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",25,[[]]],[11,"with_hasher","hashbrown::hash_set","Creates a new empty hash set which will use the given …",26,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashSet</code> with the specified capacity, …",26,[[]]],[11,"capacity","","Returns the number of elements the set can hold without …",26,[[]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The …",26,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",26,[[]]],[11,"is_empty","","Returns <code>true</code> if the set contains no elements.",26,[[]]],[11,"drain","","Clears the set, returning all elements in an iterator.",26,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",26,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",26,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",26,[[]]],[11,"hasher","","Returns a reference to the set\'s <code>BuildHasher</code>.",26,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",26,[[]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",26,[[],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It …",26,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It …",26,[[]]],[11,"difference","","Visits the values representing the difference, i.e., the …",26,[[],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference, …",26,[[],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., …",26,[[],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the …",26,[[],["union",3]]],[11,"contains","","Returns <code>true</code> if the set contains a value.",26,[[]]],[11,"get","","Returns a reference to the value in the set, if any, that …",26,[[],["option",4]]],[11,"get_or_insert","","Inserts the given <code>value</code> into the set if it is not …",26,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given <code>value</code> into the set if …",26,[[]]],[11,"get_or_insert_with","","Inserts a value computed from <code>f</code> into the set if the given …",26,[[]]],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…",26,[[]]],[11,"is_subset","","Returns <code>true</code> if the set is a subset of another, i.e., …",26,[[]]],[11,"is_superset","","Returns <code>true</code> if the set is a superset of another, i.e., …",26,[[]]],[11,"insert","","Adds a value to the set.",26,[[]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",26,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value …",26,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is …",26,[[],["option",4]]]],"p":[[4,"RawEntryMut"],[4,"Entry"],[4,"TryReserveError"],[13,"AllocError"],[3,"Bucket"],[3,"RawTable"],[3,"RawIter"],[3,"RawIntoIter"],[3,"RawDrain"],[3,"RawIterHash"],[4,"DefaultHashBuilder"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","i":[[0,"map","indexmap","<code>IndexMap</code> is a hash table where the iteration order of the …",null,null],[8,"MutableKeys","indexmap::map","Opt-in mutable access to keys.",null,null],[16,"Key","","",0,null],[16,"Value","","",0,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",0,[[],["option",4]]],[10,"retain2","","Scan through each key-value pair in the map and keep …",0,[[]]],[10,"__private_marker","","This method is not useful in itself – it is there to …",0,[[],["privatemarker",3]]],[4,"Entry","","Entry for an existing key-value pair or a vacant location …",null,null],[13,"Occupied","","Existing slot with equivalent key.",1,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>IndexMap</code>. It is part …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>IndexMap</code>. It is part of …",null,null],[3,"IndexMap","","A hash table where the iteration order of the key-value …",null,null],[11,"new","","Create a new map. (Does not allocate.)",2,[[]]],[11,"with_capacity","","Create a new map with capacity for <code>n</code> key-value pairs. …",2,[[]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for <code>n</code> key-value pairs. …",2,[[]]],[11,"with_hasher","","Create a new map with <code>hash_builder</code>",2,[[]]],[11,"capacity","","Computes in <strong>O(1)</strong> time.",2,[[]]],[11,"hasher","","Return a reference to the map\'s <code>BuildHasher</code>.",2,[[]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[]]],[11,"iter","","Return an iterator over the key-value pairs of the map, …",2,[[],["iter",3]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, …",2,[[],["itermut",3]]],[11,"keys","","Return an iterator over the keys of the map, in their …",2,[[],["keys",3]]],[11,"values","","Return an iterator over the values of the map, in their …",2,[[],["values",3]]],[11,"values_mut","","Return an iterator over mutable references to the the …",2,[[],["valuesmut",3]]],[11,"clear","","Remove all key-value pairs in the map, while preserving …",2,[[]]],[11,"drain","","Clears the <code>IndexMap</code> in the given index range, returning …",2,[[],["drain",3]]],[11,"reserve","","Reserve capacity for <code>additional</code> more key-value pairs.",2,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the map as much as possible.",2,[[]]],[11,"insert","","Insert a key-value pair in the map.",2,[[],["option",4]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[]]],[11,"entry","","Get the given key’s corresponding entry in the map for …",2,[[],["entry",4]]],[11,"contains_key","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.",2,[[]]],[11,"get","","Return a reference to the value stored for <code>key</code>, if it is …",2,[[],["option",4]]],[11,"get_key_value","","Return references to the key-value pair stored for <code>key</code>, …",2,[[],["option",4]]],[11,"get_full","","Return item index, key and value",2,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the map",2,[[],["option",4]]],[11,"get_mut","","",2,[[],["option",4]]],[11,"get_full_mut","","",2,[[],["option",4]]],[11,"remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"swap_remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"swap_remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to <code>key</code> and return it …",2,[[],["option",4]]],[11,"shift_remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"shift_remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to <code>key</code> and return it …",2,[[],["option",4]]],[11,"pop","","Remove the last key-value pair",2,[[],["option",4]]],[11,"retain","","Scan through each key-value pair in the map and keep …",2,[[]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering …",2,[[]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the …",2,[[]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value …",2,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the map’s key-value pairs in …",2,[[]]],[11,"get_index","","Get a key-value pair by index",2,[[],["option",4]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[],["option",4]]],[3,"Keys","","An iterator over the keys of a <code>IndexMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>IndexMap</code>.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>IndexMap</code>.",null,null],[3,"Iter","","An iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>IndexMap</code>.",null,null],[0,"set","indexmap","A hash set implemented using <code>IndexMap</code>",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is …",null,null],[11,"new","","Create a new set. (Does not allocate.)",3,[[]]],[11,"with_capacity","","Create a new set with capacity for <code>n</code> elements. (Does not …",3,[[]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for <code>n</code> elements. (Does not …",3,[[]]],[11,"with_hasher","","Create a new set with <code>hash_builder</code>",3,[[]]],[11,"capacity","","Computes in <strong>O(1)</strong> time.",3,[[]]],[11,"hasher","","Return a reference to the set\'s <code>BuildHasher</code>.",3,[[]]],[11,"len","","Return the number of elements in the set.",3,[[]]],[11,"is_empty","","Returns true if the set contains no elements.",3,[[]]],[11,"iter","","Return an iterator over the values of the set, in their …",3,[[],["iter",3]]],[11,"clear","","Remove all elements in the set, while preserving its …",3,[[]]],[11,"drain","","Clears the <code>IndexSet</code> in the given index range, returning …",3,[[],["drain",3]]],[11,"reserve","","Reserve capacity for <code>additional</code> more values.",3,[[]]],[11,"shrink_to_fit","","Shrink the capacity of the set as much as possible.",3,[[]]],[11,"insert","","Insert the value into the set.",3,[[]]],[11,"insert_full","","Insert the value into the set, and get its index.",3,[[]]],[11,"difference","","Return an iterator over the values that are in <code>self</code> but …",3,[[["indexset",3]],["difference",3]]],[11,"symmetric_difference","","Return an iterator over the values that are in <code>self</code> or …",3,[[["indexset",3]],["symmetricdifference",3]]],[11,"intersection","","Return an iterator over the values that are in both <code>self</code> …",3,[[["indexset",3]],["intersection",3]]],[11,"union","","Return an iterator over all values that are in <code>self</code> or …",3,[[["indexset",3]],["union",3]]],[11,"contains","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.",3,[[]]],[11,"get","","Return a reference to the value stored in the set, if it …",3,[[],["option",4]]],[11,"get_full","","Return item index and value",3,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the set",3,[[],["option",4]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",3,[[],["option",4]]],[11,"remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[]]],[11,"swap_remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[]]],[11,"shift_remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[]]],[11,"take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it …",3,[[],["option",4]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it …",3,[[],["option",4]]],[11,"pop","","Remove the last value",3,[[],["option",4]]],[11,"retain","","Scan through each value in the set and keep those where …",3,[[]]],[11,"sort","","Sort the set’s values by their default ordering.",3,[[]]],[11,"sort_by","","Sort the set’s values in place using the comparison …",3,[[]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator …",3,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the set’s values in place.",3,[[]]],[11,"get_index","","Get a value by index",3,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",3,[[],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",3,[[],["option",4]]],[3,"IntoIter","","An owning iterator over the items of a <code>IndexSet</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>IndexSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>IndexSet</code>.",null,null],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.",3,[[["indexset",3]]]],[11,"is_subset","","Returns <code>true</code> if all elements of <code>self</code> are contained in …",3,[[["indexset",3]]]],[11,"is_superset","","Returns <code>true</code> if all elements of <code>other</code> are contained in …",3,[[["indexset",3]]]],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of …",null,null],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to <code>key</code> and return <code>true</code> if they are equal.",4,[[]]],[14,"indexmap","","Create an <code>IndexMap</code> from a list of key-value pairs",null,null],[14,"indexset","","Create an <code>IndexSet</code> from a list of values",null,null],[11,"from","indexmap::map","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","indexmap::set","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"into_iter","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"get_full_mut2","indexmap::map","",2,[[],["option",4]]],[11,"retain2","","",2,[[]]],[11,"__private_marker","","",2,[[],["privatemarker",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","indexmap::set","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"eq","indexmap::map","",2,[[["indexmap",3]]]],[11,"eq","indexmap::set","",3,[[["indexset",3]]]],[11,"index","indexmap::map","Returns a reference to the value corresponding to the …",2,[[]]],[11,"index","","Returns a reference to the value at the supplied <code>index</code>.",2,[[]]],[11,"index","indexmap::set","Returns a reference to the value at the supplied <code>index</code>.",3,[[]]],[11,"index_mut","indexmap::map","Returns a mutable reference to the value corresponding to …",2,[[]]],[11,"index_mut","","Returns a mutable reference to the value at the supplied …",2,[[]]],[11,"len","","",7,[[]]],[11,"len","","",8,[[]]],[11,"len","","",9,[[]]],[11,"len","","",10,[[]]],[11,"len","","",11,[[]]],[11,"len","","",12,[[]]],[11,"len","indexmap::set","",14,[[]]],[11,"len","","",15,[[]]],[11,"from_iter","indexmap::map","Create an <code>IndexMap</code> from the sequence of key-value pairs …",2,[[["intoiterator",8]]]],[11,"from_iter","indexmap::set","",3,[[["intoiterator",8]]]],[11,"next_back","indexmap::map","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next_back","indexmap::set","",14,[[],["option",4]]],[11,"next_back","","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"next_back","","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next","indexmap::map","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[]]],[11,"nth","","",7,[[],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"collect","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[]]],[11,"nth","","",8,[[],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"collect","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"count","","",9,[[]]],[11,"nth","","",9,[[],["option",4]]],[11,"last","","",9,[[],["option",4]]],[11,"collect","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"count","","",10,[[]]],[11,"nth","","",10,[[],["option",4]]],[11,"last","","",10,[[],["option",4]]],[11,"collect","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[]]],[11,"nth","","",11,[[],["option",4]]],[11,"last","","",11,[[],["option",4]]],[11,"collect","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"count","","",12,[[]]],[11,"nth","","",12,[[],["option",4]]],[11,"last","","",12,[[],["option",4]]],[11,"collect","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"count","","",13,[[]]],[11,"nth","","",13,[[],["option",4]]],[11,"last","","",13,[[],["option",4]]],[11,"collect","","",13,[[]]],[11,"next","indexmap::set","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"count","","",14,[[]]],[11,"nth","","",14,[[],["option",4]]],[11,"last","","",14,[[],["option",4]]],[11,"collect","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"count","","",15,[[]]],[11,"nth","","",15,[[],["option",4]]],[11,"last","","",15,[[],["option",4]]],[11,"collect","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"count","","",16,[[]]],[11,"nth","","",16,[[],["option",4]]],[11,"last","","",16,[[],["option",4]]],[11,"collect","","",16,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",3,[[]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","indexmap::set","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","indexmap::map","",2,[[]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",10,[[]]],[11,"clone","indexmap::set","",3,[[]]],[11,"clone_from","","",3,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"default","indexmap::map","Return an empty <code>IndexMap</code>",2,[[]]],[11,"default","indexmap::set","Return an empty <code>IndexSet</code>",3,[[]]],[11,"key","indexmap::map","",5,[[]]],[11,"get","","",5,[[]]],[11,"get_mut","","",5,[[]]],[11,"index","","Return the index of the key-value pair",5,[[]]],[11,"into_mut","","",5,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"or_insert","","Computes in <strong>O(1)</strong> time (amortized average).",1,[[]]],[11,"or_insert_with","","Computes in <strong>O(1)</strong> time (amortized average).",1,[[]]],[11,"key","","",1,[[]]],[11,"index","","Return the index where the key-value pair exists or will …",1,[[]]],[11,"and_modify","","Modifies the entry if it is occupied.",1,[[]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is …",1,[[]]],[11,"insert","","Sets the value of the entry to <code>value</code>, and returns the …",5,[[]]],[11,"remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"key","","",6,[[]]],[11,"into_key","","",6,[[]]],[11,"index","","Return the index where the key-value pair will be …",6,[[]]],[11,"insert","","",6,[[]]]],"p":[[8,"MutableKeys"],[4,"Entry"],[3,"IndexMap"],[3,"IndexSet"],[8,"Equivalent"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]},\
"itoa":{"doc":"github crates-io docs-rs","i":[[5,"fmt","itoa","Write integer to an <code>fmt::Write</code>.",null,[[["write",8],["integer",8]],["result",6]]],[3,"Buffer","","A safe API for formatting integers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about …",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference …",0,[[["integer",8]]]],[8,"Integer","","An integer that can be formatted by <code>itoa::write</code> and …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"acct","","",null,null],[5,"wait4","","",null,null],[5,"getitimer","","",null,null],[5,"setitimer","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"setgrent","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"chflags","","",null,null],[5,"fchflags","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"gettimeofday","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"semget","","",null,null],[5,"semctl","","",null,null],[5,"semop","","",null,null],[5,"shm_open","","",null,null],[5,"ftok","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_from_mach_thread_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"uname","","",null,null],[5,"connectx","","",null,null],[5,"disconnectx","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"exchangedata","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"regoff_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",17,null],[12,"sa_family","","",17,null],[12,"sa_data","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",18,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"msghdr","","",null,null],[12,"msg_name","","",22,null],[12,"msg_namelen","","",22,null],[12,"msg_iov","","",22,null],[12,"msg_iovlen","","",22,null],[12,"msg_control","","",22,null],[12,"msg_controllen","","",22,null],[12,"msg_flags","","",22,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",23,null],[12,"cmsg_level","","",23,null],[12,"cmsg_type","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"regex_t","","",null,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",25,null],[12,"rm_eo","","",25,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",26,null],[12,"sun_family","","",26,null],[12,"sun_path","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONREAD","","",null,null],[17,"FIONBIO","","",null,null],[17,"FIOASYNC","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"PATH_MAX","","",null,null],[17,"IOV_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPTOS_ECN_NOTECT","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"BIOCGBLEN","","",null,null],[17,"BIOCSBLEN","","",null,null],[17,"BIOCFLUSH","","",null,null],[17,"BIOCPROMISC","","",null,null],[17,"BIOCGDLT","","",null,null],[17,"BIOCGETIF","","",null,null],[17,"BIOCSETIF","","",null,null],[17,"BIOCGSTATS","","",null,null],[17,"BIOCIMMEDIATE","","",null,null],[17,"BIOCVERSION","","",null,null],[17,"BIOCGHDRCMPLT","","",null,null],[17,"BIOCSHDRCMPLT","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"REG_BASIC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSPEC","","",null,null],[17,"REG_PEND","","",null,null],[17,"REG_DUMP","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"REG_EMPTY","","",null,null],[17,"REG_ASSERT","","",null,null],[17,"REG_INVARG","","",null,null],[17,"REG_ATOI","","",null,null],[17,"REG_ITOA","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_TRACE","","",null,null],[17,"REG_LARGE","","",null,null],[17,"REG_BACKR","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"sae_associd_t","","",null,null],[6,"sae_connid_t","","",null,null],[6,"mach_port_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"vm_size_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[4,"timezone","","",null,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",28,null],[12,"imr_interface","","",28,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",29,null],[12,"aio_offset","","",29,null],[12,"aio_buf","","",29,null],[12,"aio_nbytes","","",29,null],[12,"aio_reqprio","","",29,null],[12,"aio_sigevent","","",29,null],[12,"aio_lio_opcode","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_pathv","","",30,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",31,null],[12,"ai_family","","",31,null],[12,"ai_socktype","","",31,null],[12,"ai_protocol","","",31,null],[12,"ai_addrlen","","",31,null],[12,"ai_canonname","","",31,null],[12,"ai_addr","","",31,null],[12,"ai_next","","",31,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",32,null],[12,"denom","","",32,null],[3,"stat","","",null,null],[12,"st_dev","","",33,null],[12,"st_mode","","",33,null],[12,"st_nlink","","",33,null],[12,"st_ino","","",33,null],[12,"st_uid","","",33,null],[12,"st_gid","","",33,null],[12,"st_rdev","","",33,null],[12,"st_atime","","",33,null],[12,"st_atime_nsec","","",33,null],[12,"st_mtime","","",33,null],[12,"st_mtime_nsec","","",33,null],[12,"st_ctime","","",33,null],[12,"st_ctime_nsec","","",33,null],[12,"st_birthtime","","",33,null],[12,"st_birthtime_nsec","","",33,null],[12,"st_size","","",33,null],[12,"st_blocks","","",33,null],[12,"st_blksize","","",33,null],[12,"st_flags","","",33,null],[12,"st_gen","","",33,null],[12,"st_lspare","","",33,null],[12,"st_qspare","","",33,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",34,null],[12,"si_errno","","",34,null],[12,"si_code","","",34,null],[12,"si_pid","","",34,null],[12,"si_uid","","",34,null],[12,"si_status","","",34,null],[12,"si_addr","","",34,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_size","","",36,null],[12,"ss_flags","","",36,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",37,null],[12,"fst_posmode","","",37,null],[12,"fst_offset","","",37,null],[12,"fst_length","","",37,null],[12,"fst_bytesalloc","","",37,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",38,null],[12,"ra_count","","",38,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",39,null],[12,"f_frsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_favail","","",39,null],[12,"f_fsid","","",39,null],[12,"f_flag","","",39,null],[12,"f_namemax","","",39,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",40,null],[12,"dli_fbase","","",40,null],[12,"dli_sname","","",40,null],[12,"dli_saddr","","",40,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",41,null],[12,"sin_family","","",41,null],[12,"sin_port","","",41,null],[12,"sin_addr","","",41,null],[12,"sin_zero","","",41,null],[3,"kevent64_s","","",null,null],[12,"ident","","",42,null],[12,"filter","","",42,null],[12,"flags","","",42,null],[12,"fflags","","",42,null],[12,"data","","",42,null],[12,"udata","","",42,null],[12,"ext","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curbytes","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_id","","",43,null],[12,"dqb_spare","","",43,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",44,null],[12,"ifm_version","","",44,null],[12,"ifm_type","","",44,null],[12,"ifm_addrs","","",44,null],[12,"ifm_flags","","",44,null],[12,"ifm_index","","",44,null],[12,"ifm_data","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",47,null],[12,"hdr_cnt","","",47,null],[12,"trailers","","",47,null],[12,"trl_cnt","","",47,null],[3,"lconv","","",null,null],[12,"decimal_point","","",48,null],[12,"thousands_sep","","",48,null],[12,"grouping","","",48,null],[12,"int_curr_symbol","","",48,null],[12,"currency_symbol","","",48,null],[12,"mon_decimal_point","","",48,null],[12,"mon_thousands_sep","","",48,null],[12,"mon_grouping","","",48,null],[12,"positive_sign","","",48,null],[12,"negative_sign","","",48,null],[12,"int_frac_digits","","",48,null],[12,"frac_digits","","",48,null],[12,"p_cs_precedes","","",48,null],[12,"p_sep_by_space","","",48,null],[12,"n_cs_precedes","","",48,null],[12,"n_sep_by_space","","",48,null],[12,"p_sign_posn","","",48,null],[12,"n_sign_posn","","",48,null],[12,"int_p_cs_precedes","","",48,null],[12,"int_n_cs_precedes","","",48,null],[12,"int_p_sep_by_space","","",48,null],[12,"int_n_sep_by_space","","",48,null],[12,"int_p_sign_posn","","",48,null],[12,"int_n_sign_posn","","",48,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",49,null],[12,"pti_resident_size","","",49,null],[12,"pti_total_user","","",49,null],[12,"pti_total_system","","",49,null],[12,"pti_threads_user","","",49,null],[12,"pti_threads_system","","",49,null],[12,"pti_policy","","",49,null],[12,"pti_faults","","",49,null],[12,"pti_pageins","","",49,null],[12,"pti_cow_faults","","",49,null],[12,"pti_messages_sent","","",49,null],[12,"pti_messages_received","","",49,null],[12,"pti_syscalls_mach","","",49,null],[12,"pti_syscalls_unix","","",49,null],[12,"pti_csw","","",49,null],[12,"pti_threadnum","","",49,null],[12,"pti_numrunning","","",49,null],[12,"pti_priority","","",49,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",50,null],[12,"pbi_status","","",50,null],[12,"pbi_xstatus","","",50,null],[12,"pbi_pid","","",50,null],[12,"pbi_ppid","","",50,null],[12,"pbi_uid","","",50,null],[12,"pbi_gid","","",50,null],[12,"pbi_ruid","","",50,null],[12,"pbi_rgid","","",50,null],[12,"pbi_svuid","","",50,null],[12,"pbi_svgid","","",50,null],[12,"rfu_1","","",50,null],[12,"pbi_comm","","",50,null],[12,"pbi_name","","",50,null],[12,"pbi_nfiles","","",50,null],[12,"pbi_pgid","","",50,null],[12,"pbi_pjobc","","",50,null],[12,"e_tdev","","",50,null],[12,"e_tpgid","","",50,null],[12,"pbi_nice","","",50,null],[12,"pbi_start_tvsec","","",50,null],[12,"pbi_start_tvusec","","",50,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",51,null],[12,"ptinfo","","",51,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",52,null],[12,"xsu_avail","","",52,null],[12,"xsu_used","","",52,null],[12,"xsu_pagesize","","",52,null],[12,"xsu_encrypted","","",52,null],[3,"xucred","","",null,null],[12,"cr_version","","",53,null],[12,"cr_uid","","",53,null],[12,"cr_ngroups","","",53,null],[12,"cr_groups","","",53,null],[3,"mach_header","","",null,null],[12,"magic","","",54,null],[12,"cputype","","",54,null],[12,"cpusubtype","","",54,null],[12,"filetype","","",54,null],[12,"ncmds","","",54,null],[12,"sizeofcmds","","",54,null],[12,"flags","","",54,null],[3,"mach_header_64","","",null,null],[12,"magic","","",55,null],[12,"cputype","","",55,null],[12,"cpusubtype","","",55,null],[12,"filetype","","",55,null],[12,"ncmds","","",55,null],[12,"sizeofcmds","","",55,null],[12,"flags","","",55,null],[12,"reserved","","",55,null],[3,"segment_command","","",null,null],[12,"cmd","","",56,null],[12,"cmdsize","","",56,null],[12,"segname","","",56,null],[12,"vmaddr","","",56,null],[12,"vmsize","","",56,null],[12,"fileoff","","",56,null],[12,"filesize","","",56,null],[12,"maxprot","","",56,null],[12,"initprot","","",56,null],[12,"nsects","","",56,null],[12,"flags","","",56,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",57,null],[12,"cmdsize","","",57,null],[12,"segname","","",57,null],[12,"vmaddr","","",57,null],[12,"vmsize","","",57,null],[12,"fileoff","","",57,null],[12,"filesize","","",57,null],[12,"maxprot","","",57,null],[12,"initprot","","",57,null],[12,"nsects","","",57,null],[12,"flags","","",57,null],[3,"load_command","","",null,null],[12,"cmd","","",58,null],[12,"cmdsize","","",58,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",59,null],[12,"sdl_family","","",59,null],[12,"sdl_index","","",59,null],[12,"sdl_type","","",59,null],[12,"sdl_nlen","","",59,null],[12,"sdl_alen","","",59,null],[12,"sdl_slen","","",59,null],[12,"sdl_data","","",59,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",60,null],[12,"sin_family","","",60,null],[12,"sin_port","","",60,null],[12,"sin_addr","","",60,null],[12,"sin_srcaddr","","",60,null],[12,"sin_tos","","",60,null],[12,"sin_other","","",60,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",61,null],[12,"sc_family","","",61,null],[12,"ss_sysaddr","","",61,null],[12,"sc_id","","",61,null],[12,"sc_unit","","",61,null],[12,"sc_reserved","","",61,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",62,null],[12,"ipi_spec_dst","","",62,null],[12,"ipi_addr","","",62,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",63,null],[12,"ipi6_ifindex","","",63,null],[3,"ipc_perm","","",null,null],[12,"uid","","",64,null],[12,"gid","","",64,null],[12,"cuid","","",64,null],[12,"cgid","","",64,null],[12,"mode","","",64,null],[12,"_seq","","",64,null],[12,"_key","","",64,null],[3,"sembuf","","",null,null],[12,"sem_num","","",65,null],[12,"sem_op","","",65,null],[12,"sem_flg","","",65,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",66,null],[12,"ar_pro","","",66,null],[12,"ar_hln","","",66,null],[12,"ar_pln","","",66,null],[12,"ar_op","","",66,null],[3,"in_addr","","",null,null],[12,"s_addr","","",67,null],[3,"sa_endpoints_t","","",null,null],[12,"sae_srcif","","",68,null],[12,"sae_srcaddr","","",68,null],[12,"sae_srcaddrlen","","",68,null],[12,"sae_dstaddr","","",68,null],[12,"sae_dstaddrlen","","",68,null],[3,"timex","","",null,null],[12,"modes","","",69,null],[12,"offset","","",69,null],[12,"freq","","",69,null],[12,"maxerror","","",69,null],[12,"esterror","","",69,null],[12,"status","","",69,null],[12,"constant","","",69,null],[12,"precision","","",69,null],[12,"tolerance","","",69,null],[12,"ppsfreq","","",69,null],[12,"jitter","","",69,null],[12,"shift","","",69,null],[12,"stabil","","",69,null],[12,"jitcnt","","",69,null],[12,"calcnt","","",69,null],[12,"errcnt","","",69,null],[12,"stbcnt","","",69,null],[3,"ntptimeval","","",null,null],[12,"time","","",70,null],[12,"maxerror","","",70,null],[12,"esterror","","",70,null],[12,"tai","","",70,null],[12,"time_state","","",70,null],[3,"kevent","","",null,null],[12,"ident","","",71,null],[12,"filter","","",71,null],[12,"flags","","",71,null],[12,"fflags","","",71,null],[12,"data","","",71,null],[12,"udata","","",71,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",72,null],[12,"sem_base","","",72,null],[12,"sem_nsems","","",72,null],[12,"sem_otime","","",72,null],[12,"sem_pad1","","",72,null],[12,"sem_ctime","","",72,null],[12,"sem_pad2","","",72,null],[12,"sem_pad3","","",72,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",73,null],[12,"shm_segsz","","",73,null],[12,"shm_lpid","","",73,null],[12,"shm_cpid","","",73,null],[12,"shm_nattch","","",73,null],[12,"shm_atime","","",73,null],[12,"shm_dtime","","",73,null],[12,"shm_ctime","","",73,null],[12,"shm_internal","","",73,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",74,null],[12,"pth_system_time","","",74,null],[12,"pth_cpu_usage","","",74,null],[12,"pth_policy","","",74,null],[12,"pth_run_state","","",74,null],[12,"pth_flags","","",74,null],[12,"pth_sleep_time","","",74,null],[12,"pth_curpri","","",74,null],[12,"pth_priority","","",74,null],[12,"pth_maxpriority","","",74,null],[12,"pth_name","","",74,null],[3,"statfs","","",null,null],[12,"f_bsize","","",75,null],[12,"f_iosize","","",75,null],[12,"f_blocks","","",75,null],[12,"f_bfree","","",75,null],[12,"f_bavail","","",75,null],[12,"f_files","","",75,null],[12,"f_ffree","","",75,null],[12,"f_fsid","","",75,null],[12,"f_owner","","",75,null],[12,"f_type","","",75,null],[12,"f_flags","","",75,null],[12,"f_fssubtype","","",75,null],[12,"f_fstypename","","",75,null],[12,"f_mntonname","","",75,null],[12,"f_mntfromname","","",75,null],[12,"f_reserved","","",75,null],[3,"dirent","","",null,null],[12,"d_ino","","",76,null],[12,"d_seekoff","","",76,null],[12,"d_reclen","","",76,null],[12,"d_namlen","","",76,null],[12,"d_type","","",76,null],[12,"d_name","","",76,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",77,null],[12,"ss_family","","",77,null],[3,"utmpx","","",null,null],[12,"ut_user","","",78,null],[12,"ut_id","","",78,null],[12,"ut_line","","",78,null],[12,"ut_pid","","",78,null],[12,"ut_type","","",78,null],[12,"ut_tv","","",78,null],[12,"ut_host","","",78,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",79,null],[12,"sigev_signo","","",79,null],[12,"sigev_value","","",79,null],[12,"sigev_notify_attributes","","",79,null],[19,"semun","","",null,null],[12,"val","","",80,null],[12,"buf","","",80,null],[12,"array","","",80,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_SYMLINK","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PT_TRACE_ME","","",null,null],[17,"PT_READ_I","","",null,null],[17,"PT_READ_D","","",null,null],[17,"PT_READ_U","","",null,null],[17,"PT_WRITE_I","","",null,null],[17,"PT_WRITE_D","","",null,null],[17,"PT_WRITE_U","","",null,null],[17,"PT_CONTINUE","","",null,null],[17,"PT_KILL","","",null,null],[17,"PT_STEP","","",null,null],[17,"PT_ATTACH","","",null,null],[17,"PT_DETACH","","",null,null],[17,"PT_SIGEXC","","",null,null],[17,"PT_THUPDATE","","",null,null],[17,"PT_ATTACHEXC","","",null,null],[17,"PT_FORCEQUOTA","","",null,null],[17,"PT_DENY_ATTACH","","",null,null],[17,"PT_FIRSTMACH","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"BIOCGRSIG","","",null,null],[17,"BIOCSRSIG","","",null,null],[17,"BIOCSDLT","","",null,null],[17,"BIOCGSEESENT","","",null,null],[17,"BIOCSSEESENT","","",null,null],[17,"BIOCGDLTLIST","","",null,null],[17,"FIODTYPE","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\\\"hello\\\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \\\"all job for this …",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_RECVDSTADDR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_RECVIF","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NOPUSH","","",null,null],[17,"TCP_NOOPT","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_FASTOPEN","","Enable/Disable TCP Fastopen on this socket",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SAE_ASSOCID_ANY","","",null,null],[17,"SAE_ASSOCID_ALL","","((sae_associd_t)(-1ULL))",null,null],[17,"SAE_CONNID_ANY","","",null,null],[17,"SAE_CONNID_ALL","","((sae_connid_t)(-1ULL))",null,null],[17,"CONNECT_RESUME_ON_READ_WRITE","","resume connect() on read/write",null,null],[17,"CONNECT_DATA_IDEMPOTENT","","data is idempotent",null,null],[17,"CONNECT_DATA_AUTHENTICATED","","data includes security that replaces the TFO-cookie",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"NI_MAXSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NUMERICSCOPE","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"AI_MASK","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_V4MAPPED_CFG","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_DEFAULT","","",null,null],[17,"AI_UNUSABLE","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"MNT_RDONLY","","",null,null],[17,"MNT_SYNCHRONOUS","","",null,null],[17,"MNT_NOEXEC","","",null,null],[17,"MNT_NOSUID","","",null,null],[17,"MNT_NODEV","","",null,null],[17,"MNT_UNION","","",null,null],[17,"MNT_ASYNC","","",null,null],[17,"MNT_CPROTECT","","",null,null],[17,"MNT_EXPORTED","","",null,null],[17,"MNT_QUARANTINE","","",null,null],[17,"MNT_LOCAL","","",null,null],[17,"MNT_QUOTA","","",null,null],[17,"MNT_ROOTFS","","",null,null],[17,"MNT_DOVOLFS","","",null,null],[17,"MNT_DONTBROWSE","","",null,null],[17,"MNT_IGNORE_OWNERSHIP","","",null,null],[17,"MNT_AUTOMOUNTED","","",null,null],[17,"MNT_JOURNALED","","",null,null],[17,"MNT_NOUSERXATTR","","",null,null],[17,"MNT_DEFWRITE","","",null,null],[17,"MNT_MULTILABEL","","",null,null],[17,"MNT_NOATIME","","",null,null],[17,"MNT_SNAPSHOT","","",null,null],[17,"MNT_UPDATE","","",null,null],[17,"MNT_NOBLOCK","","",null,null],[17,"MNT_RELOAD","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETEXEC","","",null,null],[17,"POSIX_SPAWN_START_SUSPENDED","","",null,null],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SEM_UNDO","","",null,null],[17,"GETNCNT","","",null,null],[17,"GETPID","","",null,null],[17,"GETVAL","","",null,null],[17,"GETALL","","",null,null],[17,"GETZCNT","","",null,null],[17,"SETVAL","","",null,null],[17,"SETALL","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"UF_SETTABLE","","",null,null],[17,"UF_NODUMP","","",null,null],[17,"UF_IMMUTABLE","","",null,null],[17,"UF_APPEND","","",null,null],[17,"UF_OPAQUE","","",null,null],[17,"UF_COMPRESSED","","",null,null],[17,"UF_TRACKED","","",null,null],[17,"SF_SETTABLE","","",null,null],[17,"SF_ARCHIVED","","",null,null],[17,"SF_IMMUTABLE","","",null,null],[17,"SF_APPEND","","",null,null],[17,"UF_HIDDEN","","",null,null],[17,"NTP_API","","",null,null],[17,"MAXPHASE","","",null,null],[17,"MAXFREQ","","",null,null],[17,"MINSEC","","",null,null],[17,"MAXSEC","","",null,null],[17,"NANOSECOND","","",null,null],[17,"SCALE_PPM","","",null,null],[17,"MAXTC","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_PPSMAX","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"_WSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"boolean_t","","",null,null],[6,"mcontext_t","","",null,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",81,null],[12,"tv_usec","","",81,null],[3,"if_data","","",null,null],[12,"ifi_type","","",82,null],[12,"ifi_typelen","","",82,null],[12,"ifi_physical","","",82,null],[12,"ifi_addrlen","","",82,null],[12,"ifi_hdrlen","","",82,null],[12,"ifi_recvquota","","",82,null],[12,"ifi_xmitquota","","",82,null],[12,"ifi_unused1","","",82,null],[12,"ifi_mtu","","",82,null],[12,"ifi_metric","","",82,null],[12,"ifi_baudrate","","",82,null],[12,"ifi_ipackets","","",82,null],[12,"ifi_ierrors","","",82,null],[12,"ifi_opackets","","",82,null],[12,"ifi_oerrors","","",82,null],[12,"ifi_collisions","","",82,null],[12,"ifi_ibytes","","",82,null],[12,"ifi_obytes","","",82,null],[12,"ifi_imcasts","","",82,null],[12,"ifi_omcasts","","",82,null],[12,"ifi_iqdrops","","",82,null],[12,"ifi_noproto","","",82,null],[12,"ifi_recvtiming","","",82,null],[12,"ifi_xmittiming","","",82,null],[12,"ifi_lastchange","","",82,null],[12,"ifi_unused2","","",82,null],[12,"ifi_hwassist","","",82,null],[12,"ifi_reserved1","","",82,null],[12,"ifi_reserved2","","",82,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",83,null],[12,"bh_caplen","","",83,null],[12,"bh_datalen","","",83,null],[12,"bh_hdrlen","","",83,null],[3,"ucontext_t","","",null,null],[12,"uc_onstack","","",84,null],[12,"uc_sigmask","","",84,null],[12,"uc_stack","","",84,null],[12,"uc_link","","",84,null],[12,"uc_mcsize","","",84,null],[12,"uc_mcontext","","",84,null],[3,"__darwin_mcontext64","","",null,null],[12,"__es","","",85,null],[12,"__ss","","",85,null],[12,"__fs","","",85,null],[3,"__darwin_x86_exception_state64","","",null,null],[12,"__trapno","","",86,null],[12,"__cpu","","",86,null],[12,"__err","","",86,null],[12,"__faultvaddr","","",86,null],[3,"__darwin_x86_thread_state64","","",null,null],[12,"__rax","","",87,null],[12,"__rbx","","",87,null],[12,"__rcx","","",87,null],[12,"__rdx","","",87,null],[12,"__rdi","","",87,null],[12,"__rsi","","",87,null],[12,"__rbp","","",87,null],[12,"__rsp","","",87,null],[12,"__r8","","",87,null],[12,"__r9","","",87,null],[12,"__r10","","",87,null],[12,"__r11","","",87,null],[12,"__r12","","",87,null],[12,"__r13","","",87,null],[12,"__r14","","",87,null],[12,"__r15","","",87,null],[12,"__rip","","",87,null],[12,"__rflags","","",87,null],[12,"__cs","","",87,null],[12,"__fs","","",87,null],[12,"__gs","","",87,null],[3,"__darwin_x86_float_state64","","",null,null],[12,"__fpu_reserved","","",88,null],[12,"__fpu_ftw","","",88,null],[12,"__fpu_rsrv1","","",88,null],[12,"__fpu_fop","","",88,null],[12,"__fpu_ip","","",88,null],[12,"__fpu_cs","","",88,null],[12,"__fpu_rsrv2","","",88,null],[12,"__fpu_dp","","",88,null],[12,"__fpu_ds","","",88,null],[12,"__fpu_rsrv3","","",88,null],[12,"__fpu_mxcsr","","",88,null],[12,"__fpu_mxcsrmask","","",88,null],[12,"__fpu_stmm0","","",88,null],[12,"__fpu_stmm1","","",88,null],[12,"__fpu_stmm2","","",88,null],[12,"__fpu_stmm3","","",88,null],[12,"__fpu_stmm4","","",88,null],[12,"__fpu_stmm5","","",88,null],[12,"__fpu_stmm6","","",88,null],[12,"__fpu_stmm7","","",88,null],[12,"__fpu_xmm0","","",88,null],[12,"__fpu_xmm1","","",88,null],[12,"__fpu_xmm2","","",88,null],[12,"__fpu_xmm3","","",88,null],[12,"__fpu_xmm4","","",88,null],[12,"__fpu_xmm5","","",88,null],[12,"__fpu_xmm6","","",88,null],[12,"__fpu_xmm7","","",88,null],[12,"__fpu_xmm8","","",88,null],[12,"__fpu_xmm9","","",88,null],[12,"__fpu_xmm10","","",88,null],[12,"__fpu_xmm11","","",88,null],[12,"__fpu_xmm12","","",88,null],[12,"__fpu_xmm13","","",88,null],[12,"__fpu_xmm14","","",88,null],[12,"__fpu_xmm15","","",88,null],[12,"__fpu_reserved1","","",88,null],[3,"__darwin_mmst_reg","","",null,null],[12,"__mmst_reg","","",89,null],[12,"__mmst_rsrv","","",89,null],[3,"__darwin_xmm_reg","","",null,null],[12,"__xmm_reg","","",90,null],[3,"pthread_attr_t","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"BIOCSETF","","",null,null],[17,"BIOCSRTIMEOUT","","",null,null],[17,"BIOCGRTIMEOUT","","",null,null],[17,"BIOCSETFNR","","",null,null],[3,"max_align_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",91,null],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"fmt","","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",105,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",106,[[],["file",4]]],[11,"clone","","",107,[[],["fpos_t",4]]],[11,"clone","","",17,[[],["sockaddr",3]]],[11,"clone","","",18,[[],["sockaddr_in6",3]]],[11,"clone","","",19,[[],["passwd",3]]],[11,"clone","","",20,[[],["ifaddrs",3]]],[11,"clone","","",102,[[],["fd_set",3]]],[11,"clone","","",21,[[],["tm",3]]],[11,"clone","","",22,[[],["msghdr",3]]],[11,"clone","","",23,[[],["cmsghdr",3]]],[11,"clone","","",103,[[],["fsid_t",3]]],[11,"clone","","",24,[[],["if_nameindex",3]]],[11,"clone","","",104,[[],["regex_t",3]]],[11,"clone","","",25,[[],["regmatch_t",3]]],[11,"clone","","",26,[[],["sockaddr_un",3]]],[11,"clone","","",27,[[],["utsname",3]]],[11,"clone","","",95,[[],["timezone",4]]],[11,"clone","","",28,[[],["ip_mreq",3]]],[11,"clone","","",29,[[],["aiocb",3]]],[11,"clone","","",30,[[],["glob_t",3]]],[11,"clone","","",31,[[],["addrinfo",3]]],[11,"clone","","",32,[[],["mach_timebase_info",3]]],[11,"clone","","",33,[[],["stat",3]]],[11,"clone","","",96,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",97,[[],["pthread_condattr_t",3]]],[11,"clone","","",98,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",34,[[],["siginfo_t",3]]],[11,"clone","","",35,[[],["sigaction",3]]],[11,"clone","","",36,[[],["stack_t",3]]],[11,"clone","","",37,[[],["fstore_t",3]]],[11,"clone","","",38,[[],["radvisory",3]]],[11,"clone","","",39,[[],["statvfs",3]]],[11,"clone","","",40,[[],["dl_info",3]]],[11,"clone","","",41,[[],["sockaddr_in",3]]],[11,"clone","","",42,[[],["kevent64_s",3]]],[11,"clone","","",43,[[],["dqblk",3]]],[11,"clone","","",44,[[],["if_msghdr",3]]],[11,"clone","","",45,[[],["termios",3]]],[11,"clone","","",46,[[],["flock",3]]],[11,"clone","","",47,[[],["sf_hdtr",3]]],[11,"clone","","",48,[[],["lconv",3]]],[11,"clone","","",49,[[],["proc_taskinfo",3]]],[11,"clone","","",50,[[],["proc_bsdinfo",3]]],[11,"clone","","",51,[[],["proc_taskallinfo",3]]],[11,"clone","","",52,[[],["xsw_usage",3]]],[11,"clone","","",53,[[],["xucred",3]]],[11,"clone","","",54,[[],["mach_header",3]]],[11,"clone","","",55,[[],["mach_header_64",3]]],[11,"clone","","",56,[[],["segment_command",3]]],[11,"clone","","",57,[[],["segment_command_64",3]]],[11,"clone","","",58,[[],["load_command",3]]],[11,"clone","","",59,[[],["sockaddr_dl",3]]],[11,"clone","","",60,[[],["sockaddr_inarp",3]]],[11,"clone","","",61,[[],["sockaddr_ctl",3]]],[11,"clone","","",62,[[],["in_pktinfo",3]]],[11,"clone","","",63,[[],["in6_pktinfo",3]]],[11,"clone","","",64,[[],["ipc_perm",3]]],[11,"clone","","",65,[[],["sembuf",3]]],[11,"clone","","",66,[[],["arphdr",3]]],[11,"clone","","",67,[[],["in_addr",3]]],[11,"clone","","",68,[[],["sa_endpoints_t",3]]],[11,"clone","","",69,[[],["timex",3]]],[11,"clone","","",70,[[],["ntptimeval",3]]],[11,"clone","","",71,[[],["kevent",3]]],[11,"clone","","",72,[[],["semid_ds",3]]],[11,"clone","","",73,[[],["shmid_ds",3]]],[11,"clone","","",74,[[],["proc_threadinfo",3]]],[11,"clone","","",75,[[],["statfs",3]]],[11,"clone","","",76,[[],["dirent",3]]],[11,"clone","","",99,[[],["pthread_rwlock_t",3]]],[11,"clone","","",100,[[],["pthread_mutex_t",3]]],[11,"clone","","",101,[[],["pthread_cond_t",3]]],[11,"clone","","",77,[[],["sockaddr_storage",3]]],[11,"clone","","",78,[[],["utmpx",3]]],[11,"clone","","",79,[[],["sigevent",3]]],[11,"clone","","",80,[[],["semun",19]]],[11,"clone","","",81,[[],["timeval32",3]]],[11,"clone","","",82,[[],["if_data",3]]],[11,"clone","","",83,[[],["bpf_hdr",3]]],[11,"clone","","",84,[[],["ucontext_t",3]]],[11,"clone","","",85,[[],["__darwin_mcontext64",3]]],[11,"clone","","",86,[[],["__darwin_x86_exception_state64",3]]],[11,"clone","","",87,[[],["__darwin_x86_thread_state64",3]]],[11,"clone","","",88,[[],["__darwin_x86_float_state64",3]]],[11,"clone","","",89,[[],["__darwin_mmst_reg",3]]],[11,"clone","","",90,[[],["__darwin_xmm_reg",3]]],[11,"clone","","",94,[[],["pthread_attr_t",3]]],[11,"clone","","",93,[[],["max_align_t",3]]],[11,"clone","","",91,[[],["in6_addr",3]]],[11,"si_addr","","",34,[[]]],[11,"si_value","","",34,[[],["sigval",3]]],[11,"si_pid","","",34,[[],["pid_t",6]]],[11,"si_uid","","",34,[[],["uid_t",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"regmatch_t"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[19,"semun"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"ucontext_t"],[3,"__darwin_mcontext64"],[3,"__darwin_x86_exception_state64"],[3,"__darwin_x86_thread_state64"],[3,"__darwin_x86_float_state64"],[3,"__darwin_mmst_reg"],[3,"__darwin_xmm_reg"],[3,"in6_addr"],[4,"c_void"],[3,"max_align_t"],[3,"pthread_attr_t"],[4,"timezone"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"fd_set"],[3,"fsid_t"],[3,"regex_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"]]},\
"libm":{"doc":"libm in pure Rust","i":[[5,"acos","libm","Arccosine (f64)",null,[[]]],[5,"acosf","","Arccosine (f32)",null,[[]]],[5,"acosh","","Inverse hyperbolic cosine (f64)",null,[[]]],[5,"acoshf","","Inverse hyperbolic cosine (f32)",null,[[]]],[5,"asin","","Arcsine (f64)",null,[[]]],[5,"asinf","","Arcsine (f32)",null,[[]]],[5,"asinh","","Inverse hyperbolic sine (f64)",null,[[]]],[5,"asinhf","","Inverse hyperbolic sine (f32)",null,[[]]],[5,"atan","","Arctangent (f64)",null,[[]]],[5,"atan2","","Arctangent of y/x (f64)",null,[[]]],[5,"atan2f","","Arctangent of y/x (f32)",null,[[]]],[5,"atanf","","Arctangent (f32)",null,[[]]],[5,"atanh","","Inverse hyperbolic tangent (f64)",null,[[]]],[5,"atanhf","","Inverse hyperbolic tangent (f32)",null,[[]]],[5,"cbrt","","Computes the cube root of the argument.",null,[[]]],[5,"cbrtf","","Cube root (f32)",null,[[]]],[5,"ceil","","Ceil (f64)",null,[[]]],[5,"ceilf","","Ceil (f32)",null,[[]]],[5,"copysign","","Sign of Y, magnitude of X (f64)",null,[[]]],[5,"copysignf","","Sign of Y, magnitude of X (f32)",null,[[]]],[5,"cos","","",null,[[]]],[5,"cosf","","",null,[[]]],[5,"cosh","","Hyperbolic cosine (f64)",null,[[]]],[5,"coshf","","Hyperbolic cosine (f64)",null,[[]]],[5,"erf","","Error function (f64)",null,[[]]],[5,"erfc","","Error function (f64)",null,[[]]],[5,"erfcf","","Error function (f32)",null,[[]]],[5,"erff","","Error function (f32)",null,[[]]],[5,"exp","","Exponential, base <em>e</em> (f64)",null,[[]]],[5,"exp10","","",null,[[]]],[5,"exp10f","","",null,[[]]],[5,"exp2","","Exponential, base 2 (f64)",null,[[]]],[5,"exp2f","","Exponential, base 2 (f32)",null,[[]]],[5,"expf","","Exponential, base <em>e</em> (f32)",null,[[]]],[5,"expm1","","Exponential, base <em>e</em>, of x-1 (f64)",null,[[]]],[5,"expm1f","","Exponential, base <em>e</em>, of x-1 (f32)",null,[[]]],[5,"fabs","","Absolute value (magnitude) (f64) Calculates the absolute …",null,[[]]],[5,"fabsf","","Absolute value (magnitude) (f32) Calculates the absolute …",null,[[]]],[5,"fdim","","Positive difference (f64)",null,[[]]],[5,"fdimf","","Positive difference (f32)",null,[[]]],[5,"floor","","Floor (f64)",null,[[]]],[5,"floorf","","Floor (f32)",null,[[]]],[5,"fma","","Floating multiply add (f64)",null,[[]]],[5,"fmaf","","Floating multiply add (f32)",null,[[]]],[5,"fmax","","",null,[[]]],[5,"fmaxf","","",null,[[]]],[5,"fmin","","",null,[[]]],[5,"fminf","","",null,[[]]],[5,"fmod","","",null,[[]]],[5,"fmodf","","",null,[[]]],[5,"frexp","","",null,[[]]],[5,"frexpf","","",null,[[]]],[5,"hypot","","",null,[[]]],[5,"hypotf","","",null,[[]]],[5,"ilogb","","",null,[[]]],[5,"ilogbf","","",null,[[]]],[5,"j0","","",null,[[]]],[5,"y0","","",null,[[]]],[5,"j0f","","",null,[[]]],[5,"y0f","","",null,[[]]],[5,"j1","","",null,[[]]],[5,"y1","","",null,[[]]],[5,"j1f","","",null,[[]]],[5,"y1f","","",null,[[]]],[5,"jn","","",null,[[]]],[5,"yn","","",null,[[]]],[5,"jnf","","",null,[[]]],[5,"ynf","","",null,[[]]],[5,"ldexp","","",null,[[]]],[5,"ldexpf","","",null,[[]]],[5,"lgamma","","",null,[[]]],[5,"lgamma_r","","",null,[[]]],[5,"lgammaf","","",null,[[]]],[5,"lgammaf_r","","",null,[[]]],[5,"log","","",null,[[]]],[5,"log10","","",null,[[]]],[5,"log10f","","",null,[[]]],[5,"log1p","","",null,[[]]],[5,"log1pf","","",null,[[]]],[5,"log2","","",null,[[]]],[5,"log2f","","",null,[[]]],[5,"logf","","",null,[[]]],[5,"modf","","",null,[[]]],[5,"modff","","",null,[[]]],[5,"nextafter","","",null,[[]]],[5,"nextafterf","","",null,[[]]],[5,"pow","","",null,[[]]],[5,"powf","","",null,[[]]],[5,"remainder","","",null,[[]]],[5,"remainderf","","",null,[[]]],[5,"remquo","","",null,[[]]],[5,"remquof","","",null,[[]]],[5,"round","","",null,[[]]],[5,"roundf","","",null,[[]]],[5,"scalbn","","",null,[[]]],[5,"scalbnf","","",null,[[]]],[5,"sin","","",null,[[]]],[5,"sincos","","",null,[[]]],[5,"sincosf","","",null,[[]]],[5,"sinf","","",null,[[]]],[5,"sinh","","",null,[[]]],[5,"sinhf","","",null,[[]]],[5,"sqrt","","",null,[[]]],[5,"sqrtf","","",null,[[]]],[5,"tan","","",null,[[]]],[5,"tanf","","",null,[[]]],[5,"tanh","","",null,[[]]],[5,"tanhf","","",null,[[]]],[5,"tgamma","","",null,[[]]],[5,"tgammaf","","",null,[[]]],[5,"trunc","","",null,[[]]],[5,"truncf","","",null,[[]]]],"p":[]},\
"memchr":{"doc":"The <code>memchr</code> crate provides heavily optimized routines for …","i":[[3,"Memchr","memchr","An iterator for <code>memchr</code>.",null,null],[3,"Memchr2","","An iterator for <code>memchr2</code>.",null,null],[3,"Memchr3","","An iterator for <code>memchr3</code>.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a …",null,[[],["memchr",3]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[],["memchr2",3]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[],["memchr3",3]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a …",null,[[],[["rev",3],["memchr",3]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[],[["rev",3],["memchr2",3]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[],[["rev",3],["memchr3",3]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memchr2","","Like <code>memchr</code>, but searches for either of two bytes instead …",null,[[],["option",4]]],[5,"memchr3","","Like <code>memchr</code>, but searches for any of three bytes instead …",null,[[],["option",4]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memrchr2","","Like <code>memrchr</code>, but searches for either of two bytes …",null,[[],["option",4]]],[5,"memrchr3","","Like <code>memrchr</code>, but searches for any of three bytes instead …",null,[[],["option",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"new","","Creates a new iterator that yields all positions of …",0,[[],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of …",1,[[],["memchr2",3]]],[11,"new","","Create a new <code>Memchr3</code> that\'s initialized to zero with a …",2,[[],["memchr3",3]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"cast","num_traits","",null,null],[8,"ToPrimitive","num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",1,[[],["option",4]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",1,[[],["option",4]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",1,[[],["option",4]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",1,[[],["option",4]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",1,[[],["option",4]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",1,[[],["option",4]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",1,[[],["option",4]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",1,[[],["option",4]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",1,[[],["option",4]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",1,[[],["option",4]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",1,[[],["option",4]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",1,[[],["option",4]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",1,[[],["option",4]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",1,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",2,[[],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",2,[[],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",2,[[],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",2,[[],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",2,[[],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",2,[[],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",2,[[],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",2,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",3,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",4,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",5,[[]]],[10,"neg_infinity","","Returns negative infinity.",5,[[]]],[10,"nan","","Returns NaN.",5,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",5,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",5,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",5,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",5,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",5,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",5,[[]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",5,[[]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",5,[[]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",5,[[]]],[10,"classify","","Returns the floating point category of the number. If …",5,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",5,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",5,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",5,[[]]],[11,"trunc","","Return the integer part of a number.",5,[[]]],[11,"fract","","Returns the fractional part of a number.",5,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",5,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",5,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",5,[[]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",5,[[]]],[11,"min","","Returns the minimum of the two numbers.",5,[[]]],[11,"max","","Returns the maximum of the two numbers.",5,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",5,[[]]],[11,"powi","","Raise a number to an integer power.",5,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",5,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",5,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",5,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the <code>NaN</code> value.",6,[[]]],[10,"infinity","","Returns the infinite value.",6,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",6,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",6,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",6,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",6,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",6,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",6,[[]]],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.",6,[[]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",6,[[]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",6,[[]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",6,[[]]],[10,"classify","","Returns the floating point category of the number. If …",6,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a …",6,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",6,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",6,[[]]],[10,"trunc","","Return the integer part of a number.",6,[[]]],[10,"fract","","Returns the fractional part of a number.",6,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",6,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",6,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",6,[[]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",6,[[]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",6,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",6,[[]]],[10,"powi","","Raise a number to an integer power.",6,[[]]],[10,"powf","","Raise a number to a floating point power.",6,[[]]],[10,"sqrt","","Take the square root of a number.",6,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",6,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",6,[[]]],[10,"ln","","Returns the natural logarithm of the number.",6,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",6,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",6,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",6,[[]]],[11,"to_degrees","","Converts radians to degrees.",6,[[]]],[11,"to_radians","","Converts degrees to radians.",6,[[]]],[10,"max","","Returns the maximum of the two numbers.",6,[[]]],[10,"min","","Returns the minimum of the two numbers.",6,[[]]],[10,"abs_sub","","The positive difference of two numbers.",6,[[]]],[10,"cbrt","","Take the cubic root of a number.",6,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",6,[[]]],[10,"sin","","Computes the sine of a number (in radians).",6,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",6,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",6,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",6,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",6,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",6,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",6,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",6,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",6,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",6,[[]]],[10,"sinh","","Hyperbolic sine function.",6,[[]]],[10,"cosh","","Hyperbolic cosine function.",6,[[]]],[10,"tanh","","Hyperbolic tangent function.",6,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",6,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",6,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",6,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",6,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",7,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",7,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",7,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",7,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",7,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",7,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",7,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",7,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",7,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",7,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",7,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",7,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",7,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",7,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",7,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",7,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",7,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",7,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",7,[[]]],[0,"identities","num_traits","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",8,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",8,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",8,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",9,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",9,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",9,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[],["one",8]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",10,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",10,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",10,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",10,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",10,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",10,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",10,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",10,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",10,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",10,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",10,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",10,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",10,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",10,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",10,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",10,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",11,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",12,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",13,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",14,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",15,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",17,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",18,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",19,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",19,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",20,null],[10,"mul_add","","Performs the fused multiply-add operation.",20,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",21,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",22,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",23,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",24,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",25,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",25,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",26,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",27,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",28,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",29,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",30,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",31,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",32,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",33,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",34,[[]]],[0,"pow","num_traits","",null,null],[8,"Pow","num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",35,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",35,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["mul",8],["clone",8],["one",8]],[["mul",8],["one",8],["clone",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["checkedmul",8],["clone",8],["one",8]],[["option",4],["checkedmul",8],["one",8],["clone",8]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can …",36,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",36,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",36,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",36,[[]]],[10,"floor","","Returns the largest integer less than or equal to a …",36,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a …",36,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way …",36,[[]]],[10,"trunc","","Return the integer part of a number.",36,[[]]],[10,"fract","","Returns the fractional part of a number.",36,[[]]],[10,"abs","","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …",36,[[]]],[10,"signum","","Returns a number that represents the sign of <code>self</code>.",36,[[]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …",36,[[]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …",36,[[]]],[10,"mul_add","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",36,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, <code>1/x</code>.",36,[[]]],[10,"powi","","Raise a number to an integer power.",36,[[]]],[10,"powf","","Raise a number to a real number power.",36,[[]]],[10,"sqrt","","Take the square root of a number.",36,[[]]],[10,"exp","","Returns <code>e^(self)</code>, (the exponential function).",36,[[]]],[10,"exp2","","Returns <code>2^(self)</code>.",36,[[]]],[10,"ln","","Returns the natural logarithm of the number.",36,[[]]],[10,"log","","Returns the logarithm of the number with respect to an …",36,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",36,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",36,[[]]],[10,"to_degrees","","Converts radians to degrees.",36,[[]]],[10,"to_radians","","Converts degrees to radians.",36,[[]]],[10,"max","","Returns the maximum of the two numbers.",36,[[]]],[10,"min","","Returns the minimum of the two numbers.",36,[[]]],[10,"abs_sub","","The positive difference of two numbers.",36,[[]]],[10,"cbrt","","Take the cubic root of a number.",36,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle …",36,[[]]],[10,"sin","","Computes the sine of a number (in radians).",36,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",36,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",36,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in …",36,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in …",36,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in …",36,[[]]],[10,"atan2","","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and …",36,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the …",36,[[]]],[10,"exp_m1","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the…",36,[[]]],[10,"ln_1p","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than …",36,[[]]],[10,"sinh","","Hyperbolic sine function.",36,[[]]],[10,"cosh","","Hyperbolic cosine function.",36,[[]]],[10,"tanh","","Hyperbolic tangent function.",36,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",36,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",36,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",36,[[]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",37,[[]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[]]],[10,"signum","","Returns the sign of the number.",37,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",37,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the …",37,[[]]],[5,"abs","","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",38,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",38,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",39,null],[13,"Invalid","","",39,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",40,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_string","","",40,[[],["string",3]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but …",null,null],[6,"AVX2","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the …",null,null],[19,"vec256_storage","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[19,"vec512_storage","","",null,null],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or …",null,null],[10,"extract","","",7,[[]]],[10,"insert","","",7,[[]]],[8,"Vec4","","A vector composed of four elements, which may be words or …",null,null],[10,"extract","","",8,[[]]],[10,"insert","","",8,[[]]],[8,"Words4","","A vector composed of four words; depending on their size, …",null,null],[10,"shuffle1230","","",9,[[]]],[10,"shuffle2301","","",9,[[]]],[10,"shuffle3012","","",9,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four …",null,null],[10,"shuffle_lane_words1230","","",10,[[]]],[10,"shuffle_lane_words2301","","",10,[[]]],[10,"shuffle_lane_words3012","","",10,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[]]],[10,"swap2","","",11,[[]]],[10,"swap4","","",11,[[]]],[10,"swap8","","",11,[[]]],[10,"swap16","","",11,[[]]],[10,"swap32","","",11,[[]]],[10,"swap64","","",11,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]],[10,"instance","","SafetyCaller must ensure the type of Self is appropriate …",14,[[]]],[8,"Store","","",null,null],[10,"unpack","","SafetyCaller must ensure the type of Self is appropriate …",15,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","SafetyCaller must ensure the type of Self is appropriate …",16,[[]]],[10,"unsafe_read_be","","SafetyCaller must ensure the type of Self is appropriate …",16,[[]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to …",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be …",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be …",null,null],[11,"from","ppv_lite86::x86_64","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",27,[[]]],[11,"instance","","",28,[[]]],[11,"unpack","","",29,[[["vec128_storage",19]]]],[11,"eq","","",29,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[],["yess3",3]]],[11,"clone","","",18,[[],["nos3",3]]],[11,"clone","","",19,[[],["yess4",3]]],[11,"clone","","",20,[[],["nos4",3]]],[11,"clone","","",21,[[],["yesa1",3]]],[11,"clone","","",22,[[],["noa1",3]]],[11,"clone","","",23,[[],["yesa2",3]]],[11,"clone","","",24,[[],["noa2",3]]],[11,"clone","","",25,[[],["yesni",3]]],[11,"clone","","",26,[[],["noni",3]]],[11,"clone","","",27,[[],["ssemachine",3]]],[11,"clone","","",28,[[],["avx2machine",3]]],[11,"clone","","",29,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",29,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the …","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>\'s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[]]],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",1,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",1,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",1,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",1,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",1,[[],["span",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",1,[[["span",3]],[["span",3],["option",4]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",2,null],[13,"Ident","","An identifier.",2,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",2,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",2,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",2,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",2,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",3,null],[13,"Brace","","<code>{ ... }</code>",3,null],[13,"Bracket","","<code>[ ... ]</code>",3,null],[13,"None","","<code>Ø ... Ø</code>",3,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",4,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",4,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",4,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",4,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",4,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",4,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>\'s delimiters, but not …",4,[[["span",3]]]],[3,"Punct","","An <code>Punct</code> is an single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>…",null,null],[4,"Spacing","","Whether an <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",5,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",5,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",6,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",6,[[]]],[11,"spacing","","Returns the spacing of this punctuation character, …",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",7,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",7,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[],["literal",3]]],[11,"string","","String literal.",8,[[],["literal",3]]],[11,"character","","Character literal.",8,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",8,[[["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","proc_macro2::token_stream","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",2,[[["group",3]],["tokentree",4]]],[11,"from","","",2,[[["ident",3]],["tokentree",4]]],[11,"from","","",2,[[["punct",3]],["tokentree",4]]],[11,"from","","",2,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",9,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["tokentree",4]]],[11,"clone","","",4,[[],["group",3]]],[11,"clone","","",3,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",5,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",9,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",3,[[["delimiter",4]]]],[11,"eq","","",5,[[["spacing",4]]]],[11,"eq","","",7,[[["ident",3]]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",7,[[["ident",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",0,[[],[["lexerror",3],["tokenstream",3],["result",4]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"],[3,"LexError"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",0,[[]]],[10,"next_u64","","Return the next random <code>u64</code>.",0,[[]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",0,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",0,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",1,[[]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",1,[[],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",1,[[]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[0,"uniform","rand::distributions","A distribution uniformly sampling numbers within a given …",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[11,"new","","Create a new <code>Uniform</code> instance which samples uniformly …",2,[[],["uniform",3]]],[11,"new_inclusive","","Create a new <code>Uniform</code> instance which samples uniformly …",2,[[],["uniform",3]]],[8,"SampleUniform","","Helper trait for creating objects using the correct …",null,null],[16,"Sampler","","The <code>UniformSampler</code> implementation supporting type <code>X</code>.",3,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",4,null],[10,"new","","Construct self, with inclusive lower bound and exclusive …",4,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds <code>[low, high]</code>.",4,[[]]],[10,"sample","","Sample a value.",4,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with …",4,[[]]],[8,"SampleBorrow","","Helper trait similar to <code>Borrow</code> but implemented only for …",null,null],[10,"borrow","","Immutably borrows from an owned value. See <code>Borrow::borrow</code>",5,[[]]],[3,"UniformInt","","The back-end implementing [<code>UniformSampler</code>] for integer …",null,null],[3,"UniformFloat","","The back-end implementing [<code>UniformSampler</code>] for …",null,null],[3,"UniformDuration","","The back-end implementing [<code>UniformSampler</code>] for <code>Duration</code>.",null,null],[0,"weighted","rand::distributions","Weighted index sampling",null,null],[0,"alias_method","rand::distributions::weighted","This module contains an implementation of alias method …",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a …",null,null],[11,"new","","Creates a new [<code>WeightedIndex</code>].",6,[[["vec",3]],[["result",4],["weightederror",4]]]],[8,"Weight","","Trait that must be implemented for weights, that are used …",null,null],[18,"MAX","","Maximum number representable by <code>Self</code>.",7,null],[18,"ZERO","","Element of <code>Self</code> equivalent to 0.",7,null],[10,"try_from_u32_lossy","","Produce an instance of <code>Self</code> from a <code>u32</code> value, or return …",7,[[],["option",4]]],[11,"sum","","Sums all values in slice <code>values</code>.",7,[[]]],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a …",null,null],[11,"new","","Creates a new a <code>WeightedIndex</code> [<code>Distribution</code>] using the …",8,[[],[["weightederror",4],["result",4],["weightedindex",3]]]],[11,"update_weights","","Update a subset of weights, without changing the number …",8,[[],[["weightederror",4],["result",4]]]],[4,"WeightedError","","Error type returned from <code>WeightedIndex::new</code>.",null,null],[13,"NoItem","","The provided weight collection contains no items.",9,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the …",9,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",9,null],[13,"TooMany","","Too many weights are provided (length greater than …",9,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[4,"BernoulliError","","Error type returned from <code>Bernoulli::new</code>.",null,null],[13,"InvalidProbability","","<code>p < 0</code> or <code>p > 1</code>.",10,null],[3,"Open01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"Alphanumeric","","Sample a <code>char</code>, uniformly distributed over ASCII letters …",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution <code>Binomial(n, p)</code>.",null,null],[3,"Cauchy","","The Cauchy distribution <code>Cauchy(median, scale)</code>.",null,null],[3,"Dirichlet","","The dirichelet distribution <code>Dirichlet(alpha)</code>.",null,null],[3,"Exp","","The exponential distribution <code>Exp(lambda)</code>.",null,null],[3,"Exp1","","Samples floating-point numbers according to the …",null,null],[3,"Beta","","The Beta distribution with shape parameters <code>alpha</code> and <code>beta</code>…",null,null],[3,"ChiSquared","","The chi-squared distribution <code>χ²(k)</code>, where <code>k</code> is the …",null,null],[3,"FisherF","","The Fisher F distribution <code>F(m, n)</code>.",null,null],[3,"Gamma","","The Gamma distribution <code>Gamma(shape, scale)</code> distribution.",null,null],[3,"StudentT","","The Student t distribution, <code>t(nu)</code>, where <code>nu</code> is the …",null,null],[3,"LogNormal","","The log-normal distribution <code>ln N(mean, std_dev**2)</code>.",null,null],[3,"Normal","","The normal distribution <code>N(mean, std_dev**2)</code>.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal …",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto …",null,null],[3,"Poisson","","The Poisson distribution <code>Poisson(lambda)</code>.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two …",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in …",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull …",null,null],[8,"Distribution","","Types (distributions) that can be used to create a random …",null,null],[10,"sample","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …",11,[[]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",11,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of <code>T</code> with …",null,null],[3,"Standard","","A generic random value distribution, implemented for many …",null,null],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from …",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","<code>ReadRng</code> error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type …",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …",null,null],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of <code>RngCore</code> for testing purposes.",null,null],[11,"new","","Create a <code>StepRng</code>, yielding an arithmetic sequence …",12,[[]]],[3,"EntropyRng","rand::rngs","An interface returning random data from external …",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …",null,null],[3,"ThreadRng","","The type returned by [<code>thread_rng</code>], essentially just a …",null,null],[0,"seq","rand","Sequence-related functionality",null,null],[0,"index","rand::seq","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[11,"len","","Returns the number of indices",13,[[]]],[11,"is_empty","","Returns <code>true</code> if the length is 0.",13,[[]]],[11,"index","","Return the value at the given <code>index</code>.",13,[[]]],[11,"into_vec","","Return result as a <code>Vec<usize></code>. Conversion may or may not …",13,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of <code>usize</code> values",13,[[],["indexveciter",4]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence …",13,[[],["indexvecintoiter",4]]],[4,"IndexVecIter","","Return type of <code>IndexVec::iter</code>.",null,null],[4,"IndexVecIntoIter","","Return type of <code>IndexVec::into_iter</code>.",null,null],[5,"sample","","Randomly sample exactly <code>amount</code> distinct indices from …",null,[[],["indexvec",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and …",null,null],[16,"Item","","The element type.",14,null],[10,"choose","","Returns a reference to one random element of the slice, …",14,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the …",14,[[],["option",4]]],[10,"choose_multiple","","Chooses <code>amount</code> elements from the slice at random, without …",14,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to <code>choose</code>, but where the likelihood of each …",14,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to <code>choose_mut</code>, but where the likelihood of each …",14,[[],[["weightederror",4],["result",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",14,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",14,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling …",null,null],[11,"choose","","Choose one element at random from the iterator.",15,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a …",15,[[]]],[11,"choose_multiple","","Collects <code>amount</code> values at random from the iterator into a …",15,[[],["vec",3]]],[3,"SliceChooseIter","","An iterator over multiple slice elements.",null,null],[5,"thread_rng","rand","Retrieve the lazily-initialized thread-local random …",null,[[],["threadrng",3]]],[8,"Rng","","An automatically-implemented extension trait on [<code>RngCore</code>] …",null,null],[11,"gen","","Return a random value supporting the <code>Standard</code> …",16,[[]]],[11,"gen_range","","Generate a random value in the range [<code>low</code>, <code>high</code>), i.e. …",16,[[],["sampleuniform",8]]],[11,"sample","","Sample a new value, using the given distribution.",16,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given …",16,[[],["distiter",3]]],[11,"fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",16,[[]]],[11,"try_fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",16,[[],[["error",3],["result",4]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",16,[[]]],[11,"gen_ratio","","Return a bool with a probability of <code>numerator/denominator</code> …",16,[[]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",17,[[]]],[10,"to_le","","Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian …",17,[[]]],[5,"random","","Generates a random value using the thread-local random …",null,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","rand::distributions","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","rand::distributions::uniform","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","rand::distributions","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","rand::distributions::weighted::alias_method","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","rand::distributions::weighted","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","rand::distributions","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","rand::rngs","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","rand::rngs::adapter","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","rand::rngs","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","rand::rngs::mock","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","rand::rngs","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","rand::seq::index","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","rand::seq","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"fmt","rand::rngs","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",47,[[]]],[11,"next_u64","","",47,[[]]],[11,"fill_bytes","","",47,[[]]],[11,"try_fill_bytes","","",47,[[],[["result",4],["error",3]]]],[11,"clone","","",47,[[],["osrng",3]]],[11,"source","rand","",18,[[],[["option",4],["error",8]]]],[11,"from","","",18,[[["nonzerou32",3]],["error",3]]],[11,"from","","",18,[[["error",3]],["error",3]]],[11,"default","rand::rngs","",47,[[],["osrng",3]]],[11,"read","rand","",0,[[],[["error",3],["result",4]]]],[11,"new","rand::distributions::uniform","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",37,[[]]],[11,"new_inclusive","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample_single","","",37,[[]]],[11,"new","","",37,[[]]],[11,"new_inclusive","","",37,[[]]],[11,"sample","","",37,[[]]],[11,"sample_single","","",37,[[]]],[11,"new","","",38,[[]]],[11,"new_inclusive","","",38,[[]]],[11,"sample","","",38,[[],["duration",3]]],[11,"sample","rand::distributions","",19,[[]]],[11,"sample","","",20,[[]]],[11,"sample","","",21,[[]]],[11,"sample","","",22,[[],["vec",3]]],[11,"sample","","",23,[[]]],[11,"sample","","",24,[[]]],[11,"sample","","",25,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",27,[[]]],[11,"sample","","",28,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",30,[[]]],[11,"sample","","",31,[[]]],[11,"sample","","",32,[[]]],[11,"sample","","",33,[[]]],[11,"sample","","",34,[[]]],[11,"sample","","",35,[[]]],[11,"sample","","",2,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",40,[[]]],[11,"sample","","",41,[[]]],[11,"sample","rand::distributions::weighted::alias_method","",6,[[]]],[11,"sample","rand::distributions::weighted","",8,[[]]],[11,"sample","rand::distributions","",46,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",42,[[]]],[11,"sample","","",43,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["nonzerou8",3]]],[11,"sample","","",46,[[],["nonzerou16",3]]],[11,"sample","","",46,[[],["nonzerou32",3]]],[11,"sample","","",46,[[],["nonzerou64",3]]],[11,"sample","","",46,[[],["nonzerou128",3]]],[11,"sample","","",46,[[],["nonzerousize",3]]],[11,"sample","","",46,[[]]],[11,"sample","","",44,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[]]],[11,"sample","","",46,[[],["option",4]]],[11,"sample","","",46,[[],["wrapping",3]]],[11,"from","","",2,[[["range",3]],["uniform",3]]],[11,"from","","",2,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",13,[[["vec",3]]]],[11,"from","","",13,[[["vec",3]]]],[11,"len","rand::seq","",56,[[]]],[11,"next","rand::distributions","",45,[[],["option",4]]],[11,"size_hint","","",45,[[]]],[11,"next","rand::seq::index","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"next","","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"next","rand::seq","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"clone","rand::distributions","",19,[[],["bernoulli",3]]],[11,"clone","","",10,[[],["bernoullierror",4]]],[11,"clone","","",20,[[],["binomial",3]]],[11,"clone","","",21,[[],["cauchy",3]]],[11,"clone","","",22,[[],["dirichlet",3]]],[11,"clone","","",23,[[],["exp1",3]]],[11,"clone","","",24,[[],["exp",3]]],[11,"clone","","",25,[[],["gamma",3]]],[11,"clone","","",26,[[],["chisquared",3]]],[11,"clone","","",27,[[],["fisherf",3]]],[11,"clone","","",28,[[],["studentt",3]]],[11,"clone","","",29,[[],["beta",3]]],[11,"clone","","",30,[[],["standardnormal",3]]],[11,"clone","","",31,[[],["normal",3]]],[11,"clone","","",32,[[],["lognormal",3]]],[11,"clone","","",33,[[],["pareto",3]]],[11,"clone","","",34,[[],["poisson",3]]],[11,"clone","","",35,[[],["triangular",3]]],[11,"clone","","",2,[[],["uniform",3]]],[11,"clone","rand::distributions::uniform","",36,[[],["uniformint",3]]],[11,"clone","","",37,[[],["uniformfloat",3]]],[11,"clone","","",38,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",39,[[],["unitcircle",3]]],[11,"clone","","",40,[[],["unitspheresurface",3]]],[11,"clone","","",41,[[],["weibull",3]]],[11,"clone","rand::distributions::weighted::alias_method","",6,[[]]],[11,"clone","rand::distributions::weighted","",8,[[],["weightedindex",3]]],[11,"clone","","",9,[[],["weightederror",4]]],[11,"clone","rand::distributions","",42,[[],["openclosed01",3]]],[11,"clone","","",43,[[],["open01",3]]],[11,"clone","","",46,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",50,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",12,[[],["steprng",3]]],[11,"clone","rand::rngs","",52,[[],["stdrng",3]]],[11,"clone","","",53,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",13,[[],["indexvec",4]]],[11,"clone","","",55,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",51,[[]]],[11,"default","","",53,[[],["threadrng",3]]],[11,"eq","rand::distributions","",10,[[["bernoullierror",4]]]],[11,"eq","rand::distributions::weighted","",9,[[["weightederror",4]]]],[11,"eq","rand::seq::index","",13,[[["indexvec",4]]]],[11,"fmt","rand::distributions","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",51,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",56,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",10,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",9,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",49,[[["formatter",3]],["result",6]]],[11,"source","","",49,[[],[["error",8],["option",4]]]],[11,"next_u32","","",48,[[]]],[11,"next_u64","","",48,[[]]],[11,"fill_bytes","","",48,[[]]],[11,"try_fill_bytes","","",48,[[],[["error",3],["result",4]]]],[11,"next_u32","","",50,[[]]],[11,"next_u64","","",50,[[]]],[11,"fill_bytes","","",50,[[]]],[11,"try_fill_bytes","","",50,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",51,[[]]],[11,"next_u64","","",51,[[]]],[11,"fill_bytes","","",51,[[]]],[11,"try_fill_bytes","","",51,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs::mock","",12,[[]]],[11,"next_u64","","",12,[[]]],[11,"fill_bytes","","",12,[[]]],[11,"try_fill_bytes","","",12,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",52,[[]]],[11,"next_u64","","",52,[[]]],[11,"fill_bytes","","",52,[[]]],[11,"try_fill_bytes","","",52,[[],[["error",3],["result",4]]]],[11,"next_u32","","",53,[[]]],[11,"next_u64","","",53,[[]]],[11,"fill_bytes","","",53,[[]]],[11,"try_fill_bytes","","",53,[[],[["error",3],["result",4]]]],[11,"from_seed","","",52,[[]]],[11,"from_rng","","",52,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"new","rand","Construct from any type supporting <code>std::error::Error</code>",18,[[],["error",3]]],[11,"inner","","Reference the inner error (<code>std</code> only)",18,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (<code>std</code> only)",18,[[],[["global",3],["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",18,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",18,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",18,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",18,[[],[["nonzerou32",3],["option",4]]]],[11,"new","rand::distributions","Construct a new <code>Bernoulli</code> with the given probability of …",19,[[],[["result",4],["bernoullierror",4],["bernoulli",3]]]],[11,"from_ratio","","Construct a new <code>Bernoulli</code> with the probability of success …",19,[[],[["result",4],["bernoullierror",4],["bernoulli",3]]]],[11,"new","","Construct a new <code>Binomial</code> with the given shape parameters <code>n</code>…",20,[[],["binomial",3]]],[11,"new","","Construct a new <code>Cauchy</code> with the given shape parameters …",21,[[],["cauchy",3]]],[11,"new","","Construct a new <code>Dirichlet</code> with the given alpha parameter …",22,[[["into",8],["vec",3]],["dirichlet",3]]],[11,"new_with_param","","Construct a new <code>Dirichlet</code> with the given shape parameter …",22,[[],["dirichlet",3]]],[11,"new","","Construct a new <code>Exp</code> with the given shape parameter <code>lambda</code>…",24,[[],["exp",3]]],[11,"new","","Construct an object representing the <code>Gamma(shape, scale)</code> …",25,[[],["gamma",3]]],[11,"new","","Create a new chi-squared distribution with …",26,[[],["chisquared",3]]],[11,"new","","Create a new <code>FisherF</code> distribution, with the given …",27,[[],["fisherf",3]]],[11,"new","","Create a new Student t distribution with <code>n</code> degrees of …",28,[[],["studentt",3]]],[11,"new","","Construct an object representing the <code>Beta(alpha, beta)</code> …",29,[[],["beta",3]]],[11,"new","","Construct a new <code>Normal</code> distribution with the given mean …",31,[[],["normal",3]]],[11,"new","","Construct a new <code>LogNormal</code> distribution with the given mean…",32,[[],["lognormal",3]]],[11,"new","","Construct a new Pareto distribution with given <code>scale</code> and …",33,[[],["pareto",3]]],[11,"new","","Construct a new <code>Poisson</code> with the given shape parameter …",34,[[],["poisson",3]]],[11,"new","","Construct a new <code>Triangular</code> with minimum <code>min</code>, maximum <code>max</code> …",35,[[],["triangular",3]]],[11,"new","","Construct a new <code>UnitCircle</code> distribution.",39,[[],["unitcircle",3]]],[11,"new","","Construct a new <code>UnitSphereSurface</code> distribution.",40,[[],["unitspheresurface",3]]],[11,"new","","Construct a new <code>Weibull</code> distribution with given <code>scale</code> and …",41,[[],["weibull",3]]],[11,"new","rand::rngs::adapter","Create a new <code>ReadRng</code> from a <code>Read</code>.",48,[[],["readrng",3]]],[11,"new","","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …",50,[[]]],[11,"reseed","","Reseed the internal PRNG.",50,[[],[["error",3],["result",4]]]],[11,"new","rand::rngs","Create a new <code>EntropyRng</code>.",51,[[]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[3,"Uniform"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"WeightedIndex"],[8,"Weight"],[3,"WeightedIndex"],[4,"WeightedError"],[4,"BernoulliError"],[8,"Distribution"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Error"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp1"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[3,"DistIter"],[3,"Standard"],[3,"OsRng"],[3,"ReadRng"],[3,"ReadError"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StdRng"],[3,"ThreadRng"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"],[3,"SliceChooseIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that …",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that …",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that …",null,null],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[["chacha20core",3]]]],[11,"from","","",3,[[["chacha12core",3]]]],[11,"from","","",5,[[["chacha8core",3]]]],[11,"clone","","",0,[[],["chacha20core",3]]],[11,"clone","","",1,[[],["chacha20rng",3]]],[11,"clone","","",2,[[],["chacha12core",3]]],[11,"clone","","",3,[[],["chacha12rng",3]]],[11,"clone","","",4,[[],["chacha8core",3]]],[11,"clone","","",5,[[],["chacha8rng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"generate","","",0,[[]]],[11,"generate","","",2,[[]]],[11,"generate","","",4,[[]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",3,[[]]],[11,"next_u64","","",3,[[]]],[11,"fill_bytes","","",3,[[]]],[11,"try_fill_bytes","","",3,[[],[["error",3],["result",4]]]],[11,"next_u32","","",5,[[]]],[11,"next_u64","","",5,[[]]],[11,"fill_bytes","","",5,[[]]],[11,"try_fill_bytes","","",5,[[],[["error",3],["result",4]]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",2,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",5,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",1,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",1,[[]]],[11,"set_stream","","Set the stream number.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",3,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",3,[[]]],[11,"set_stream","","Set the stream number.",3,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",5,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",5,[[]]],[11,"set_stream","","Set the stream number.",5,[[]]]],"p":[[3,"ChaCha20Core"],[3,"ChaCha20Rng"],[3,"ChaCha12Core"],[3,"ChaCha12Rng"],[3,"ChaCha8Core"],[3,"ChaCha8Rng"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[0,"block","rand_core","The <code>BlockRngCore</code> trait and implementation helpers",null,null],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers …",null,null],[16,"Item","","Results element type, e.g. <code>u32</code>.",0,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing …",0,null],[10,"generate","","Generate a new block of results.",0,[[]]],[3,"BlockRng","","A wrapper type implementing [<code>RngCore</code>] for some type …",null,null],[12,"core","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …",1,null],[11,"new","","Create a new <code>BlockRng</code> from an existing RNG implementing …",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a …",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the …",1,[[]]],[3,"BlockRng64","","A wrapper type implementing [<code>RngCore</code>] for some type …",null,null],[12,"core","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …",2,null],[11,"new","","Create a new <code>BlockRng</code> from an existing RNG implementing …",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a …",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the …",2,[[]]],[0,"impls","rand_core","Helper functions for implementing <code>RngCore</code> functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …",null,[[]]],[5,"fill_via_u32_chunks","","Implement <code>fill_bytes</code> by reading chunks from the output …",null,[[]]],[5,"fill_via_u64_chunks","","Implement <code>fill_bytes</code> by reading chunks from the output …",null,[[]]],[5,"next_u32_via_fill","","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>. …",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>. …",null,[[]]],[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from …",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",3,[[]]],[10,"next_u64","","Return the next random <code>u64</code>.",3,[[]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",3,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",3,[[],[["result",4],["error",3]]]],[8,"CryptoRng","","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",4,null],[10,"from_seed","","Create a new PRNG using the given seed.",4,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",4,[[]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",4,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","rand_core","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next_u32","rand_core::block","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["result",4],["error",3]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",5,[[["nonzerou32",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"source","","",5,[[],[["error",8],["option",4]]]],[11,"read","","",3,[[],[["error",3],["result",4]]]],[11,"new","","Construct from any type supporting <code>std::error::Error</code>",5,[[]]],[11,"inner","","Reference the inner error (<code>std</code> only)",5,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (<code>std</code> only)",5,[[],[["error",8],["box",3]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",5,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",5,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",5,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",5,[[],[["nonzerou32",3],["option",4]]]]],"p":[[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"],[3,"Error"],[3,"OsRng"]]},\
"raw_string":{"doc":"<code>RawString</code> and <code>RawStr</code> are the equivalents of <code>String</code> and <code>str</code>…","i":[[0,"unix","raw_string","Conversions only available on unix.",null,null],[8,"RawStrExt","raw_string::unix","",null,null],[10,"as_osstr","","",0,[[],["osstr",3]]],[10,"as_path","","",0,[[],["path",3]]],[8,"RawStringExt","","",null,null],[10,"into_osstring","","",1,[[],["osstring",3]]],[10,"into_pathbuf","","",1,[[],["pathbuf",3]]],[8,"RawStrIndex","raw_string","The equivalent of <code>SliceIndex</code> for <code>RawStr</code>.",null,null],[16,"Output","","<code>RawStr</code> (for ranges) or <code>u8</code> (for single indexes).",2,null],[10,"get","","Get the range or byte from the given <code>&RawStr</code>.",2,[[["rawstr",3]],["option",4]]],[10,"get_mut","","Get the (mutable) range or byte from the given <code>&mut RawStr</code>…",2,[[["rawstr",3]],["option",4]]],[10,"get_unchecked","","Like <code>get</code>, but unsafe and unchecked.",2,[[["rawstr",3]]]],[10,"get_unchecked_mut","","Like <code>get_mut</code>, but unsafe and unchecked.",2,[[["rawstr",3]]]],[10,"index","","Like <code>get</code>, but panics on failure.",2,[[["rawstr",3]]]],[10,"index_mut","","Like <code>get_mut</code>, but panics on failure.",2,[[["rawstr",3]]]],[3,"Utf8Chunk","","A chunk of valid UTF-8, possibly followed by a broken …",null,null],[12,"valid","","A valid UTF-8 piece, at the start, end, or between broken …",3,null],[12,"broken","","A broken char.",3,null],[3,"Utf8ChunksIter","","An iterator over chunks of valid UTF-8 in a RawStr.",null,null],[3,"RawStr","","A <code>str</code> with unchecked contents.",null,null],[3,"RawString","","A <code>String</code> with unchecked contents.",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"as_osstr","","",5,[[],["osstr",3]]],[11,"as_path","","",5,[[],["path",3]]],[11,"into_osstring","","",6,[[],["osstring",3]]],[11,"into_pathbuf","","",6,[[],["pathbuf",3]]],[11,"as_ref","","",5,[[],["rawstr",3]]],[11,"as_ref","","",5,[[]]],[11,"as_ref","","",6,[[],["rawstr",3]]],[11,"as_ref","","",6,[[]]],[11,"from","","",6,[[["rawstr",3]],["rawstring",3]]],[11,"from","","",6,[[],["rawstring",3]]],[11,"from","","",6,[[],["rawstring",3]]],[11,"from","","",6,[[["string",3]],["rawstring",3]]],[11,"from","","",6,[[["vec",3]],["rawstring",3]]],[11,"into_iter","","",6,[[]]],[11,"next","","",4,[[],[["option",4],["utf8chunk",3]]]],[11,"size_hint","","",4,[[]]],[11,"clone","","",6,[[],["rawstring",3]]],[11,"default","","",6,[[],["rawstring",3]]],[11,"cmp","","",5,[[["rawstr",3]],["ordering",4]]],[11,"cmp","","",6,[[["rawstring",3]],["ordering",4]]],[11,"eq","","",5,[[["rawstr",3]]]],[11,"ne","","",5,[[["rawstr",3]]]],[11,"eq","","",5,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",6,[[["rawstring",3]]]],[11,"ne","","",6,[[["rawstring",3]]]],[11,"eq","","",6,[[["rawstr",3]]]],[11,"eq","","",5,[[["rawstring",3]]]],[11,"eq","","",6,[[]]],[11,"eq","","",6,[[]]],[11,"eq","","",6,[[["rawstr",3]]]],[11,"eq","","",6,[[]]],[11,"eq","","",6,[[]]],[11,"partial_cmp","","",5,[[["rawstr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["rawstr",3]]]],[11,"le","","",5,[[["rawstr",3]]]],[11,"gt","","",5,[[["rawstr",3]]]],[11,"ge","","",5,[[["rawstr",3]]]],[11,"partial_cmp","","",5,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[["rawstring",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["rawstring",3]]]],[11,"le","","",6,[[["rawstring",3]]]],[11,"gt","","",6,[[["rawstring",3]]]],[11,"ge","","",6,[[["rawstring",3]]]],[11,"partial_cmp","","",6,[[["rawstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[["rawstring",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[["rawstr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",6,[[],[["ordering",4],["option",4]]]],[11,"to_owned","","",5,[[],["rawstring",3]]],[11,"deref","","",6,[[],["rawstr",3]]],[11,"deref_mut","","",6,[[],["rawstr",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"index","","",5,[[]]],[11,"index_mut","","",5,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"borrow","","",6,[[],["rawstr",3]]],[11,"from","","",5,[[]]],[11,"from_bytes","","",5,[[]]],[11,"from_str","","",5,[[]]],[11,"as_bytes","","",5,[[]]],[11,"from_bytes_mut","","",5,[[]]],[11,"as_bytes_mut","","",5,[[]]],[11,"len","","",5,[[]]],[11,"is_empty","","",5,[[]]],[11,"as_ptr","","",5,[[]]],[11,"first","","",5,[[],["option",4]]],[11,"first_mut","","",5,[[],["option",4]]],[11,"last","","",5,[[],["option",4]]],[11,"last_mut","","",5,[[],["option",4]]],[11,"split_first","","",5,[[],["option",4]]],[11,"split_first_mut","","",5,[[],["option",4]]],[11,"split_last","","",5,[[],["option",4]]],[11,"split_last_mut","","",5,[[],["option",4]]],[11,"split_at","","",5,[[]]],[11,"split_at_mut","","",5,[[]]],[11,"contains_byte","","",5,[[]]],[11,"starts_with","","",5,[[["rawstr",3],["asref",8]]]],[11,"ends_with","","",5,[[["rawstr",3],["asref",8]]]],[11,"get","","",5,[[["rawstrindex",8]],["option",4]]],[11,"get_mut","","",5,[[["rawstrindex",8]],["option",4]]],[11,"get_unchecked","","",5,[[["rawstrindex",8]]]],[11,"get_unchecked_mut","","",5,[[["rawstrindex",8]]]],[11,"slice_unchecked","","",5,[[],["rawstr",3]]],[11,"slice_mut_unchecked","","",5,[[],["rawstr",3]]],[11,"bytes","","",5,[[],[["cloned",3],["iter",3]]]],[11,"bytes_mut","","",5,[[],["itermut",3]]],[11,"utf8_chunks","","Iterate over chunks of valid UTF-8.",5,[[],["utf8chunksiter",3]]],[11,"to_str","","",5,[[],[["result",4],["utf8error",3]]]],[11,"to_osstr","","Convert to an OsStr.",5,[[],[["osstr",3],["result",4],["utf8error",3]]]],[11,"to_path","","Convert to a Path.",5,[[],[["path",3],["utf8error",3],["result",4]]]],[11,"is_ascii","","",5,[[]]],[11,"eq_ignore_ascii_case","","",5,[[["rawstr",3]]]],[11,"make_ascii_uppercase","","",5,[[]]],[11,"make_ascii_lowercase","","",5,[[]]],[11,"new","","",6,[[]]],[11,"with_capacity","","",6,[[]]],[11,"from_bytes","","",6,[[["vec",3]]]],[11,"from_string","","",6,[[["string",3]]]],[11,"into_bytes","","",6,[[],["vec",3]]],[11,"capacity","","",6,[[]]],[11,"reserve","","",6,[[]]],[11,"reserve_exact","","",6,[[]]],[11,"shrink_to_fit","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"truncate","","",6,[[]]],[11,"pop","","",6,[[],["option",4]]],[11,"remove","","",6,[[]]],[11,"retain","","",6,[[["fnmut",8]]]],[11,"insert","","",6,[[]]],[11,"insert_str","","",6,[[["rawstr",3],["asref",8]]]],[11,"split_off","","",6,[[],["rawstring",3]]],[11,"drain","","",6,[[["rangebounds",8]],["drain",3]]],[11,"replace_range","","",6,[[["rawstr",3],["asref",8],["rangebounds",8]]]],[11,"into_boxed_raw_str","","",6,[[],[["box",3],["rawstr",3]]]],[11,"push","","",6,[[]]],[11,"push_str","","",6,[[["rawstr",3],["asref",8]]]],[11,"as_mut_bytes","","",6,[[],["vec",3]]],[11,"to_string","","",6,[[],[["fromutf8error",3],["result",4],["string",3]]]],[11,"to_osstring","","Convert to an OsString.",6,[[],[["result",4],["fromutf8error",3],["osstring",3]]]],[11,"to_pathbuf","","Convert to a PathBuf.",6,[[],[["fromutf8error",3],["pathbuf",3],["result",4]]]]],"p":[[8,"RawStrExt"],[8,"RawStringExt"],[8,"RawStrIndex"],[3,"Utf8Chunk"],[3,"Utf8ChunksIter"],[3,"RawStr"],[3,"RawString"]]},\
"regex":{"doc":"This crate provides a library for parsing, compiling, and …","i":[[0,"bytes","regex","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary …",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a …",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture …",null,null],[3,"Split","","Yields all substrings delimited by a regular expression …",null,null],[3,"SplitN","","Yields at most <code>N</code> substrings delimited by a regular …",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw …",null,null],[3,"Captures","","Captures represents a group of captured byte strings for …",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the …",null,null],[8,"Replacer","","Replacer describes types that can be used to replace …",null,null],[10,"replace_append","","Appends text to <code>dst</code> to replace the current match.",0,[[["captures",3],["vec",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",0,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",0,[[],["replacerref",3]]],[3,"ReplacerRef","","By-reference adaptor for a <code>Replacer</code>",null,null],[3,"NoExpand","","<code>NoExpand</code> indicates literal byte string replacement.",null,null],[12,"0","","",1,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions …",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex …",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex …",null,null],[11,"new","","Create a new regular expression builder with the given …",2,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",2,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",2,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",2,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",2,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",2,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",2,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",2,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",2,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",2,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",2,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",2,[[],["regexbuilder",3]]],[11,"new","","Create a new regular expression builder with the given …",3,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions …",3,[[],[["regexset",3],["error",4],["result",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",3,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",3,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",3,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",3,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",3,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",3,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",3,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",3,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",3,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",3,[[],["regexsetbuilder",3]]],[11,"start","","Returns the starting byte offset of the match in the …",4,[[]]],[11,"end","","Returns the ending byte offset of the match in the …",4,[[]]],[11,"range","","Returns the range over the starting and ending byte …",4,[[],["range",3]]],[11,"as_bytes","","Returns the matched text.",4,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be …",5,[[],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the …",5,[[]]],[11,"find","","Returns the start and end byte range of the …",5,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping …",5,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the …",5,[[],[["captures",3],["option",4]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture …",5,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of <code>text</code> delimited by a …",5,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most <code>limit</code> substrings of <code>text</code> …",5,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement …",5,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in <code>text</code> with the …",5,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most <code>limit</code> non-overlapping matches in <code>text</code> …",5,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",5,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search …",5,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at …",5,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the …",5,[[],[["match",3],["option",4]]]],[11,"captures_read","","This is like <code>captures</code>, but uses <code>CaptureLocations</code> instead …",5,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as <code>captures_read</code>, but starts the search …",5,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",5,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",5,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",5,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be …",5,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture …",6,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",6,[[]]],[11,"get","","Returns the match associated with the capture group at …",7,[[],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named <code>name</code>. If …",7,[[],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the …",7,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of <code>$name</code> in <code>replacement</code> to the …",7,[[["vec",3]]]],[11,"len","","Returns the number of captured groups.",7,[[]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",0,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",0,[[],["replacerref",3]]],[11,"new","","Create a new regex set with the given regular expressions.",8,[[],[["regexset",3],["error",4],["result",4]]]],[11,"empty","","Create a new empty regex set.",8,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this …",8,[[]]],[11,"matches","","Returns the set of regular expressions that match in the …",8,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this …",8,[[]]],[11,"is_empty","","Returns <code>true</code> if this set contains no regular expressions.",8,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",8,[[]]],[11,"matched_any","","Whether this set contains any matches.",9,[[]]],[11,"matched","","Whether the regex at the given index matched.",9,[[]]],[11,"len","","The total number of regexes in the set that created these …",9,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that …",9,[[],["setmatchesiter",3]]],[4,"Error","regex","An error that occurred during parsing or compiling a …",null,null],[13,"Syntax","","A syntax error.",10,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The …",10,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions …",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex …",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex …",null,null],[5,"escape","","Escapes all regular expression meta characters in <code>text</code>.",null,[[],["string",3]]],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw …",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture …",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a …",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a …",null,null],[3,"NoExpand","","<code>NoExpand</code> indicates literal string replacement.",null,null],[12,"0","","",11,null],[3,"Regex","","A compiled regular expression for matching Unicode …",null,null],[8,"Replacer","","Replacer describes types that can be used to replace …",null,null],[10,"replace_append","","Appends text to <code>dst</code> to replace the current match.",12,[[["captures",3],["string",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",12,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",12,[[],["replacerref",3]]],[3,"ReplacerRef","","By-reference adaptor for a <code>Replacer</code>",null,null],[3,"Split","","Yields all substrings delimited by a regular expression …",null,null],[3,"SplitN","","Yields at most <code>N</code> substrings delimited by a regular …",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the …",null,null],[11,"from","regex::bytes","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","regex","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"replace_append","regex::bytes","",19,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",19,[[],[["option",4],["cow",4]]]],[11,"replace_append","","",1,[[["captures",3],["vec",3]]]],[11,"no_expansion","","",1,[[],[["cow",4],["option",4]]]],[11,"replace_append","regex","",38,[[["captures",3],["string",3]]]],[11,"no_expansion","","",38,[[],[["cow",4],["option",4]]]],[11,"replace_append","","",11,[[["captures",3],["string",3]]]],[11,"no_expansion","","",11,[[],[["cow",4],["option",4]]]],[11,"next_back","","",26,[[],["option",4]]],[11,"next_back","","",27,[[],["option",4]]],[11,"next_back","regex::bytes","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"into_iter","regex","",25,[[]]],[11,"into_iter","regex::bytes","",9,[[]]],[11,"next","","",13,[[],[["match",3],["option",4]]]],[11,"next","","",14,[[],[["captures",3],["option",4]]]],[11,"next","","",15,[[],["option",4]]],[11,"next","","",16,[[],["option",4]]],[11,"next","","",17,[[],[["option",4],["option",4]]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],[["option",4],["option",4]]]],[11,"next","regex","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","regex::bytes","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","regex","",30,[[],[["option",4],["option",4]]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"next","","",32,[[],["option",4]]],[11,"next","","",35,[[],[["option",4],["option",4]]]],[11,"next","","",36,[[],[["captures",3],["option",4]]]],[11,"next","","",37,[[],[["match",3],["option",4]]]],[11,"clone","","",10,[[],["error",4]]],[11,"clone","regex::bytes","",4,[[],["match",3]]],[11,"clone","","",5,[[],["regex",3]]],[11,"clone","","",6,[[],["capturelocations",3]]],[11,"clone","","",18,[[],["subcapturematches",3]]],[11,"clone","regex","",24,[[],["regexset",3]]],[11,"clone","","",25,[[],["setmatches",3]]],[11,"clone","","",27,[[],["setmatchesiter",3]]],[11,"clone","regex::bytes","",8,[[],["regexset",3]]],[11,"clone","","",9,[[],["setmatches",3]]],[11,"clone","","",21,[[],["setmatchesiter",3]]],[11,"clone","regex","",28,[[],["match",3]]],[11,"clone","","",29,[[],["regex",3]]],[11,"clone","","",33,[[],["capturelocations",3]]],[11,"clone","","",35,[[],["subcapturematches",3]]],[11,"eq","","",10,[[["error",4]]]],[11,"ne","","",10,[[["error",4]]]],[11,"eq","regex::bytes","",4,[[["match",3]]]],[11,"ne","","",4,[[["match",3]]]],[11,"eq","regex","",28,[[["match",3]]]],[11,"ne","","",28,[[["match",3]]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",5,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",29,[[["formatter",3]],["result",6]]],[11,"index","regex::bytes","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","regex","",34,[[]]],[11,"index","","",34,[[]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",5,[[],[["result",4],["regex",3],["error",4]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",29,[[],[["regex",3],["result",4],["error",4]]]],[11,"description","","",10,[[]]],[11,"new","","Create a new regular expression builder with the given …",22,[[],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",22,[[],[["regex",3],["result",4],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",22,[[],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",22,[[],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",22,[[],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",22,[[],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",22,[[],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",22,[[],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",22,[[],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",22,[[],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",22,[[],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",22,[[],["regexbuilder",3]]],[11,"new","","Create a new regular expression builder with the given …",23,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions …",23,[[],[["regexset",3],["result",4],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",23,[[],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",23,[[],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",23,[[],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",23,[[],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",23,[[],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",23,[[],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",23,[[],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",23,[[],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",23,[[],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",23,[[],["regexsetbuilder",3]]],[11,"new","","Create a new regex set with the given regular expressions.",24,[[],[["regexset",3],["result",4],["error",4]]]],[11,"empty","","Create a new empty regex set.",24,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this …",24,[[]]],[11,"matches","","Returns the set of regular expressions that match in the …",24,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this …",24,[[]]],[11,"is_empty","","Returns <code>true</code> if this set contains no regular expressions.",24,[[]]],[11,"patterns","","Returns the patterns that this set will match on.",24,[[]]],[11,"matched_any","","Whether this set contains any matches.",25,[[]]],[11,"matched","","Whether the regex at the given index matched.",25,[[]]],[11,"len","","The total number of regexes in the set that created these …",25,[[]]],[11,"iter","","Returns an iterator over indexes in the regex that …",25,[[],["setmatchesiter",3]]],[11,"start","","Returns the starting byte offset of the match in the …",28,[[]]],[11,"end","","Returns the ending byte offset of the match in the …",28,[[]]],[11,"range","","Returns the range over the starting and ending byte …",28,[[],["range",3]]],[11,"as_str","","Returns the matched text.",28,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be …",29,[[],[["regex",3],["result",4],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the …",29,[[]]],[11,"find","","Returns the start and end byte range of the …",29,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping …",29,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the …",29,[[],[["captures",3],["option",4]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture …",29,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of <code>text</code> delimited by a …",29,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most <code>limit</code> substrings of <code>text</code> …",29,[[],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement …",29,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in <code>text</code> with the …",29,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most <code>limit</code> non-overlapping matches in <code>text</code> …",29,[[["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",29,[[],["option",4]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search …",29,[[],["option",4]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at …",29,[[]]],[11,"find_at","","Returns the same as find, but starts the search at the …",29,[[],[["match",3],["option",4]]]],[11,"captures_read","","This is like <code>captures</code>, but uses <code>CaptureLocations</code> instead …",29,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at …",29,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",29,[[]]],[11,"capture_names","","Returns an iterator over the capture names.",29,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",29,[[]]],[11,"capture_locations","","Returns an empty set of capture locations that can be …",29,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture …",33,[[],["option",4]]],[11,"len","","Returns the total number of capturing groups.",33,[[]]],[11,"get","","Returns the match associated with the capture group at …",34,[[],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named <code>name</code>. If …",34,[[],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the …",34,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of <code>$name</code> in <code>replacement</code> to the …",34,[[["string",3]]]],[11,"len","","Returns the number of captured groups.",34,[[]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",12,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",12,[[],["replacerref",3]]]],"p":[[8,"Replacer"],[3,"NoExpand"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"CaptureLocations"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[3,"ReplacerRef"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","i":[[0,"ast","regex_syntax","Defines an abstract syntax for regular expressions.",null,null],[0,"parse","regex_syntax::ast","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",0,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given …",0,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",0,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",0,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",0,[[],["parserbuilder",3]]],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser with a default configuration.",1,[[],["parser",3]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",1,[[],[["result",4],["ast",4],["error",3]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract …",1,[[],[["result",4],["withcomments",3],["error",3]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for <code>Ast</code>.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",2,[[],["printer",3]]],[11,"print","","Print the given <code>Ast</code> to the given writer. The writer must …",2,[[["ast",4],["write",8]],["result",6]]],[5,"visit","regex_syntax::ast","Executes an implementation of <code>Visitor</code> in constant stack …",null,[[["visitor",8],["ast",4]],["result",4]]],[8,"Visitor","","A trait for visiting an abstract syntax tree (AST) in …",null,null],[16,"Output","","The result of visiting an AST.",3,null],[16,"Err","","An error that visiting an AST might return.",3,null],[10,"finish","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …",3,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the …",3,[[]]],[11,"visit_pre","","This method is called on an <code>Ast</code> before descending into …",3,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an <code>Ast</code> after descending all of …",3,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",3,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every <code>ClassSetItem</code> before …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every <code>ClassSetItem</code> after …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every <code>ClassSetBinaryOp</code> before …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every <code>ClassSetBinaryOp</code> after …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right …",3,[[["classsetbinaryop",3]],["result",4]]],[3,"Error","","An error that occurred while parsing a regular expression …",null,null],[11,"kind","","Return the type of this error.",4,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",4,[[]]],[11,"span","","Return the span at which this error occurred.",4,[[],["span",3]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some …",4,[[],[["span",3],["option",4]]]],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",5,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class …",5,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid …",5,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class. …",5,null],[13,"ClassUnclosed","","An opening <code>[</code> was found with no corresponding closing <code>]</code>.",5,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a …",5,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was …",5,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",5,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode …",5,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",5,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",5,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",5,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., <code>i-</code>.",5,null],[13,"FlagDuplicate","","A flag was used twice, e.g., <code>i-i</code>.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position …",6,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., <code>-i-s</code>.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error …",7,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., <code>(?</code>.",5,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., <code>a</code>.",5,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture …",8,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., <code>(?P<>abc)</code>.",5,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name. …",5,null],[13,"GroupNameUnexpectedEof","","A closing <code>></code> could not be found for a capture group name.",5,null],[13,"GroupUnclosed","","An unclosed group, e.g., <code>(ab</code>.",5,null],[13,"GroupUnopened","","An unopened group, e.g., <code>ab)</code>.",5,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the …",5,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is …",5,null],[13,"RepetitionCountDecimalEmpty","","An opening <code>{</code> was not followed by a valid decimal value. …",5,null],[13,"RepetitionCountUnclosed","","An opening <code>{</code> was found with no corresponding closing <code>}</code>.",5,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing …",5,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs …",5,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced …",5,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE\'s look-around is used, this …",5,null],[3,"Span","","Span represents the position information of a single AST …",null,null],[12,"start","","The start byte offset.",9,null],[12,"end","","The end byte offset.",9,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at <code>0</code> from …",10,null],[12,"line","","The line number, starting at <code>1</code>.",10,null],[12,"column","","The approximate column number, starting at <code>1</code>.",10,null],[11,"new","","Create a new span with the given positions.",9,[[["position",3]],["span",3]]],[11,"splat","","Create a new span using the given position as the start …",9,[[["position",3]],["span",3]]],[11,"with_start","","Create a new span by replacing the starting the position …",9,[[["position",3]],["span",3]]],[11,"with_end","","Create a new span by replacing the ending the position …",9,[[["position",3]],["span",3]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single …",9,[[]]],[11,"is_empty","","Returns true if and only if this span is empty. That is, …",9,[[]]],[11,"new","","Create a new position with the given information.",10,[[],["position",3]]],[3,"WithComments","","An abstract syntax tree for a singular expression along …",null,null],[12,"ast","","The actual ast.",11,null],[12,"comments","","All comments found in the original regular expression.",11,null],[3,"Comment","","A comment from a regular expression with an associated …",null,null],[12,"span","","The span of this comment, including the beginning <code>#</code> and …",12,null],[12,"comment","","The comment text, starting with the first character …",12,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",13,null],[13,"Flags","","A set of flags, e.g., <code>(?is)</code>.",13,null],[13,"Literal","","A single character literal, which includes escape …",13,null],[13,"Dot","","The \\\"any character\\\" class.",13,null],[13,"Assertion","","A single zero-width assertion.",13,null],[13,"Class","","A single character class. This includes all forms of …",13,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular …",13,null],[13,"Group","","A grouped regular expression.",13,null],[13,"Alternation","","An alternation of regular expressions.",13,null],[13,"Concat","","A concatenation of regular expressions.",13,null],[11,"span","","Return the span of this abstract syntax tree.",13,[[],["span",3]]],[11,"is_empty","","Return true if and only if this Ast is empty.",13,[[]]],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",14,null],[12,"asts","","The alternate regular expressions.",14,null],[11,"into_ast","","Return this alternation as an AST.",14,[[],["ast",4]]],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",15,null],[12,"asts","","The concatenation regular expressions.",15,null],[11,"into_ast","","Return this concatenation as an AST.",15,[[],["ast",4]]],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",16,null],[12,"kind","","The kind of this literal.",16,null],[12,"c","","The Unicode scalar value corresponding to this literal.",16,null],[11,"byte","","If this literal was written as a <code>\\\\x</code> hex escape, then this …",16,[[],["option",4]]],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., <code>a</code> or <code>☃</code>.",17,null],[13,"Punctuation","","The literal is written as an escape because it is …",17,null],[13,"Octal","","The literal is written as an octal escape, e.g., <code>\\\\141</code>.",17,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number …",17,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed …",17,null],[13,"Special","","The literal is written as a specially recognized escape, …",17,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled <code>\\\\a</code> (<code>\\\\x07</code>).",18,null],[13,"FormFeed","","Form feed, spelled <code>\\\\f</code> (<code>\\\\x0C</code>).",18,null],[13,"Tab","","Tab, spelled <code>\\\\t</code> (<code>\\\\x09</code>).",18,null],[13,"LineFeed","","Line feed, spelled <code>\\\\n</code> (<code>\\\\x0A</code>).",18,null],[13,"CarriageReturn","","Carriage return, spelled <code>\\\\r</code> (<code>\\\\x0D</code>).",18,null],[13,"VerticalTab","","Vertical tab, spelled <code>\\\\v</code> (<code>\\\\x0B</code>).",18,null],[13,"Space","","Space, spelled <code>\\\\ </code> (<code>\\\\x20</code>). Note that this can only appear …",18,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A <code>\\\\x</code> prefix. When used without brackets, this form is …",19,null],[13,"UnicodeShort","","A <code>\\\\u</code> prefix. When used without brackets, this form is …",19,null],[13,"UnicodeLong","","A <code>\\\\U</code> prefix. When used without brackets, this form is …",19,null],[11,"digits","","The number of digits that must be used with this literal …",19,[[]]],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.",20,null],[13,"Perl","","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.",20,null],[13,"Bracketed","","A bracketed character class set, which may contain zero …",20,null],[11,"span","","Return the span of this character class.",20,[[],["span",3]]],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",21,null],[12,"kind","","The kind of Perl class.",21,null],[12,"negated","","Whether the class is negated or not. e.g., <code>\\\\d</code> is not …",21,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",22,null],[13,"Space","","Whitespace.",22,null],[13,"Word","","Word characters.",22,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",23,null],[12,"kind","","The kind of ASCII class.",23,null],[12,"negated","","Whether the class is negated or not. e.g., <code>[[:alpha:]]</code> is …",23,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","<code>[0-9A-Za-z]</code>",24,null],[13,"Alpha","","<code>[A-Za-z]</code>",24,null],[13,"Ascii","","<code>[\\\\x00-\\\\x7F]</code>",24,null],[13,"Blank","","<code>[ \\\\t]</code>",24,null],[13,"Cntrl","","<code>[\\\\x00-\\\\x1F\\\\x7F]</code>",24,null],[13,"Digit","","<code>[0-9]</code>",24,null],[13,"Graph","","<code>[!-~]</code>",24,null],[13,"Lower","","<code>[a-z]</code>",24,null],[13,"Print","","<code>[ -~]</code>",24,null],[13,"Punct","","<code>[!-/:-@\\\\[-</code>{-~]`",24,null],[13,"Space","","<code>[\\\\t\\\\n\\\\v\\\\f\\\\r ]</code>",24,null],[13,"Upper","","<code>[A-Z]</code>",24,null],[13,"Word","","<code>[0-9A-Za-z_]</code>",24,null],[13,"Xdigit","","<code>[0-9A-Fa-f]</code>",24,null],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the …",24,[[],[["classasciikind",4],["option",4]]]],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",25,null],[12,"negated","","Whether this class is negated or not.",25,null],[12,"kind","","The kind of Unicode class.",25,null],[11,"is_negated","","Returns true if this class has been negated.",25,[[]]],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., <code>\\\\pN</code>.",26,null],[13,"Named","","A binary property, general category or script. The string …",26,null],[13,"NamedValue","","A property name and an associated value.",26,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate <code>name</code> with <code>value</code>.",27,null],[12,"name","","The property name (which may be empty).",27,null],[12,"value","","The property value (which may be empty).",27,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g., <code>\\\\p{scx=Katakana}</code>…",28,null],[13,"Colon","","A property set to a specific value using a colon, e.g., …",28,null],[13,"NotEqual","","A property that isn\'t a particular value, e.g., …",28,null],[11,"is_equal","","Whether the op is an equality op or not.",28,[[]]],[3,"ClassBracketed","","A bracketed character class, e.g., <code>[a-z0-9]</code>.",null,null],[12,"span","","The span of this class.",29,null],[12,"negated","","Whether this class is negated or not. e.g., <code>[a]</code> is not …",29,null],[12,"kind","","The type of this set. A set is either a normal union of …",29,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested …",30,null],[13,"BinaryOp","","A single binary operation (i.e., &&, -- or ~~).",30,null],[11,"union","","Build a set from a union.",30,[[["classsetunion",3]],["classset",4]]],[11,"span","","Return the span of this character class set.",30,[[],["span",3]]],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",31,null],[13,"Literal","","A single literal.",31,null],[13,"Range","","A range between two literals.",31,null],[13,"Ascii","","An ASCII character class, e.g., <code>[:alnum:]</code> or <code>[:punct:]</code>.",31,null],[13,"Unicode","","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.",31,null],[13,"Perl","","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero …",31,null],[13,"Union","","A union of items.",31,null],[11,"span","","Return the span of this character class set item.",31,[[],["span",3]]],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",32,null],[12,"start","","The start of this range.",32,null],[12,"end","","The end of this range.",32,null],[11,"is_valid","","Returns true if and only if this character class range is …",32,[[]]],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the <code>a-z0-9</code> …",33,null],[12,"items","","The sequence of items that make up this union.",33,null],[11,"push","","Push a new item in this union.",33,[[["classsetitem",4]]]],[11,"into_item","","Return this union as a character class set item.",33,[[],["classsetitem",4]]],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the <code>a-z--[h-p]</code> in …",34,null],[12,"kind","","The type of this set operation.",34,null],[12,"lhs","","The left hand side of the operation.",34,null],[12,"rhs","","The right hand side of the operation.",34,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., <code>\\\\pN&&[a-z]</code>.",35,null],[13,"Difference","","The difference of two sets, e.g., <code>\\\\pN--[0-9]</code>.",35,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric …",35,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",36,null],[12,"kind","","The assertion kind, e.g., <code>\\\\b</code> or <code>^</code>.",36,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","<code>^</code>",37,null],[13,"EndLine","","<code>$</code>",37,null],[13,"StartText","","<code>\\\\A</code>",37,null],[13,"EndText","","<code>\\\\z</code>",37,null],[13,"WordBoundary","","<code>\\\\b</code>",37,null],[13,"NotWordBoundary","","<code>\\\\B</code>",37,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",38,null],[12,"op","","The actual operation.",38,null],[12,"greedy","","Whether this operation was applied greedily or not.",38,null],[12,"ast","","The regular expression under repetition.",38,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like <code>+</code>, <code>*?</code>…",39,null],[12,"kind","","The type of operation.",39,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","<code>?</code>",40,null],[13,"ZeroOrMore","","<code>*</code>",40,null],[13,"OneOrMore","","<code>+</code>",40,null],[13,"Range","","<code>{m,n}</code>",40,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","<code>{m}</code>",41,null],[13,"AtLeast","","<code>{m,}</code>",41,null],[13,"Bounded","","<code>{m,n}</code>",41,null],[11,"is_valid","","Returns true if and only if this repetition range is …",41,[[]]],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",42,null],[12,"kind","","The kind of this group.",42,null],[12,"ast","","The regular expression in this group.",42,null],[11,"flags","","If this group is non-capturing, then this returns the …",42,[[],[["option",4],["flags",3]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",42,[[]]],[11,"capture_index","","Returns the capture index of this group, if this is a …",42,[[],["option",4]]],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","<code>(a)</code>",43,null],[13,"CaptureName","","<code>(?P<name>a)</code>",43,null],[13,"NonCapturing","","<code>(?:a)</code> and <code>(?i:a)</code>",43,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",44,null],[12,"name","","The capture name.",44,null],[12,"index","","The capture index.",44,null],[3,"SetFlags","","A group of flags that is not applied to a particular …",null,null],[12,"span","","The span of these flags, including the grouping …",45,null],[12,"flags","","The actual sequence of flags.",45,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",46,null],[12,"items","","A sequence of flag items. Each item is either a flag or a …",46,null],[11,"add_item","","Add the given item to this sequence of flags.",46,[[["flagsitem",3]],["option",4]]],[11,"flag_state","","Returns the state of the given flag in this set.",46,[[["flag",4]],["option",4]]],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",47,null],[12,"kind","","The kind of this item.",47,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in …",48,null],[13,"Flag","","A single flag in a group.",48,null],[11,"is_negation","","Returns true if and only if this item is a negation …",48,[[]]],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","<code>i</code>",49,null],[13,"MultiLine","","<code>m</code>",49,null],[13,"DotMatchesNewLine","","<code>s</code>",49,null],[13,"SwapGreed","","<code>U</code>",49,null],[13,"Unicode","","<code>u</code>",49,null],[13,"IgnoreWhitespace","","<code>x</code>",49,null],[0,"hir","regex_syntax","Defines a high-level intermediate representation for …",null,null],[0,"literal","regex_syntax::hir","Provides routines for extracting literal prefixes and …",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular …",null,null],[3,"Literal","","A single member of a set of literals extracted from a …",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",50,[[],["literals",3]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the …",50,[[["hir",3]],["literals",3]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the …",50,[[["hir",3]],["literals",3]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",50,[[]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",50,[[],["literals",3]]],[11,"limit_class","","Get the character class size limit for this set.",50,[[]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",50,[[],["literals",3]]],[11,"literals","","Returns the set of literals as a slice. Its order is …",50,[[]]],[11,"min_len","","Returns the length of the smallest literal.",50,[[],["option",4]]],[11,"all_complete","","Returns true if all members in this set are complete.",50,[[]]],[11,"any_complete","","Returns true if any member in this set is complete.",50,[[]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",50,[[]]],[11,"is_empty","","Returns true if this set is empty or if all of its …",50,[[]]],[11,"to_empty","","Returns a new empty set of literals using this set\'s …",50,[[],["literals",3]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this …",50,[[]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this …",50,[[]]],[11,"trim_suffix","","Returns a new set of literals with the given number of …",50,[[],[["option",4],["literals",3]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals …",50,[[],["literals",3]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals …",50,[[],["literals",3]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",50,[[["hir",3]]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",50,[[["hir",3]]]],[11,"union","","Unions this set with another set.",50,[[["literals",3]]]],[11,"cross_product","","Extends this set with another set.",50,[[["literals",3]]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",50,[[]]],[11,"add","","Adds the given literal to this set.",50,[[["literal",3]]]],[11,"add_char_class","","Extends each literal in this set with the character class …",50,[[["classunicode",3]]]],[11,"add_byte_class","","Extends each literal in this set with the byte class …",50,[[["classbytes",3]]]],[11,"cut","","Cuts every member of this set. When a member is cut, it …",50,[[]]],[11,"reverse","","Reverses all members in place.",50,[[]]],[11,"clear","","Clears this set of all members.",50,[[]]],[11,"new","","Returns a new complete literal with the bytes given.",51,[[["vec",3]],["literal",3]]],[11,"empty","","Returns a new complete empty literal.",51,[[],["literal",3]]],[11,"is_cut","","Returns true if this literal was \\\"cut.\\\"",51,[[]]],[11,"cut","","Cuts this literal.",51,[[]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for <code>Hir</code>.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression\'s high-level …",null,null],[11,"new","","Create a new printer.",52,[[],["printer",3]]],[11,"print","","Print the given <code>Ast</code> to the given writer. The writer must …",52,[[["hir",3],["write",8]],["result",6]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an <code>Ast</code> to an <code>Hir</code>.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[11,"new","","Create a new translator builder with a default c …",53,[[],["translatorbuilder",3]]],[11,"build","","Build a translator using the current configuration.",53,[[],["translator",3]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of …",53,[[],["translatorbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (<code>i</code>) by …",53,[[],["translatorbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag (<code>m</code>) by …",53,[[],["translatorbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag (<code>s</code>…",53,[[],["translatorbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag (<code>U</code>) by default.",53,[[],["translatorbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (<code>u</code>) by default.",53,[[],["translatorbuilder",3]]],[3,"Translator","","A translator maps abstract syntax to a high level …",null,null],[11,"new","","Create a new translator using the default configuration.",54,[[],["translator",3]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a …",54,[[["ast",4]],[["hir",3],["error",3],["result",4]]]],[5,"visit","regex_syntax::hir","Executes an implementation of <code>Visitor</code> in constant stack …",null,[[["hir",3],["visitor",8]],["result",4]]],[8,"Visitor","","A trait for visiting the high-level IR (HIR) in depth …",null,null],[16,"Output","","The result of visiting an HIR.",55,null],[16,"Err","","An error that visiting an HIR might return.",55,null],[10,"finish","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …",55,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the …",55,[[]]],[11,"visit_pre","","This method is called on an <code>Hir</code> before descending into …",55,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an <code>Hir</code> after descending all of …",55,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",55,[[],["result",4]]],[3,"CaseFoldError","","An error that occurs when Unicode-aware simple case …",null,null],[3,"Error","","An error that can occur while translating an <code>Ast</code> to a <code>Hir</code>.",null,null],[11,"kind","","Return the type of this error.",56,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",56,[[]]],[11,"span","","Return the span at which this error occurred.",56,[[],["span",3]]],[4,"ErrorKind","","The type of an error that occurred while building an <code>Hir</code>.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when …",57,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could …",57,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name …",57,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value …",57,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class (<code>\\\\w</code>…",57,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables …",57,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a …",57,null],[3,"Hir","","A high-level intermediate representation (HIR) for a …",null,null],[4,"HirKind","","The kind of an arbitrary <code>Hir</code> expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything, …",58,null],[13,"Literal","","A single literal character that matches exactly this …",58,null],[13,"Class","","A single character class that matches any of the …",58,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has …",58,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be …",58,null],[13,"Repetition","","A repetition operation applied to a child expression.",58,null],[13,"Group","","A possibly capturing group, which contains a child …",58,null],[13,"Concat","","A concatenation of expressions. A concatenation always …",58,null],[13,"Alternation","","An alternation of expressions. An alternation always has …",58,null],[11,"kind","","Returns a reference to the underlying HIR kind.",59,[[],["hirkind",4]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its …",59,[[],["hirkind",4]]],[11,"empty","","Returns an empty HIR expression.",59,[[],["hir",3]]],[11,"literal","","Creates a literal HIR expression.",59,[[["literal",4]],["hir",3]]],[11,"class","","Creates a class HIR expression.",59,[[["class",4]],["hir",3]]],[11,"anchor","","Creates an anchor assertion HIR expression.",59,[[["anchor",4]],["hir",3]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",59,[[["wordboundary",4]],["hir",3]]],[11,"repetition","","Creates a repetition HIR expression.",59,[[["repetition",3]],["hir",3]]],[11,"group","","Creates a group HIR expression.",59,[[["group",3]],["hir",3]]],[11,"concat","","Returns the concatenation of the given expressions.",59,[[["vec",3],["hir",3]],["hir",3]]],[11,"alternation","","Returns the alternation of the given expressions.",59,[[["vec",3],["hir",3]],["hir",3]]],[11,"dot","","Build an HIR expression for <code>.</code>.",59,[[],["hir",3]]],[11,"any","","Build an HIR expression for <code>(?s).</code>.",59,[[],["hir",3]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match …",59,[[]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is …",59,[[]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match …",59,[[]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match …",59,[[]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match …",59,[[]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match …",59,[[]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any …",59,[[]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any …",59,[[]]],[11,"is_match_empty","","Return true if and only if the empty string is part of …",59,[[]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal. …",59,[[]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple …",59,[[]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular …",58,[[]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including …",58,[[]]],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",60,null],[13,"Byte","","A single character represented by an arbitrary byte.",60,null],[11,"is_unicode","","Returns true if and only if this literal corresponds to a …",60,[[]]],[4,"Class","","The high-level intermediate representation of a character …",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",61,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one …",61,null],[11,"case_fold_simple","","Apply Unicode simple case folding to this character …",61,[[]]],[11,"negate","","Negate this character class in place.",61,[[]]],[11,"is_always_utf8","","Returns true if and only if this character class will …",61,[[]]],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[11,"new","","Create a new class from a sequence of ranges.",62,[[],["classunicode",3]]],[11,"empty","","Create a new class with no ranges.",62,[[],["classunicode",3]]],[11,"push","","Add a new range to this set.",62,[[["classunicoderange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",62,[[],["classunicodeiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",62,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all …",62,[[]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all …",62,[[],[["result",4],["casefolderror",3]]]],[11,"negate","","Negate this character class.",62,[[]]],[11,"union","","Union this character class with the given character …",62,[[["classunicode",3]]]],[11,"intersect","","Intersect this character class with the given character …",62,[[["classunicode",3]]]],[11,"difference","","Subtract the given character class from this character …",62,[[["classunicode",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character …",62,[[["classunicode",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will …",62,[[]]],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode …",null,null],[11,"new","","Create a new Unicode scalar value range for a character …",63,[[],["classunicoderange",3]]],[11,"start","","Return the start of this range.",63,[[]]],[11,"end","","Return the end of this range.",63,[[]]],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where …",null,null],[11,"new","","Create a new class from a sequence of ranges.",64,[[],["classbytes",3]]],[11,"empty","","Create a new class with no ranges.",64,[[],["classbytes",3]]],[11,"push","","Add a new range to this set.",64,[[["classbytesrange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",64,[[],["classbytesiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",64,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all …",64,[[]]],[11,"negate","","Negate this byte class.",64,[[]]],[11,"union","","Union this byte class with the given byte class, in place.",64,[[["classbytes",3]]]],[11,"intersect","","Intersect this byte class with the given byte class, in …",64,[[["classbytes",3]]]],[11,"difference","","Subtract the given byte class from this byte class, in …",64,[[["classbytes",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte …",64,[[["classbytes",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will …",64,[[]]],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary …",null,null],[11,"new","","Create a new byte range for a character class.",65,[[],["classbytesrange",3]]],[11,"start","","Return the start of this range.",65,[[]]],[11,"end","","Return the end of this range.",65,[[]]],[4,"Anchor","","The high-level intermediate representation for an anchor …",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text. …",66,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically, …",66,null],[13,"StartText","","Match the beginning of text. Specifically, this matches …",66,null],[13,"EndText","","Match the end of text. Specifically, this matches at the …",66,null],[4,"WordBoundary","","The high-level intermediate representation for a …",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this …",67,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",67,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches …",67,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",67,null],[11,"is_negated","","Returns true if and only if this word boundary assertion …",67,[[]]],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then …",68,null],[12,"hir","","The expression inside the capturing group, which may be …",68,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",69,null],[13,"CaptureName","","A named capturing group.",69,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",70,null],[12,"index","","The capture index of the group.",70,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",69,null],[3,"Repetition","","The high-level intermediate representation of a …",null,null],[12,"kind","","The kind of this repetition operator.",71,null],[12,"greedy","","Whether this repetition operator is greedy or not. A …",71,null],[12,"hir","","The expression being repeated.",71,null],[11,"is_match_empty","","Returns true if and only if this repetition operator …",71,[[]]],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",72,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",72,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",72,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",72,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",73,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",73,null],[13,"Bounded","","Matches a sub-expression at least <code>m</code> times and at most <code>n</code> …",73,null],[0,"utf8","regex_syntax","Converts ranges of Unicode scalar values to equivalent …",null,null],[4,"Utf8Sequence","regex_syntax::utf8","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",74,null],[13,"Two","","Two successive byte ranges.",74,null],[13,"Three","","Three successive byte ranges.",74,null],[13,"Four","","Four successive byte ranges.",74,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",74,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",74,[[]]],[11,"reverse","","Reverses the ranges in this sequence.",74,[[]]],[11,"matches","","Returns true if and only if a prefix of <code>bytes</code> matches …",74,[[]]],[3,"Utf8Range","","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",75,null],[12,"end","","End of byte range (inclusive).",75,null],[11,"matches","","Returns true if and only if the given byte is in this …",75,[[]]],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the …",76,[[]]],[4,"Error","regex_syntax","This error type encompasses any error that can be …",null,null],[13,"Parse","","An error that occurred while translating concrete syntax …",77,null],[13,"Translate","","An error that occurred while translating abstract syntax …",77,null],[6,"Result","","A type alias for dealing with errors returned by this …",null,null],[3,"Parser","","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware <code>\\\\w</code> class is …",null,null],[5,"escape","","Escapes all regular expression meta characters in <code>text</code>.",null,[[],["string",3]]],[5,"escape_into","","Escapes all meta characters in <code>text</code> and writes the result …",null,[[["string",3]]]],[5,"is_meta_character","","Returns true if the give character has significance in a …",null,[[]]],[5,"is_word_character","","Returns true if and only if the given character is a …",null,[[]]],[5,"try_is_word_character","","Returns true if and only if the given character is a …",null,[[],[["unicodeworderror",3],["result",4]]]],[5,"is_word_byte","","Returns true if and only if the given character is an …",null,[[]]],[11,"from","regex_syntax::ast::parse","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex_syntax::ast::print","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","regex_syntax::ast","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","regex_syntax","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","regex_syntax::hir::literal","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","regex_syntax::hir::print","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","regex_syntax::hir::translate","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","regex_syntax::hir","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","regex_syntax","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","regex_syntax::utf8","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"drop","regex_syntax::ast","",13,[[]]],[11,"drop","","",30,[[]]],[11,"drop","regex_syntax::hir","",59,[[]]],[11,"as_ref","regex_syntax::hir::literal","",51,[[]]],[11,"from","regex_syntax","",77,[[["error",3]],["error",4]]],[11,"from","","",77,[[["error",3]],["error",4]]],[11,"next","regex_syntax::hir","",79,[[],[["option",4],["classunicoderange",3]]]],[11,"next","","",80,[[],[["option",4],["classbytesrange",3]]]],[11,"next","regex_syntax::utf8","",76,[[],["option",4]]],[11,"clone","regex_syntax::ast::parse","",0,[[],["parserbuilder",3]]],[11,"clone","","",1,[[],["parser",3]]],[11,"clone","regex_syntax::ast","",4,[[],["error",3]]],[11,"clone","","",5,[[],["errorkind",4]]],[11,"clone","","",9,[[],["span",3]]],[11,"clone","","",10,[[],["position",3]]],[11,"clone","","",11,[[],["withcomments",3]]],[11,"clone","","",12,[[],["comment",3]]],[11,"clone","","",13,[[],["ast",4]]],[11,"clone","","",14,[[],["alternation",3]]],[11,"clone","","",15,[[],["concat",3]]],[11,"clone","","",16,[[],["literal",3]]],[11,"clone","","",17,[[],["literalkind",4]]],[11,"clone","","",18,[[],["specialliteralkind",4]]],[11,"clone","","",19,[[],["hexliteralkind",4]]],[11,"clone","","",20,[[],["class",4]]],[11,"clone","","",21,[[],["classperl",3]]],[11,"clone","","",22,[[],["classperlkind",4]]],[11,"clone","","",23,[[],["classascii",3]]],[11,"clone","","",24,[[],["classasciikind",4]]],[11,"clone","","",25,[[],["classunicode",3]]],[11,"clone","","",26,[[],["classunicodekind",4]]],[11,"clone","","",28,[[],["classunicodeopkind",4]]],[11,"clone","","",29,[[],["classbracketed",3]]],[11,"clone","","",30,[[],["classset",4]]],[11,"clone","","",31,[[],["classsetitem",4]]],[11,"clone","","",32,[[],["classsetrange",3]]],[11,"clone","","",33,[[],["classsetunion",3]]],[11,"clone","","",34,[[],["classsetbinaryop",3]]],[11,"clone","","",35,[[],["classsetbinaryopkind",4]]],[11,"clone","","",36,[[],["assertion",3]]],[11,"clone","","",37,[[],["assertionkind",4]]],[11,"clone","","",38,[[],["repetition",3]]],[11,"clone","","",39,[[],["repetitionop",3]]],[11,"clone","","",40,[[],["repetitionkind",4]]],[11,"clone","","",41,[[],["repetitionrange",4]]],[11,"clone","","",42,[[],["group",3]]],[11,"clone","","",43,[[],["groupkind",4]]],[11,"clone","","",44,[[],["capturename",3]]],[11,"clone","","",45,[[],["setflags",3]]],[11,"clone","","",46,[[],["flags",3]]],[11,"clone","","",47,[[],["flagsitem",3]]],[11,"clone","","",48,[[],["flagsitemkind",4]]],[11,"clone","","",49,[[],["flag",4]]],[11,"clone","regex_syntax","",77,[[],["error",4]]],[11,"clone","regex_syntax::hir::literal","",50,[[],["literals",3]]],[11,"clone","","",51,[[],["literal",3]]],[11,"clone","regex_syntax::hir::translate","",53,[[],["translatorbuilder",3]]],[11,"clone","","",54,[[],["translator",3]]],[11,"clone","regex_syntax::hir","",56,[[],["error",3]]],[11,"clone","","",57,[[],["errorkind",4]]],[11,"clone","","",59,[[],["hir",3]]],[11,"clone","","",58,[[],["hirkind",4]]],[11,"clone","","",60,[[],["literal",4]]],[11,"clone","","",61,[[],["class",4]]],[11,"clone","","",62,[[],["classunicode",3]]],[11,"clone","","",63,[[],["classunicoderange",3]]],[11,"clone","","",64,[[],["classbytes",3]]],[11,"clone","","",65,[[],["classbytesrange",3]]],[11,"clone","","",66,[[],["anchor",4]]],[11,"clone","","",67,[[],["wordboundary",4]]],[11,"clone","","",68,[[],["group",3]]],[11,"clone","","",69,[[],["groupkind",4]]],[11,"clone","","",71,[[],["repetition",3]]],[11,"clone","","",72,[[],["repetitionkind",4]]],[11,"clone","","",73,[[],["repetitionrange",4]]],[11,"clone","regex_syntax","",81,[[],["parserbuilder",3]]],[11,"clone","","",82,[[],["parser",3]]],[11,"clone","regex_syntax::utf8","",74,[[],["utf8sequence",4]]],[11,"clone","","",75,[[],["utf8range",3]]],[11,"default","regex_syntax::ast::parse","",0,[[],["parserbuilder",3]]],[11,"default","regex_syntax::hir::translate","",53,[[],["translatorbuilder",3]]],[11,"default","regex_syntax::hir","",63,[[],["classunicoderange",3]]],[11,"default","","",65,[[],["classbytesrange",3]]],[11,"default","regex_syntax","",81,[[],["parserbuilder",3]]],[11,"cmp","regex_syntax::ast","",9,[[["span",3]],["ordering",4]]],[11,"cmp","","",10,[[["position",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir::literal","",51,[[["literal",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir","",63,[[["classunicoderange",3]],["ordering",4]]],[11,"cmp","","",65,[[["classbytesrange",3]],["ordering",4]]],[11,"cmp","regex_syntax::utf8","",74,[[["utf8sequence",4]],["ordering",4]]],[11,"cmp","","",75,[[["utf8range",3]],["ordering",4]]],[11,"eq","regex_syntax::ast","",4,[[["error",3]]]],[11,"ne","","",4,[[["error",3]]]],[11,"eq","","",5,[[["errorkind",4]]]],[11,"ne","","",5,[[["errorkind",4]]]],[11,"eq","","",9,[[["span",3]]]],[11,"ne","","",9,[[["span",3]]]],[11,"eq","","",10,[[["position",3]]]],[11,"ne","","",10,[[["position",3]]]],[11,"eq","","",11,[[["withcomments",3]]]],[11,"ne","","",11,[[["withcomments",3]]]],[11,"eq","","",12,[[["comment",3]]]],[11,"ne","","",12,[[["comment",3]]]],[11,"eq","","",13,[[["ast",4]]]],[11,"ne","","",13,[[["ast",4]]]],[11,"eq","","",14,[[["alternation",3]]]],[11,"ne","","",14,[[["alternation",3]]]],[11,"eq","","",15,[[["concat",3]]]],[11,"ne","","",15,[[["concat",3]]]],[11,"eq","","",16,[[["literal",3]]]],[11,"ne","","",16,[[["literal",3]]]],[11,"eq","","",17,[[["literalkind",4]]]],[11,"ne","","",17,[[["literalkind",4]]]],[11,"eq","","",18,[[["specialliteralkind",4]]]],[11,"eq","","",19,[[["hexliteralkind",4]]]],[11,"eq","","",20,[[["class",4]]]],[11,"ne","","",20,[[["class",4]]]],[11,"eq","","",21,[[["classperl",3]]]],[11,"ne","","",21,[[["classperl",3]]]],[11,"eq","","",22,[[["classperlkind",4]]]],[11,"eq","","",23,[[["classascii",3]]]],[11,"ne","","",23,[[["classascii",3]]]],[11,"eq","","",24,[[["classasciikind",4]]]],[11,"eq","","",25,[[["classunicode",3]]]],[11,"ne","","",25,[[["classunicode",3]]]],[11,"eq","","",26,[[["classunicodekind",4]]]],[11,"ne","","",26,[[["classunicodekind",4]]]],[11,"eq","","",28,[[["classunicodeopkind",4]]]],[11,"eq","","",29,[[["classbracketed",3]]]],[11,"ne","","",29,[[["classbracketed",3]]]],[11,"eq","","",30,[[["classset",4]]]],[11,"ne","","",30,[[["classset",4]]]],[11,"eq","","",31,[[["classsetitem",4]]]],[11,"ne","","",31,[[["classsetitem",4]]]],[11,"eq","","",32,[[["classsetrange",3]]]],[11,"ne","","",32,[[["classsetrange",3]]]],[11,"eq","","",33,[[["classsetunion",3]]]],[11,"ne","","",33,[[["classsetunion",3]]]],[11,"eq","","",34,[[["classsetbinaryop",3]]]],[11,"ne","","",34,[[["classsetbinaryop",3]]]],[11,"eq","","",35,[[["classsetbinaryopkind",4]]]],[11,"eq","","",36,[[["assertion",3]]]],[11,"ne","","",36,[[["assertion",3]]]],[11,"eq","","",37,[[["assertionkind",4]]]],[11,"eq","","",38,[[["repetition",3]]]],[11,"ne","","",38,[[["repetition",3]]]],[11,"eq","","",39,[[["repetitionop",3]]]],[11,"ne","","",39,[[["repetitionop",3]]]],[11,"eq","","",40,[[["repetitionkind",4]]]],[11,"ne","","",40,[[["repetitionkind",4]]]],[11,"eq","","",41,[[["repetitionrange",4]]]],[11,"ne","","",41,[[["repetitionrange",4]]]],[11,"eq","","",42,[[["group",3]]]],[11,"ne","","",42,[[["group",3]]]],[11,"eq","","",43,[[["groupkind",4]]]],[11,"ne","","",43,[[["groupkind",4]]]],[11,"eq","","",44,[[["capturename",3]]]],[11,"ne","","",44,[[["capturename",3]]]],[11,"eq","","",45,[[["setflags",3]]]],[11,"ne","","",45,[[["setflags",3]]]],[11,"eq","","",46,[[["flags",3]]]],[11,"ne","","",46,[[["flags",3]]]],[11,"eq","","",47,[[["flagsitem",3]]]],[11,"ne","","",47,[[["flagsitem",3]]]],[11,"eq","","",48,[[["flagsitemkind",4]]]],[11,"ne","","",48,[[["flagsitemkind",4]]]],[11,"eq","","",49,[[["flag",4]]]],[11,"eq","regex_syntax","",77,[[["error",4]]]],[11,"ne","","",77,[[["error",4]]]],[11,"eq","regex_syntax::hir::literal","",50,[[["literals",3]]]],[11,"ne","","",50,[[["literals",3]]]],[11,"eq","","",51,[[["literal",3]]]],[11,"eq","regex_syntax::hir","",56,[[["error",3]]]],[11,"ne","","",56,[[["error",3]]]],[11,"eq","","",57,[[["errorkind",4]]]],[11,"eq","","",59,[[["hir",3]]]],[11,"ne","","",59,[[["hir",3]]]],[11,"eq","","",58,[[["hirkind",4]]]],[11,"ne","","",58,[[["hirkind",4]]]],[11,"eq","","",60,[[["literal",4]]]],[11,"ne","","",60,[[["literal",4]]]],[11,"eq","","",61,[[["class",4]]]],[11,"ne","","",61,[[["class",4]]]],[11,"eq","","",62,[[["classunicode",3]]]],[11,"ne","","",62,[[["classunicode",3]]]],[11,"eq","","",63,[[["classunicoderange",3]]]],[11,"ne","","",63,[[["classunicoderange",3]]]],[11,"eq","","",64,[[["classbytes",3]]]],[11,"ne","","",64,[[["classbytes",3]]]],[11,"eq","","",65,[[["classbytesrange",3]]]],[11,"ne","","",65,[[["classbytesrange",3]]]],[11,"eq","","",66,[[["anchor",4]]]],[11,"eq","","",67,[[["wordboundary",4]]]],[11,"eq","","",68,[[["group",3]]]],[11,"ne","","",68,[[["group",3]]]],[11,"eq","","",69,[[["groupkind",4]]]],[11,"ne","","",69,[[["groupkind",4]]]],[11,"eq","","",71,[[["repetition",3]]]],[11,"ne","","",71,[[["repetition",3]]]],[11,"eq","","",72,[[["repetitionkind",4]]]],[11,"ne","","",72,[[["repetitionkind",4]]]],[11,"eq","","",73,[[["repetitionrange",4]]]],[11,"ne","","",73,[[["repetitionrange",4]]]],[11,"eq","regex_syntax::utf8","",74,[[["utf8sequence",4]]]],[11,"ne","","",74,[[["utf8sequence",4]]]],[11,"eq","","",75,[[["utf8range",3]]]],[11,"ne","","",75,[[["utf8range",3]]]],[11,"partial_cmp","regex_syntax::ast","",9,[[["span",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",10,[[["position",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","regex_syntax::hir::literal","",51,[[["literal",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir","",63,[[["classunicoderange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["classunicoderange",3]]]],[11,"le","","",63,[[["classunicoderange",3]]]],[11,"gt","","",63,[[["classunicoderange",3]]]],[11,"ge","","",63,[[["classunicoderange",3]]]],[11,"partial_cmp","","",65,[[["classbytesrange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",65,[[["classbytesrange",3]]]],[11,"le","","",65,[[["classbytesrange",3]]]],[11,"gt","","",65,[[["classbytesrange",3]]]],[11,"ge","","",65,[[["classbytesrange",3]]]],[11,"partial_cmp","regex_syntax::utf8","",74,[[["utf8sequence",4]],[["option",4],["ordering",4]]]],[11,"lt","","",74,[[["utf8sequence",4]]]],[11,"le","","",74,[[["utf8sequence",4]]]],[11,"gt","","",74,[[["utf8sequence",4]]]],[11,"ge","","",74,[[["utf8sequence",4]]]],[11,"partial_cmp","","",75,[[["utf8range",3]],[["option",4],["ordering",4]]]],[11,"lt","","",75,[[["utf8range",3]]]],[11,"le","","",75,[[["utf8range",3]]]],[11,"gt","","",75,[[["utf8range",3]]]],[11,"ge","","",75,[[["utf8range",3]]]],[11,"deref","regex_syntax::hir::literal","",51,[[],["vec",3]]],[11,"deref_mut","","",51,[[],["vec",3]]],[11,"fmt","regex_syntax::ast::parse","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast::print","",2,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::literal","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::print","",52,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::translate","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",78,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",83,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::utf8","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",83,[[["formatter",3]],["result",6]]],[11,"description","regex_syntax::ast","",4,[[]]],[11,"description","regex_syntax","",77,[[]]],[11,"description","regex_syntax::hir","",56,[[]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the …",3,[[]]],[11,"visit_pre","","This method is called on an <code>Ast</code> before descending into …",3,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an <code>Ast</code> after descending all of …",3,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",3,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every <code>ClassSetItem</code> before …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every <code>ClassSetItem</code> after …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every <code>ClassSetBinaryOp</code> before …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every <code>ClassSetBinaryOp</code> after …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the …",55,[[]]],[11,"visit_pre","","This method is called on an <code>Hir</code> before descending into …",55,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an <code>Hir</code> after descending all of …",55,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",55,[[],["result",4]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",81,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given …",81,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",81,[[],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",81,[[],["parserbuilder",3]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of …",81,[[],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",81,[[],["parserbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",81,[[],["parserbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",81,[[],["parserbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the \\\"dot matches any character\\\" flag by …",81,[[],["parserbuilder",3]]],[11,"swap_greed","","Enable or disable the \\\"swap greed\\\" flag by default.",81,[[],["parserbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (<code>u</code>) by default.",81,[[],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",82,[[],["parser",3]]],[11,"parse","","Parse the regular expression into a high level …",82,[[],[["hir",3],["result",6]]]]],"p":[[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[4,"Ast"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[3,"ClassPerl"],[4,"ClassPerlKind"],[3,"ClassAscii"],[4,"ClassAsciiKind"],[3,"ClassUnicode"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[3,"ClassBracketed"],[4,"ClassSet"],[4,"ClassSetItem"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[4,"ClassSetBinaryOpKind"],[3,"Assertion"],[4,"AssertionKind"],[3,"Repetition"],[3,"RepetitionOp"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Group"],[4,"GroupKind"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"FlagsItemKind"],[4,"Flag"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[4,"ErrorKind"],[4,"HirKind"],[3,"Hir"],[4,"Literal"],[4,"Class"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[4,"Anchor"],[4,"WordBoundary"],[3,"Group"],[4,"GroupKind"],[13,"CaptureName"],[3,"Repetition"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"Utf8Sequence"],[3,"Utf8Range"],[3,"Utf8Sequences"],[4,"Error"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"],[3,"ParserBuilder"],[3,"Parser"],[3,"UnicodeWordError"]]},\
"remove_dir_all":{"doc":"Reliably remove a directory and all of its children.","i":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its …",null,[[],[["error",3],["result",4]]]]],"p":[]},\
"rspirv":{"doc":"Library APIs for SPIR-V module processing functionalities.","i":[[0,"binary","rspirv","Module for SPIR-V binary processing.",null,null],[4,"DecodeError","rspirv::binary","Decoder Error",null,null],[13,"StreamExpected","","",0,null],[13,"LimitReached","","",0,null],[13,"ImageOperandsUnknown","","",0,null],[13,"FPFastMathModeUnknown","","",0,null],[13,"SelectionControlUnknown","","",0,null],[13,"LoopControlUnknown","","",0,null],[13,"FunctionControlUnknown","","",0,null],[13,"MemorySemanticsUnknown","","",0,null],[13,"MemoryAccessUnknown","","",0,null],[13,"KernelProfilingInfoUnknown","","",0,null],[13,"RayFlagsUnknown","","",0,null],[13,"SourceLanguageUnknown","","",0,null],[13,"ExecutionModelUnknown","","",0,null],[13,"AddressingModelUnknown","","",0,null],[13,"MemoryModelUnknown","","",0,null],[13,"ExecutionModeUnknown","","",0,null],[13,"StorageClassUnknown","","",0,null],[13,"DimUnknown","","",0,null],[13,"SamplerAddressingModeUnknown","","",0,null],[13,"SamplerFilterModeUnknown","","",0,null],[13,"ImageFormatUnknown","","",0,null],[13,"ImageChannelOrderUnknown","","",0,null],[13,"ImageChannelDataTypeUnknown","","",0,null],[13,"FPRoundingModeUnknown","","",0,null],[13,"LinkageTypeUnknown","","",0,null],[13,"AccessQualifierUnknown","","",0,null],[13,"FunctionParameterAttributeUnknown","","",0,null],[13,"DecorationUnknown","","",0,null],[13,"BuiltInUnknown","","",0,null],[13,"ScopeUnknown","","",0,null],[13,"GroupOperationUnknown","","",0,null],[13,"KernelEnqueueFlagsUnknown","","",0,null],[13,"CapabilityUnknown","","",0,null],[13,"RayQueryIntersectionUnknown","","",0,null],[13,"RayQueryCommittedIntersectionTypeUnknown","","",0,null],[13,"RayQueryCandidateIntersectionTypeUnknown","","",0,null],[13,"DecodeStringFailed","","Failed to decode a string.",0,null],[3,"Decoder","","The SPIR-V binary decoder.",null,null],[4,"ParseAction","","Orders consumer sent to the parser after each consuming …",null,null],[13,"Continue","","Continue the parsing",1,null],[13,"Stop","","Normally stop the parsing",1,null],[13,"Error","","Error out with the given error",1,null],[6,"ParseResult","","",null,null],[4,"ParseState","","Parser State.",null,null],[13,"Complete","","Parsing completed",2,null],[13,"ConsumerStopRequested","","Consumer requested to stop parse",2,null],[13,"ConsumerError","","Consumer errored out with the given error",2,null],[13,"HeaderIncomplete","","Incomplete module header",2,null],[13,"HeaderIncorrect","","Incorrect module header",2,null],[13,"EndiannessUnsupported","","Unsupported endianness",2,null],[13,"WordCountZero","","Zero instruction word count at (byte offset, inst number)",2,null],[13,"OpcodeUnknown","","Unknown opcode at (byte offset, inst number, opcode)",2,null],[13,"OperandExpected","","Expected more operands (byte offset, inst number)",2,null],[13,"OperandExceeded","","found redundant operands (byte offset, inst number)",2,null],[13,"OperandError","","Errored out when decoding operand with the given error",2,null],[13,"TypeUnsupported","","Unsupported type (byte offset, inst number)",2,null],[13,"SpecConstantOpIntegerIncorrect","","Incorrect SpecConstantOp Integer (byte offset, inst …",2,null],[5,"parse_bytes","","Parses the given <code>binary</code> and consumes the module using the …",null,[[["consumer",8]],["result",6]]],[5,"parse_words","","Parses the given <code>binary</code> and consumes the module using the …",null,[[["consumer",8]],["result",6]]],[8,"Consumer","","The binary consumer trait.",null,null],[10,"initialize","","Intialize the consumer.",3,[[],["action",4]]],[10,"finalize","","Finalize the consumer.",3,[[],["action",4]]],[10,"consume_header","","Consume the module header.",3,[[["moduleheader",3]],["action",4]]],[10,"consume_instruction","","Consume the given instruction.",3,[[["instruction",3]],["action",4]]],[3,"Parser","","The SPIR-V binary parser.",null,null],[8,"Assemble","","Trait for assembling functionalities.",null,null],[10,"assemble_into","","Assembles the current object into the <code>result</code> vector, …",4,[[["vec",3]]]],[11,"assemble","","Assembles the current object and returns the binary code. …",4,[[],["vec",3]]],[8,"Disassemble","","Trait for disassembling functionalities.",null,null],[10,"disassemble","","Disassembles the current object and returns the assembly …",5,[[],["string",3]]],[0,"dr","rspirv","Data representation of various SPIR-V language constructs.",null,null],[3,"Builder","rspirv::dr","The data representation builder.",null,null],[4,"InsertPoint","","",null,null],[13,"Begin","","",6,null],[13,"End","","",6,null],[13,"FromBegin","","",6,null],[13,"FromEnd","","",6,null],[3,"Block","","Data representation of a SPIR-V block.",null,null],[12,"label","","The label starting this block.",7,null],[12,"instructions","","Instructions in this block.",7,null],[3,"Function","","Data representation of a SPIR-V function.",null,null],[12,"def","","First (defining) instruction in this function.",8,null],[12,"end","","Last (ending) instruction in this function.",8,null],[12,"parameters","","Function parameters.",8,null],[12,"blocks","","Blocks in this function.",8,null],[3,"Instruction","","Data representation of a SPIR-V instruction.",null,null],[12,"class","","The class (grammar specification) of this instruction.",9,null],[12,"result_type","","Result type id.",9,null],[12,"result_id","","Result id.",9,null],[12,"operands","","Operands.",9,null],[3,"Module","","Data representation of a SPIR-V module.",null,null],[12,"header","","The module header.",10,null],[12,"capabilities","","All OpCapability instructions.",10,null],[12,"extensions","","All OpExtension instructions.",10,null],[12,"ext_inst_imports","","All OpExtInstImport instructions.",10,null],[12,"memory_model","","The OpMemoryModel instruction.",10,null],[12,"entry_points","","All entry point declarations, using OpEntryPoint.",10,null],[12,"execution_modes","","All execution mode declarations, using OpExecutionMode.",10,null],[12,"debugs","","All non-location debug instructions.",10,null],[12,"annotations","","All annotation instructions.",10,null],[12,"types_global_values","","All types, constants, and global variables.",10,null],[12,"functions","","All functions.",10,null],[3,"ModuleHeader","","Data representation of a SPIR-V module header.",null,null],[12,"magic_number","","",11,null],[12,"version","","",11,null],[12,"generator","","",11,null],[12,"bound","","",11,null],[12,"reserved_word","","",11,null],[4,"Operand","","Data representation of a SPIR-V operand.",null,null],[13,"ImageOperands","","",12,null],[13,"FPFastMathMode","","",12,null],[13,"SelectionControl","","",12,null],[13,"LoopControl","","",12,null],[13,"FunctionControl","","",12,null],[13,"MemorySemantics","","",12,null],[13,"MemoryAccess","","",12,null],[13,"KernelProfilingInfo","","",12,null],[13,"RayFlags","","",12,null],[13,"SourceLanguage","","",12,null],[13,"ExecutionModel","","",12,null],[13,"AddressingModel","","",12,null],[13,"MemoryModel","","",12,null],[13,"ExecutionMode","","",12,null],[13,"StorageClass","","",12,null],[13,"Dim","","",12,null],[13,"SamplerAddressingMode","","",12,null],[13,"SamplerFilterMode","","",12,null],[13,"ImageFormat","","",12,null],[13,"ImageChannelOrder","","",12,null],[13,"ImageChannelDataType","","",12,null],[13,"FPRoundingMode","","",12,null],[13,"LinkageType","","",12,null],[13,"AccessQualifier","","",12,null],[13,"FunctionParameterAttribute","","",12,null],[13,"Decoration","","",12,null],[13,"BuiltIn","","",12,null],[13,"Scope","","",12,null],[13,"GroupOperation","","",12,null],[13,"KernelEnqueueFlags","","",12,null],[13,"Capability","","",12,null],[13,"RayQueryIntersection","","",12,null],[13,"RayQueryCommittedIntersectionType","","",12,null],[13,"RayQueryCandidateIntersectionType","","",12,null],[13,"IdMemorySemantics","","",12,null],[13,"IdScope","","",12,null],[13,"IdRef","","",12,null],[13,"LiteralInt32","","",12,null],[13,"LiteralInt64","","",12,null],[13,"LiteralFloat32","","",12,null],[13,"LiteralFloat64","","",12,null],[13,"LiteralExtInstInteger","","",12,null],[13,"LiteralSpecConstantOpInteger","","",12,null],[13,"LiteralString","","",12,null],[5,"load_bytes","","Loads the SPIR-V <code>binary</code> into memory and returns a <code>Module</code>.",null,[[],[["module",3],["parseresult",6]]]],[5,"load_words","","Loads the SPIR-V <code>binary</code> into memory and returns a <code>Module</code>.",null,[[],[["module",3],["parseresult",6]]]],[4,"Error","","Data representation loading errors.",null,null],[13,"NestedFunction","","",13,null],[13,"UnclosedFunction","","",13,null],[13,"MismatchedFunctionEnd","","",13,null],[13,"DetachedFunctionParameter","","",13,null],[13,"DetachedBlock","","",13,null],[13,"NestedBlock","","",13,null],[13,"UnclosedBlock","","",13,null],[13,"MismatchedTerminator","","",13,null],[13,"DetachedInstruction","","",13,null],[13,"EmptyInstructionList","","",13,null],[13,"WrongOpCapabilityOperand","","",13,null],[13,"WrongOpExtensionOperand","","",13,null],[13,"WrongOpExtInstImportOperand","","",13,null],[13,"WrongOpMemoryModelOperand","","",13,null],[13,"WrongOpNameOperand","","",13,null],[13,"FunctionNotFound","","",13,null],[13,"BlockNotFound","","",13,null],[3,"Loader","","The data representation loader.",null,null],[0,"grammar","rspirv","The module containing the whole SPIR-V syntax grammar.",null,null],[0,"reflect","rspirv::grammar","Reflect functions for SPIR-V instructions.",null,null],[5,"is_location_debug","rspirv::grammar::reflect","Returns true if the given opcode is for a location debug …",null,[[["op",4]]]],[5,"is_nonlocation_debug","","Returns true if the given opcode is for a non-location …",null,[[["op",4]]]],[5,"is_debug","","Returns true if the given opcode is for a debug …",null,[[["op",4]]]],[5,"is_annotation","","Returns true if the given opcode is for an annotation …",null,[[["op",4]]]],[5,"is_type","","Returns true if the given opcode is for a type-declaring …",null,[[["op",4]]]],[5,"is_constant","","Returns true if the given opcode is for a …",null,[[["op",4]]]],[5,"is_variable","","Returns true if the given opcode is for a …",null,[[["op",4]]]],[5,"is_terminator","","Returns true if the given opcode is for a terminator …",null,[[["op",4]]]],[3,"CoreInstructionTable","rspirv::grammar","The table for all SPIR-V core instructions.",null,null],[3,"GlslStd450InstructionTable","","The table for all <code>GLSLstd450</code> extended instructions.",null,null],[3,"OpenCLStd100InstructionTable","","The table for all <code>OpenCLstd100</code> extended instructions.",null,null],[3,"ExtendedInstruction","","Grammar for an extended instruction.",null,null],[12,"opname","","OpName.",14,null],[12,"opcode","","Opcode.",14,null],[12,"capabilities","","Capabilities required for this instruction.",14,null],[12,"operands","","Logical operands for this instruction.",14,null],[3,"Instruction","","Grammar for a SPIR-V instruction.",null,null],[12,"opname","","Opname.",15,null],[12,"opcode","","Opcode.",15,null],[12,"capabilities","","Capabilities required for this instruction.",15,null],[12,"operands","","Logical operands for this instruction.",15,null],[3,"LogicalOperand","","Grammar for a SPIR-V logical operand.",null,null],[12,"kind","","The kind of this logical operand.",16,null],[12,"quantifier","","The repeat specification for this logical operand.",16,null],[4,"OperandKind","","All operand kinds in the SPIR-V grammar.",null,null],[13,"ImageOperands","","",17,null],[13,"FPFastMathMode","","",17,null],[13,"SelectionControl","","",17,null],[13,"LoopControl","","",17,null],[13,"FunctionControl","","",17,null],[13,"MemorySemantics","","",17,null],[13,"MemoryAccess","","",17,null],[13,"KernelProfilingInfo","","",17,null],[13,"RayFlags","","",17,null],[13,"SourceLanguage","","",17,null],[13,"ExecutionModel","","",17,null],[13,"AddressingModel","","",17,null],[13,"MemoryModel","","",17,null],[13,"ExecutionMode","","",17,null],[13,"StorageClass","","",17,null],[13,"Dim","","",17,null],[13,"SamplerAddressingMode","","",17,null],[13,"SamplerFilterMode","","",17,null],[13,"ImageFormat","","",17,null],[13,"ImageChannelOrder","","",17,null],[13,"ImageChannelDataType","","",17,null],[13,"FPRoundingMode","","",17,null],[13,"LinkageType","","",17,null],[13,"AccessQualifier","","",17,null],[13,"FunctionParameterAttribute","","",17,null],[13,"Decoration","","",17,null],[13,"BuiltIn","","",17,null],[13,"Scope","","",17,null],[13,"GroupOperation","","",17,null],[13,"KernelEnqueueFlags","","",17,null],[13,"Capability","","",17,null],[13,"RayQueryIntersection","","",17,null],[13,"RayQueryCommittedIntersectionType","","",17,null],[13,"RayQueryCandidateIntersectionType","","",17,null],[13,"IdResultType","","",17,null],[13,"IdResult","","",17,null],[13,"IdMemorySemantics","","",17,null],[13,"IdScope","","",17,null],[13,"IdRef","","",17,null],[13,"LiteralInteger","","",17,null],[13,"LiteralString","","",17,null],[13,"LiteralContextDependentNumber","","",17,null],[13,"LiteralExtInstInteger","","",17,null],[13,"LiteralSpecConstantOpInteger","","",17,null],[13,"PairLiteralIntegerIdRef","","",17,null],[13,"PairIdRefLiteralInteger","","",17,null],[13,"PairIdRefIdRef","","",17,null],[4,"OperandQuantifier","","The repeat specification for a SPIR-V logical operand.",null,null],[13,"One","","This operand appears exactly one time.",18,null],[13,"ZeroOrOne","","This operand can appear zero or one time.",18,null],[13,"ZeroOrMore","","This operand can appear zero or more times.",18,null],[0,"lift","rspirv","Infrastructure of lifting the data representation (DR) …",null,null],[3,"LiftContext","rspirv::lift","",null,null],[11,"lift_branch","","",19,[[["instruction",3]],[["branch",4],["result",4],["instructionerror",4]]]],[11,"lift_terminator","","",19,[[["instruction",3]],[["terminator",4],["result",4],["instructionerror",4]]]],[11,"lift_op","","",19,[[["instruction",3]],[["instructionerror",4],["op",4],["result",4]]]],[11,"lift_type","","",19,[[["instruction",3]],[["type",4],["instructionerror",4],["result",4]]]],[11,"lift_extension","","",19,[[["instruction",3]],[["instructionerror",4],["result",4],["extension",3]]]],[11,"lift_ext_inst_import","","",19,[[["instruction",3]],[["instructionerror",4],["extinstimport",3],["result",4]]]],[11,"lift_ext_inst","","",19,[[["instruction",3]],[["extinst",3],["result",4],["instructionerror",4]]]],[11,"lift_memory_model","","",19,[[["instruction",3]],[["result",4],["memorymodel",3],["instructionerror",4]]]],[11,"lift_entry_point","","",19,[[["instruction",3]],[["instructionerror",4],["result",4],["entrypoint",3]]]],[11,"lift_execution_mode","","",19,[[["instruction",3]],[["executionmode",3],["instructionerror",4],["result",4]]]],[11,"lift_capability","","",19,[[["instruction",3]],[["capability",3],["result",4],["instructionerror",4]]]],[11,"lift_function","","",19,[[["instruction",3]],[["instructionerror",4],["result",4],["function",3]]]],[11,"lift_function_parameter","","",19,[[["instruction",3]],[["result",4],["functionparameter",3],["instructionerror",4]]]],[11,"lift_function_end","","",19,[[["instruction",3]],[["functionend",3],["result",4],["instructionerror",4]]]],[11,"lift_function_call","","",19,[[["instruction",3]],[["instructionerror",4],["functioncall",3],["result",4]]]],[11,"lift_execution_mode_id","","",19,[[["instruction",3]],[["instructionerror",4],["executionmodeid",3],["result",4]]]],[4,"OperandError","","Error lifting a data representation of an operand into …",null,null],[13,"WrongType","","Operand has a wrong type.",20,null],[13,"WrongEnumValue","","Operand is an integer value that corresponds to a …",20,null],[13,"Missing","","Operand is missing from the list.",20,null],[4,"InstructionError","","Error lifting a data representation of an instruction.",null,null],[13,"WrongOpcode","","Instruction has a wrong opcode.",21,null],[13,"MissingResult","","Instruction is missing a result  or type.",21,null],[13,"Operand","","One of the operands can not be lifted.",21,null],[4,"ConversionError","","Error that may occur during the convesion from the data …",null,null],[13,"MissingHeader","","",22,null],[13,"MissingFunction","","",22,null],[13,"MissingFunctionType","","",22,null],[13,"MissingLabel","","",22,null],[13,"MissingTerminator","","",22,null],[13,"Instruction","","",22,null],[11,"convert","","Convert a module from the data representation into …",19,[[["module",3]],[["result",4],["module",3],["conversionerror",4]]]],[0,"sr","rspirv","<strong>S</strong>tructured <strong>r</strong>epresentation of various SPIR-V language …",null,null],[0,"autogen_instructions","rspirv::sr","",null,null],[3,"Extension","rspirv::sr::autogen_instructions","",null,null],[12,"name","","",23,null],[3,"ExtInstImport","","",null,null],[12,"name","","",24,null],[3,"ExtInst","","",null,null],[12,"set","","",25,null],[12,"instruction","","",25,null],[12,"operand_1_operand_2","","",25,null],[3,"MemoryModel","","",null,null],[12,"addressing_model","","",26,null],[12,"memory_model","","",26,null],[3,"EntryPoint","","",null,null],[12,"execution_model","","",27,null],[12,"entry_point","","",27,null],[12,"name","","",27,null],[12,"interface","","",27,null],[3,"ExecutionMode","","",null,null],[12,"entry_point","","",28,null],[12,"mode","","",28,null],[3,"Capability","","",null,null],[12,"capability","","",29,null],[3,"Function","","",null,null],[12,"function_control","","",30,null],[12,"function_type","","",30,null],[3,"FunctionParameter","","",null,null],[3,"FunctionEnd","","",null,null],[3,"FunctionCall","","",null,null],[12,"function","","",31,null],[12,"argument_0_argument_1","","",31,null],[3,"ExecutionModeId","","",null,null],[12,"entry_point","","",32,null],[12,"mode","","",32,null],[0,"autogen_ops","rspirv::sr","",null,null],[4,"Branch","rspirv::sr::autogen_ops","",null,null],[13,"Phi","","",33,null],[12,"variable_parent","rspirv::sr::autogen_ops::Branch","",34,null],[13,"LoopMerge","rspirv::sr::autogen_ops","",33,null],[12,"merge_block","rspirv::sr::autogen_ops::Branch","",35,null],[12,"continue_target","","",35,null],[12,"loop_control","","",35,null],[13,"SelectionMerge","rspirv::sr::autogen_ops","",33,null],[12,"merge_block","rspirv::sr::autogen_ops::Branch","",36,null],[12,"selection_control","","",36,null],[13,"Label","rspirv::sr::autogen_ops","",33,null],[13,"Branch","","",33,null],[12,"target_label","rspirv::sr::autogen_ops::Branch","",37,null],[13,"BranchConditional","rspirv::sr::autogen_ops","",33,null],[12,"condition","rspirv::sr::autogen_ops::Branch","",38,null],[12,"true_label","","",38,null],[12,"false_label","","",38,null],[12,"branch_weights","","",38,null],[13,"Switch","rspirv::sr::autogen_ops","",33,null],[12,"selector","rspirv::sr::autogen_ops::Branch","",39,null],[12,"default","","",39,null],[12,"target","","",39,null],[13,"Kill","rspirv::sr::autogen_ops","",33,null],[13,"Return","","",33,null],[13,"ReturnValue","","",33,null],[12,"value","rspirv::sr::autogen_ops::Branch","",40,null],[13,"Unreachable","rspirv::sr::autogen_ops","",33,null],[13,"LifetimeStart","","",33,null],[12,"pointer","rspirv::sr::autogen_ops::Branch","",41,null],[12,"size","","",41,null],[13,"LifetimeStop","rspirv::sr::autogen_ops","",33,null],[12,"pointer","rspirv::sr::autogen_ops::Branch","",42,null],[12,"size","","",42,null],[4,"Terminator","rspirv::sr::autogen_ops","",null,null],[13,"Branch","","",43,null],[4,"Op","","",null,null],[13,"Nop","","",44,null],[13,"Undef","","",44,null],[13,"SourceContinued","","",44,null],[12,"continued_source","rspirv::sr::autogen_ops::Op","",45,null],[13,"Source","rspirv::sr::autogen_ops","",44,null],[12,"source_language","rspirv::sr::autogen_ops::Op","",46,null],[12,"version","","",46,null],[12,"file","","",46,null],[12,"source","","",46,null],[13,"SourceExtension","rspirv::sr::autogen_ops","",44,null],[12,"extension","rspirv::sr::autogen_ops::Op","",47,null],[13,"Name","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",48,null],[12,"name","","",48,null],[13,"MemberName","rspirv::sr::autogen_ops","",44,null],[12,"ty","rspirv::sr::autogen_ops::Op","",49,null],[12,"member","","",49,null],[12,"name","","",49,null],[13,"String","rspirv::sr::autogen_ops","",44,null],[12,"string","rspirv::sr::autogen_ops::Op","",50,null],[13,"Line","rspirv::sr::autogen_ops","",44,null],[12,"file","rspirv::sr::autogen_ops::Op","",51,null],[12,"line","","",51,null],[12,"column","","",51,null],[13,"Variable","rspirv::sr::autogen_ops","",44,null],[12,"storage_class","rspirv::sr::autogen_ops::Op","",52,null],[12,"initializer","","",52,null],[13,"ImageTexelPointer","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",53,null],[12,"coordinate","","",53,null],[12,"sample","","",53,null],[13,"Load","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",54,null],[12,"memory_access","","",54,null],[13,"Store","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",55,null],[12,"object","","",55,null],[12,"memory_access","","",55,null],[13,"CopyMemory","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",56,null],[12,"source","","",56,null],[12,"memory_access","","",56,null],[12,"memory_access_2","","",56,null],[13,"CopyMemorySized","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",57,null],[12,"source","","",57,null],[12,"size","","",57,null],[12,"memory_access","","",57,null],[12,"memory_access_2","","",57,null],[13,"AccessChain","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",58,null],[12,"indexes","","",58,null],[13,"InBoundsAccessChain","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",59,null],[12,"indexes","","",59,null],[13,"PtrAccessChain","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",60,null],[12,"element","","",60,null],[12,"indexes","","",60,null],[13,"ArrayLength","rspirv::sr::autogen_ops","",44,null],[12,"structure","rspirv::sr::autogen_ops::Op","",61,null],[12,"array_member","","",61,null],[13,"GenericPtrMemSemantics","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",62,null],[13,"InBoundsPtrAccessChain","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",63,null],[12,"element","","",63,null],[12,"indexes","","",63,null],[13,"Decorate","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",64,null],[12,"decoration","","",64,null],[13,"MemberDecorate","rspirv::sr::autogen_ops","",44,null],[12,"structure_type","rspirv::sr::autogen_ops::Op","",65,null],[12,"member","","",65,null],[12,"decoration","","",65,null],[13,"DecorationGroup","rspirv::sr::autogen_ops","",44,null],[13,"GroupDecorate","","",44,null],[12,"decoration_group","rspirv::sr::autogen_ops::Op","",66,null],[12,"targets","","",66,null],[13,"GroupMemberDecorate","rspirv::sr::autogen_ops","",44,null],[12,"decoration_group","rspirv::sr::autogen_ops::Op","",67,null],[12,"targets","","",67,null],[13,"VectorExtractDynamic","rspirv::sr::autogen_ops","",44,null],[12,"vector","rspirv::sr::autogen_ops::Op","",68,null],[12,"index","","",68,null],[13,"VectorInsertDynamic","rspirv::sr::autogen_ops","",44,null],[12,"vector","rspirv::sr::autogen_ops::Op","",69,null],[12,"component","","",69,null],[12,"index","","",69,null],[13,"VectorShuffle","rspirv::sr::autogen_ops","",44,null],[12,"vector_1","rspirv::sr::autogen_ops::Op","",70,null],[12,"vector_2","","",70,null],[12,"components","","",70,null],[13,"CompositeConstruct","rspirv::sr::autogen_ops","",44,null],[12,"constituents","rspirv::sr::autogen_ops::Op","",71,null],[13,"CompositeExtract","rspirv::sr::autogen_ops","",44,null],[12,"composite","rspirv::sr::autogen_ops::Op","",72,null],[12,"indexes","","",72,null],[13,"CompositeInsert","rspirv::sr::autogen_ops","",44,null],[12,"object","rspirv::sr::autogen_ops::Op","",73,null],[12,"composite","","",73,null],[12,"indexes","","",73,null],[13,"CopyObject","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",74,null],[13,"Transpose","rspirv::sr::autogen_ops","",44,null],[12,"matrix","rspirv::sr::autogen_ops::Op","",75,null],[13,"SampledImage","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",76,null],[12,"sampler","","",76,null],[13,"ImageSampleImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",77,null],[12,"coordinate","","",77,null],[12,"image_operands","","",77,null],[13,"ImageSampleExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",78,null],[12,"coordinate","","",78,null],[12,"image_operands","","",78,null],[13,"ImageSampleDrefImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",79,null],[12,"coordinate","","",79,null],[12,"d_ref","","",79,null],[12,"image_operands","","",79,null],[13,"ImageSampleDrefExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",80,null],[12,"coordinate","","",80,null],[12,"d_ref","","",80,null],[12,"image_operands","","",80,null],[13,"ImageSampleProjImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",81,null],[12,"coordinate","","",81,null],[12,"image_operands","","",81,null],[13,"ImageSampleProjExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",82,null],[12,"coordinate","","",82,null],[12,"image_operands","","",82,null],[13,"ImageSampleProjDrefImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",83,null],[12,"coordinate","","",83,null],[12,"d_ref","","",83,null],[12,"image_operands","","",83,null],[13,"ImageSampleProjDrefExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",84,null],[12,"coordinate","","",84,null],[12,"d_ref","","",84,null],[12,"image_operands","","",84,null],[13,"ImageFetch","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",85,null],[12,"coordinate","","",85,null],[12,"image_operands","","",85,null],[13,"ImageGather","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",86,null],[12,"coordinate","","",86,null],[12,"component","","",86,null],[12,"image_operands","","",86,null],[13,"ImageDrefGather","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",87,null],[12,"coordinate","","",87,null],[12,"d_ref","","",87,null],[12,"image_operands","","",87,null],[13,"ImageRead","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",88,null],[12,"coordinate","","",88,null],[12,"image_operands","","",88,null],[13,"ImageWrite","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",89,null],[12,"coordinate","","",89,null],[12,"texel","","",89,null],[12,"image_operands","","",89,null],[13,"Image","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",90,null],[13,"ImageQueryFormat","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",91,null],[13,"ImageQueryOrder","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",92,null],[13,"ImageQuerySizeLod","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",93,null],[12,"level_of_detail","","",93,null],[13,"ImageQuerySize","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",94,null],[13,"ImageQueryLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",95,null],[12,"coordinate","","",95,null],[13,"ImageQueryLevels","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",96,null],[13,"ImageQuerySamples","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",97,null],[13,"ConvertFToU","rspirv::sr::autogen_ops","",44,null],[12,"float_value","rspirv::sr::autogen_ops::Op","",98,null],[13,"ConvertFToS","rspirv::sr::autogen_ops","",44,null],[12,"float_value","rspirv::sr::autogen_ops::Op","",99,null],[13,"ConvertSToF","rspirv::sr::autogen_ops","",44,null],[12,"signed_value","rspirv::sr::autogen_ops::Op","",100,null],[13,"ConvertUToF","rspirv::sr::autogen_ops","",44,null],[12,"unsigned_value","rspirv::sr::autogen_ops::Op","",101,null],[13,"UConvert","rspirv::sr::autogen_ops","",44,null],[12,"unsigned_value","rspirv::sr::autogen_ops::Op","",102,null],[13,"SConvert","rspirv::sr::autogen_ops","",44,null],[12,"signed_value","rspirv::sr::autogen_ops::Op","",103,null],[13,"FConvert","rspirv::sr::autogen_ops","",44,null],[12,"float_value","rspirv::sr::autogen_ops::Op","",104,null],[13,"QuantizeToF16","rspirv::sr::autogen_ops","",44,null],[12,"value","rspirv::sr::autogen_ops::Op","",105,null],[13,"ConvertPtrToU","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",106,null],[13,"SatConvertSToU","rspirv::sr::autogen_ops","",44,null],[12,"signed_value","rspirv::sr::autogen_ops::Op","",107,null],[13,"SatConvertUToS","rspirv::sr::autogen_ops","",44,null],[12,"unsigned_value","rspirv::sr::autogen_ops::Op","",108,null],[13,"ConvertUToPtr","rspirv::sr::autogen_ops","",44,null],[12,"integer_value","rspirv::sr::autogen_ops::Op","",109,null],[13,"PtrCastToGeneric","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",110,null],[13,"GenericCastToPtr","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",111,null],[13,"GenericCastToPtrExplicit","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",112,null],[12,"storage","","",112,null],[13,"Bitcast","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",113,null],[13,"SNegate","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",114,null],[13,"FNegate","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",115,null],[13,"IAdd","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",116,null],[12,"operand_2","","",116,null],[13,"FAdd","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",117,null],[12,"operand_2","","",117,null],[13,"ISub","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",118,null],[12,"operand_2","","",118,null],[13,"FSub","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",119,null],[12,"operand_2","","",119,null],[13,"IMul","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",120,null],[12,"operand_2","","",120,null],[13,"FMul","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",121,null],[12,"operand_2","","",121,null],[13,"UDiv","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",122,null],[12,"operand_2","","",122,null],[13,"SDiv","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",123,null],[12,"operand_2","","",123,null],[13,"FDiv","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",124,null],[12,"operand_2","","",124,null],[13,"UMod","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",125,null],[12,"operand_2","","",125,null],[13,"SRem","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",126,null],[12,"operand_2","","",126,null],[13,"SMod","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",127,null],[12,"operand_2","","",127,null],[13,"FRem","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",128,null],[12,"operand_2","","",128,null],[13,"FMod","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",129,null],[12,"operand_2","","",129,null],[13,"VectorTimesScalar","rspirv::sr::autogen_ops","",44,null],[12,"vector","rspirv::sr::autogen_ops::Op","",130,null],[12,"scalar","","",130,null],[13,"MatrixTimesScalar","rspirv::sr::autogen_ops","",44,null],[12,"matrix","rspirv::sr::autogen_ops::Op","",131,null],[12,"scalar","","",131,null],[13,"VectorTimesMatrix","rspirv::sr::autogen_ops","",44,null],[12,"vector","rspirv::sr::autogen_ops::Op","",132,null],[12,"matrix","","",132,null],[13,"MatrixTimesVector","rspirv::sr::autogen_ops","",44,null],[12,"matrix","rspirv::sr::autogen_ops::Op","",133,null],[12,"vector","","",133,null],[13,"MatrixTimesMatrix","rspirv::sr::autogen_ops","",44,null],[12,"left_matrix","rspirv::sr::autogen_ops::Op","",134,null],[12,"right_matrix","","",134,null],[13,"OuterProduct","rspirv::sr::autogen_ops","",44,null],[12,"vector_1","rspirv::sr::autogen_ops::Op","",135,null],[12,"vector_2","","",135,null],[13,"Dot","rspirv::sr::autogen_ops","",44,null],[12,"vector_1","rspirv::sr::autogen_ops::Op","",136,null],[12,"vector_2","","",136,null],[13,"IAddCarry","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",137,null],[12,"operand_2","","",137,null],[13,"ISubBorrow","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",138,null],[12,"operand_2","","",138,null],[13,"UMulExtended","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",139,null],[12,"operand_2","","",139,null],[13,"SMulExtended","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",140,null],[12,"operand_2","","",140,null],[13,"Any","rspirv::sr::autogen_ops","",44,null],[12,"vector","rspirv::sr::autogen_ops::Op","",141,null],[13,"All","rspirv::sr::autogen_ops","",44,null],[12,"vector","rspirv::sr::autogen_ops::Op","",142,null],[13,"IsNan","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",143,null],[13,"IsInf","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",144,null],[13,"IsFinite","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",145,null],[13,"IsNormal","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",146,null],[13,"SignBitSet","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",147,null],[13,"LessOrGreater","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",148,null],[12,"y","","",148,null],[13,"Ordered","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",149,null],[12,"y","","",149,null],[13,"Unordered","rspirv::sr::autogen_ops","",44,null],[12,"x","rspirv::sr::autogen_ops::Op","",150,null],[12,"y","","",150,null],[13,"LogicalEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",151,null],[12,"operand_2","","",151,null],[13,"LogicalNotEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",152,null],[12,"operand_2","","",152,null],[13,"LogicalOr","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",153,null],[12,"operand_2","","",153,null],[13,"LogicalAnd","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",154,null],[12,"operand_2","","",154,null],[13,"LogicalNot","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",155,null],[13,"Select","rspirv::sr::autogen_ops","",44,null],[12,"condition","rspirv::sr::autogen_ops::Op","",156,null],[12,"object_1","","",156,null],[12,"object_2","","",156,null],[13,"IEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",157,null],[12,"operand_2","","",157,null],[13,"INotEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",158,null],[12,"operand_2","","",158,null],[13,"UGreaterThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",159,null],[12,"operand_2","","",159,null],[13,"SGreaterThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",160,null],[12,"operand_2","","",160,null],[13,"UGreaterThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",161,null],[12,"operand_2","","",161,null],[13,"SGreaterThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",162,null],[12,"operand_2","","",162,null],[13,"ULessThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",163,null],[12,"operand_2","","",163,null],[13,"SLessThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",164,null],[12,"operand_2","","",164,null],[13,"ULessThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",165,null],[12,"operand_2","","",165,null],[13,"SLessThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",166,null],[12,"operand_2","","",166,null],[13,"FOrdEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",167,null],[12,"operand_2","","",167,null],[13,"FUnordEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",168,null],[12,"operand_2","","",168,null],[13,"FOrdNotEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",169,null],[12,"operand_2","","",169,null],[13,"FUnordNotEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",170,null],[12,"operand_2","","",170,null],[13,"FOrdLessThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",171,null],[12,"operand_2","","",171,null],[13,"FUnordLessThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",172,null],[12,"operand_2","","",172,null],[13,"FOrdGreaterThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",173,null],[12,"operand_2","","",173,null],[13,"FUnordGreaterThan","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",174,null],[12,"operand_2","","",174,null],[13,"FOrdLessThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",175,null],[12,"operand_2","","",175,null],[13,"FUnordLessThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",176,null],[12,"operand_2","","",176,null],[13,"FOrdGreaterThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",177,null],[12,"operand_2","","",177,null],[13,"FUnordGreaterThanEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",178,null],[12,"operand_2","","",178,null],[13,"ShiftRightLogical","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",179,null],[12,"shift","","",179,null],[13,"ShiftRightArithmetic","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",180,null],[12,"shift","","",180,null],[13,"ShiftLeftLogical","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",181,null],[12,"shift","","",181,null],[13,"BitwiseOr","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",182,null],[12,"operand_2","","",182,null],[13,"BitwiseXor","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",183,null],[12,"operand_2","","",183,null],[13,"BitwiseAnd","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",184,null],[12,"operand_2","","",184,null],[13,"Not","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",185,null],[13,"BitFieldInsert","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",186,null],[12,"insert","","",186,null],[12,"offset","","",186,null],[12,"count","","",186,null],[13,"BitFieldSExtract","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",187,null],[12,"offset","","",187,null],[12,"count","","",187,null],[13,"BitFieldUExtract","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",188,null],[12,"offset","","",188,null],[12,"count","","",188,null],[13,"BitReverse","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",189,null],[13,"BitCount","rspirv::sr::autogen_ops","",44,null],[12,"base","rspirv::sr::autogen_ops::Op","",190,null],[13,"DPdx","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",191,null],[13,"DPdy","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",192,null],[13,"Fwidth","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",193,null],[13,"DPdxFine","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",194,null],[13,"DPdyFine","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",195,null],[13,"FwidthFine","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",196,null],[13,"DPdxCoarse","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",197,null],[13,"DPdyCoarse","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",198,null],[13,"FwidthCoarse","rspirv::sr::autogen_ops","",44,null],[12,"p","rspirv::sr::autogen_ops::Op","",199,null],[13,"EmitVertex","rspirv::sr::autogen_ops","",44,null],[13,"EndPrimitive","","",44,null],[13,"EmitStreamVertex","","",44,null],[12,"stream","rspirv::sr::autogen_ops::Op","",200,null],[13,"EndStreamPrimitive","rspirv::sr::autogen_ops","",44,null],[12,"stream","rspirv::sr::autogen_ops::Op","",201,null],[13,"ControlBarrier","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",202,null],[12,"memory","","",202,null],[12,"semantics","","",202,null],[13,"MemoryBarrier","rspirv::sr::autogen_ops","",44,null],[12,"memory","rspirv::sr::autogen_ops::Op","",203,null],[12,"semantics","","",203,null],[13,"AtomicLoad","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",204,null],[12,"memory","","",204,null],[12,"semantics","","",204,null],[13,"AtomicStore","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",205,null],[12,"memory","","",205,null],[12,"semantics","","",205,null],[12,"value","","",205,null],[13,"AtomicExchange","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",206,null],[12,"memory","","",206,null],[12,"semantics","","",206,null],[12,"value","","",206,null],[13,"AtomicCompareExchange","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",207,null],[12,"memory","","",207,null],[12,"equal","","",207,null],[12,"unequal","","",207,null],[12,"value","","",207,null],[12,"comparator","","",207,null],[13,"AtomicCompareExchangeWeak","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",208,null],[12,"memory","","",208,null],[12,"equal","","",208,null],[12,"unequal","","",208,null],[12,"value","","",208,null],[12,"comparator","","",208,null],[13,"AtomicIIncrement","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",209,null],[12,"memory","","",209,null],[12,"semantics","","",209,null],[13,"AtomicIDecrement","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",210,null],[12,"memory","","",210,null],[12,"semantics","","",210,null],[13,"AtomicIAdd","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",211,null],[12,"memory","","",211,null],[12,"semantics","","",211,null],[12,"value","","",211,null],[13,"AtomicISub","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",212,null],[12,"memory","","",212,null],[12,"semantics","","",212,null],[12,"value","","",212,null],[13,"AtomicSMin","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",213,null],[12,"memory","","",213,null],[12,"semantics","","",213,null],[12,"value","","",213,null],[13,"AtomicUMin","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",214,null],[12,"memory","","",214,null],[12,"semantics","","",214,null],[12,"value","","",214,null],[13,"AtomicSMax","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",215,null],[12,"memory","","",215,null],[12,"semantics","","",215,null],[12,"value","","",215,null],[13,"AtomicUMax","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",216,null],[12,"memory","","",216,null],[12,"semantics","","",216,null],[12,"value","","",216,null],[13,"AtomicAnd","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",217,null],[12,"memory","","",217,null],[12,"semantics","","",217,null],[12,"value","","",217,null],[13,"AtomicOr","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",218,null],[12,"memory","","",218,null],[12,"semantics","","",218,null],[12,"value","","",218,null],[13,"AtomicXor","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",219,null],[12,"memory","","",219,null],[12,"semantics","","",219,null],[12,"value","","",219,null],[13,"GroupAsyncCopy","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",220,null],[12,"destination","","",220,null],[12,"source","","",220,null],[12,"num_elements","","",220,null],[12,"stride","","",220,null],[12,"event","","",220,null],[13,"GroupWaitEvents","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",221,null],[12,"num_events","","",221,null],[12,"events_list","","",221,null],[13,"GroupAll","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",222,null],[12,"predicate","","",222,null],[13,"GroupAny","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",223,null],[12,"predicate","","",223,null],[13,"GroupBroadcast","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",224,null],[12,"value","","",224,null],[12,"local_id","","",224,null],[13,"GroupIAdd","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",225,null],[12,"operation","","",225,null],[12,"x","","",225,null],[13,"GroupFAdd","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",226,null],[12,"operation","","",226,null],[12,"x","","",226,null],[13,"GroupFMin","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",227,null],[12,"operation","","",227,null],[12,"x","","",227,null],[13,"GroupUMin","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",228,null],[12,"operation","","",228,null],[12,"x","","",228,null],[13,"GroupSMin","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",229,null],[12,"operation","","",229,null],[12,"x","","",229,null],[13,"GroupFMax","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",230,null],[12,"operation","","",230,null],[12,"x","","",230,null],[13,"GroupUMax","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",231,null],[12,"operation","","",231,null],[12,"x","","",231,null],[13,"GroupSMax","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",232,null],[12,"operation","","",232,null],[12,"x","","",232,null],[13,"ReadPipe","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",233,null],[12,"pointer","","",233,null],[12,"packet_size","","",233,null],[12,"packet_alignment","","",233,null],[13,"WritePipe","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",234,null],[12,"pointer","","",234,null],[12,"packet_size","","",234,null],[12,"packet_alignment","","",234,null],[13,"ReservedReadPipe","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",235,null],[12,"reserve_id","","",235,null],[12,"index","","",235,null],[12,"pointer","","",235,null],[12,"packet_size","","",235,null],[12,"packet_alignment","","",235,null],[13,"ReservedWritePipe","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",236,null],[12,"reserve_id","","",236,null],[12,"index","","",236,null],[12,"pointer","","",236,null],[12,"packet_size","","",236,null],[12,"packet_alignment","","",236,null],[13,"ReserveReadPipePackets","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",237,null],[12,"num_packets","","",237,null],[12,"packet_size","","",237,null],[12,"packet_alignment","","",237,null],[13,"ReserveWritePipePackets","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",238,null],[12,"num_packets","","",238,null],[12,"packet_size","","",238,null],[12,"packet_alignment","","",238,null],[13,"CommitReadPipe","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",239,null],[12,"reserve_id","","",239,null],[12,"packet_size","","",239,null],[12,"packet_alignment","","",239,null],[13,"CommitWritePipe","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",240,null],[12,"reserve_id","","",240,null],[12,"packet_size","","",240,null],[12,"packet_alignment","","",240,null],[13,"IsValidReserveId","rspirv::sr::autogen_ops","",44,null],[12,"reserve_id","rspirv::sr::autogen_ops::Op","",241,null],[13,"GetNumPipePackets","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",242,null],[12,"packet_size","","",242,null],[12,"packet_alignment","","",242,null],[13,"GetMaxPipePackets","rspirv::sr::autogen_ops","",44,null],[12,"pipe","rspirv::sr::autogen_ops::Op","",243,null],[12,"packet_size","","",243,null],[12,"packet_alignment","","",243,null],[13,"GroupReserveReadPipePackets","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",244,null],[12,"pipe","","",244,null],[12,"num_packets","","",244,null],[12,"packet_size","","",244,null],[12,"packet_alignment","","",244,null],[13,"GroupReserveWritePipePackets","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",245,null],[12,"pipe","","",245,null],[12,"num_packets","","",245,null],[12,"packet_size","","",245,null],[12,"packet_alignment","","",245,null],[13,"GroupCommitReadPipe","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",246,null],[12,"pipe","","",246,null],[12,"reserve_id","","",246,null],[12,"packet_size","","",246,null],[12,"packet_alignment","","",246,null],[13,"GroupCommitWritePipe","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",247,null],[12,"pipe","","",247,null],[12,"reserve_id","","",247,null],[12,"packet_size","","",247,null],[12,"packet_alignment","","",247,null],[13,"EnqueueMarker","rspirv::sr::autogen_ops","",44,null],[12,"queue","rspirv::sr::autogen_ops::Op","",248,null],[12,"num_events","","",248,null],[12,"wait_events","","",248,null],[12,"ret_event","","",248,null],[13,"EnqueueKernel","rspirv::sr::autogen_ops","",44,null],[12,"queue","rspirv::sr::autogen_ops::Op","",249,null],[12,"flags","","",249,null],[12,"nd_range","","",249,null],[12,"num_events","","",249,null],[12,"wait_events","","",249,null],[12,"ret_event","","",249,null],[12,"invoke","","",249,null],[12,"param","","",249,null],[12,"param_size","","",249,null],[12,"param_align","","",249,null],[12,"local_size","","",249,null],[13,"GetKernelNDrangeSubGroupCount","rspirv::sr::autogen_ops","",44,null],[12,"nd_range","rspirv::sr::autogen_ops::Op","",250,null],[12,"invoke","","",250,null],[12,"param","","",250,null],[12,"param_size","","",250,null],[12,"param_align","","",250,null],[13,"GetKernelNDrangeMaxSubGroupSize","rspirv::sr::autogen_ops","",44,null],[12,"nd_range","rspirv::sr::autogen_ops::Op","",251,null],[12,"invoke","","",251,null],[12,"param","","",251,null],[12,"param_size","","",251,null],[12,"param_align","","",251,null],[13,"GetKernelWorkGroupSize","rspirv::sr::autogen_ops","",44,null],[12,"invoke","rspirv::sr::autogen_ops::Op","",252,null],[12,"param","","",252,null],[12,"param_size","","",252,null],[12,"param_align","","",252,null],[13,"GetKernelPreferredWorkGroupSizeMultiple","rspirv::sr::autogen_ops","",44,null],[12,"invoke","rspirv::sr::autogen_ops::Op","",253,null],[12,"param","","",253,null],[12,"param_size","","",253,null],[12,"param_align","","",253,null],[13,"RetainEvent","rspirv::sr::autogen_ops","",44,null],[12,"event","rspirv::sr::autogen_ops::Op","",254,null],[13,"ReleaseEvent","rspirv::sr::autogen_ops","",44,null],[12,"event","rspirv::sr::autogen_ops::Op","",255,null],[13,"CreateUserEvent","rspirv::sr::autogen_ops","",44,null],[13,"IsValidEvent","","",44,null],[12,"event","rspirv::sr::autogen_ops::Op","",256,null],[13,"SetUserEventStatus","rspirv::sr::autogen_ops","",44,null],[12,"event","rspirv::sr::autogen_ops::Op","",257,null],[12,"status","","",257,null],[13,"CaptureEventProfilingInfo","rspirv::sr::autogen_ops","",44,null],[12,"event","rspirv::sr::autogen_ops::Op","",258,null],[12,"profiling_info","","",258,null],[12,"value","","",258,null],[13,"GetDefaultQueue","rspirv::sr::autogen_ops","",44,null],[13,"BuildNDRange","","",44,null],[12,"global_work_size","rspirv::sr::autogen_ops::Op","",259,null],[12,"local_work_size","","",259,null],[12,"global_work_offset","","",259,null],[13,"ImageSparseSampleImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",260,null],[12,"coordinate","","",260,null],[12,"image_operands","","",260,null],[13,"ImageSparseSampleExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",261,null],[12,"coordinate","","",261,null],[12,"image_operands","","",261,null],[13,"ImageSparseSampleDrefImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",262,null],[12,"coordinate","","",262,null],[12,"d_ref","","",262,null],[12,"image_operands","","",262,null],[13,"ImageSparseSampleDrefExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",263,null],[12,"coordinate","","",263,null],[12,"d_ref","","",263,null],[12,"image_operands","","",263,null],[13,"ImageSparseSampleProjImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",264,null],[12,"coordinate","","",264,null],[12,"image_operands","","",264,null],[13,"ImageSparseSampleProjExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",265,null],[12,"coordinate","","",265,null],[12,"image_operands","","",265,null],[13,"ImageSparseSampleProjDrefImplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",266,null],[12,"coordinate","","",266,null],[12,"d_ref","","",266,null],[12,"image_operands","","",266,null],[13,"ImageSparseSampleProjDrefExplicitLod","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",267,null],[12,"coordinate","","",267,null],[12,"d_ref","","",267,null],[12,"image_operands","","",267,null],[13,"ImageSparseFetch","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",268,null],[12,"coordinate","","",268,null],[12,"image_operands","","",268,null],[13,"ImageSparseGather","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",269,null],[12,"coordinate","","",269,null],[12,"component","","",269,null],[12,"image_operands","","",269,null],[13,"ImageSparseDrefGather","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",270,null],[12,"coordinate","","",270,null],[12,"d_ref","","",270,null],[12,"image_operands","","",270,null],[13,"ImageSparseTexelsResident","rspirv::sr::autogen_ops","",44,null],[12,"resident_code","rspirv::sr::autogen_ops::Op","",271,null],[13,"NoLine","rspirv::sr::autogen_ops","",44,null],[13,"AtomicFlagTestAndSet","","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",272,null],[12,"memory","","",272,null],[12,"semantics","","",272,null],[13,"AtomicFlagClear","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",273,null],[12,"memory","","",273,null],[12,"semantics","","",273,null],[13,"ImageSparseRead","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",274,null],[12,"coordinate","","",274,null],[12,"image_operands","","",274,null],[13,"SizeOf","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",275,null],[13,"ConstantPipeStorage","rspirv::sr::autogen_ops","",44,null],[12,"packet_size","rspirv::sr::autogen_ops::Op","",276,null],[12,"packet_alignment","","",276,null],[12,"capacity","","",276,null],[13,"CreatePipeFromPipeStorage","rspirv::sr::autogen_ops","",44,null],[12,"pipe_storage","rspirv::sr::autogen_ops::Op","",277,null],[13,"GetKernelLocalSizeForSubgroupCount","rspirv::sr::autogen_ops","",44,null],[12,"subgroup_count","rspirv::sr::autogen_ops::Op","",278,null],[12,"invoke","","",278,null],[12,"param","","",278,null],[12,"param_size","","",278,null],[12,"param_align","","",278,null],[13,"GetKernelMaxNumSubgroups","rspirv::sr::autogen_ops","",44,null],[12,"invoke","rspirv::sr::autogen_ops::Op","",279,null],[12,"param","","",279,null],[12,"param_size","","",279,null],[12,"param_align","","",279,null],[13,"NamedBarrierInitialize","rspirv::sr::autogen_ops","",44,null],[12,"subgroup_count","rspirv::sr::autogen_ops::Op","",280,null],[13,"MemoryNamedBarrier","rspirv::sr::autogen_ops","",44,null],[12,"named_barrier","rspirv::sr::autogen_ops::Op","",281,null],[12,"memory","","",281,null],[12,"semantics","","",281,null],[13,"ModuleProcessed","rspirv::sr::autogen_ops","",44,null],[12,"process","rspirv::sr::autogen_ops::Op","",282,null],[13,"DecorateId","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",283,null],[12,"decoration","","",283,null],[13,"GroupNonUniformElect","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",284,null],[13,"GroupNonUniformAll","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",285,null],[12,"predicate","","",285,null],[13,"GroupNonUniformAny","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",286,null],[12,"predicate","","",286,null],[13,"GroupNonUniformAllEqual","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",287,null],[12,"value","","",287,null],[13,"GroupNonUniformBroadcast","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",288,null],[12,"value","","",288,null],[12,"id","","",288,null],[13,"GroupNonUniformBroadcastFirst","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",289,null],[12,"value","","",289,null],[13,"GroupNonUniformBallot","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",290,null],[12,"predicate","","",290,null],[13,"GroupNonUniformInverseBallot","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",291,null],[12,"value","","",291,null],[13,"GroupNonUniformBallotBitExtract","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",292,null],[12,"value","","",292,null],[12,"index","","",292,null],[13,"GroupNonUniformBallotBitCount","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",293,null],[12,"operation","","",293,null],[12,"value","","",293,null],[13,"GroupNonUniformBallotFindLSB","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",294,null],[12,"value","","",294,null],[13,"GroupNonUniformBallotFindMSB","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",295,null],[12,"value","","",295,null],[13,"GroupNonUniformShuffle","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",296,null],[12,"value","","",296,null],[12,"id","","",296,null],[13,"GroupNonUniformShuffleXor","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",297,null],[12,"value","","",297,null],[12,"mask","","",297,null],[13,"GroupNonUniformShuffleUp","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",298,null],[12,"value","","",298,null],[12,"delta","","",298,null],[13,"GroupNonUniformShuffleDown","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",299,null],[12,"value","","",299,null],[12,"delta","","",299,null],[13,"GroupNonUniformIAdd","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",300,null],[12,"operation","","",300,null],[12,"value","","",300,null],[12,"cluster_size","","",300,null],[13,"GroupNonUniformFAdd","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",301,null],[12,"operation","","",301,null],[12,"value","","",301,null],[12,"cluster_size","","",301,null],[13,"GroupNonUniformIMul","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",302,null],[12,"operation","","",302,null],[12,"value","","",302,null],[12,"cluster_size","","",302,null],[13,"GroupNonUniformFMul","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",303,null],[12,"operation","","",303,null],[12,"value","","",303,null],[12,"cluster_size","","",303,null],[13,"GroupNonUniformSMin","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",304,null],[12,"operation","","",304,null],[12,"value","","",304,null],[12,"cluster_size","","",304,null],[13,"GroupNonUniformUMin","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",305,null],[12,"operation","","",305,null],[12,"value","","",305,null],[12,"cluster_size","","",305,null],[13,"GroupNonUniformFMin","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",306,null],[12,"operation","","",306,null],[12,"value","","",306,null],[12,"cluster_size","","",306,null],[13,"GroupNonUniformSMax","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",307,null],[12,"operation","","",307,null],[12,"value","","",307,null],[12,"cluster_size","","",307,null],[13,"GroupNonUniformUMax","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",308,null],[12,"operation","","",308,null],[12,"value","","",308,null],[12,"cluster_size","","",308,null],[13,"GroupNonUniformFMax","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",309,null],[12,"operation","","",309,null],[12,"value","","",309,null],[12,"cluster_size","","",309,null],[13,"GroupNonUniformBitwiseAnd","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",310,null],[12,"operation","","",310,null],[12,"value","","",310,null],[12,"cluster_size","","",310,null],[13,"GroupNonUniformBitwiseOr","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",311,null],[12,"operation","","",311,null],[12,"value","","",311,null],[12,"cluster_size","","",311,null],[13,"GroupNonUniformBitwiseXor","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",312,null],[12,"operation","","",312,null],[12,"value","","",312,null],[12,"cluster_size","","",312,null],[13,"GroupNonUniformLogicalAnd","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",313,null],[12,"operation","","",313,null],[12,"value","","",313,null],[12,"cluster_size","","",313,null],[13,"GroupNonUniformLogicalOr","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",314,null],[12,"operation","","",314,null],[12,"value","","",314,null],[12,"cluster_size","","",314,null],[13,"GroupNonUniformLogicalXor","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",315,null],[12,"operation","","",315,null],[12,"value","","",315,null],[12,"cluster_size","","",315,null],[13,"GroupNonUniformQuadBroadcast","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",316,null],[12,"value","","",316,null],[12,"index","","",316,null],[13,"GroupNonUniformQuadSwap","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",317,null],[12,"value","","",317,null],[12,"direction","","",317,null],[13,"CopyLogical","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",318,null],[13,"PtrEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",319,null],[12,"operand_2","","",319,null],[13,"PtrNotEqual","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",320,null],[12,"operand_2","","",320,null],[13,"PtrDiff","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",321,null],[12,"operand_2","","",321,null],[13,"SubgroupBallotKHR","rspirv::sr::autogen_ops","",44,null],[12,"predicate","rspirv::sr::autogen_ops::Op","",322,null],[13,"SubgroupFirstInvocationKHR","rspirv::sr::autogen_ops","",44,null],[12,"value","rspirv::sr::autogen_ops::Op","",323,null],[13,"SubgroupAllKHR","rspirv::sr::autogen_ops","",44,null],[12,"predicate","rspirv::sr::autogen_ops::Op","",324,null],[13,"SubgroupAnyKHR","rspirv::sr::autogen_ops","",44,null],[12,"predicate","rspirv::sr::autogen_ops::Op","",325,null],[13,"SubgroupAllEqualKHR","rspirv::sr::autogen_ops","",44,null],[12,"predicate","rspirv::sr::autogen_ops::Op","",326,null],[13,"SubgroupReadInvocationKHR","rspirv::sr::autogen_ops","",44,null],[12,"value","rspirv::sr::autogen_ops::Op","",327,null],[12,"index","","",327,null],[13,"TypeRayQueryProvisionalKHR","rspirv::sr::autogen_ops","",44,null],[13,"RayQueryInitializeKHR","","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",328,null],[12,"accel","","",328,null],[12,"ray_flags","","",328,null],[12,"cull_mask","","",328,null],[12,"ray_origin","","",328,null],[12,"ray_t_min","","",328,null],[12,"ray_direction","","",328,null],[12,"ray_t_max","","",328,null],[13,"RayQueryTerminateKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",329,null],[13,"RayQueryGenerateIntersectionKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",330,null],[12,"hit_t","","",330,null],[13,"RayQueryConfirmIntersectionKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",331,null],[13,"RayQueryProceedKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",332,null],[13,"RayQueryGetIntersectionTypeKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",333,null],[12,"intersection","","",333,null],[13,"GroupIAddNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",334,null],[12,"operation","","",334,null],[12,"x","","",334,null],[13,"GroupFAddNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",335,null],[12,"operation","","",335,null],[12,"x","","",335,null],[13,"GroupFMinNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",336,null],[12,"operation","","",336,null],[12,"x","","",336,null],[13,"GroupUMinNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",337,null],[12,"operation","","",337,null],[12,"x","","",337,null],[13,"GroupSMinNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",338,null],[12,"operation","","",338,null],[12,"x","","",338,null],[13,"GroupFMaxNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",339,null],[12,"operation","","",339,null],[12,"x","","",339,null],[13,"GroupUMaxNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",340,null],[12,"operation","","",340,null],[12,"x","","",340,null],[13,"GroupSMaxNonUniformAMD","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",341,null],[12,"operation","","",341,null],[12,"x","","",341,null],[13,"FragmentMaskFetchAMD","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",342,null],[12,"coordinate","","",342,null],[13,"FragmentFetchAMD","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",343,null],[12,"coordinate","","",343,null],[12,"fragment_index","","",343,null],[13,"ReadClockKHR","rspirv::sr::autogen_ops","",44,null],[12,"execution","rspirv::sr::autogen_ops::Op","",344,null],[13,"ImageSampleFootprintNV","rspirv::sr::autogen_ops","",44,null],[12,"sampled_image","rspirv::sr::autogen_ops::Op","",345,null],[12,"coordinate","","",345,null],[12,"granularity","","",345,null],[12,"coarse","","",345,null],[12,"image_operands","","",345,null],[13,"GroupNonUniformPartitionNV","rspirv::sr::autogen_ops","",44,null],[12,"value","rspirv::sr::autogen_ops::Op","",346,null],[13,"WritePackedPrimitiveIndices4x8NV","rspirv::sr::autogen_ops","",44,null],[12,"index_offset","rspirv::sr::autogen_ops::Op","",347,null],[12,"packed_indices","","",347,null],[13,"ReportIntersectionNV","rspirv::sr::autogen_ops","",44,null],[12,"hit","rspirv::sr::autogen_ops::Op","",348,null],[12,"hit_kind","","",348,null],[13,"ReportIntersectionKHR","rspirv::sr::autogen_ops","",44,null],[12,"hit","rspirv::sr::autogen_ops::Op","",349,null],[12,"hit_kind","","",349,null],[13,"IgnoreIntersectionNV","rspirv::sr::autogen_ops","",44,null],[13,"IgnoreIntersectionKHR","","",44,null],[13,"TerminateRayNV","","",44,null],[13,"TerminateRayKHR","","",44,null],[13,"TraceNV","","",44,null],[12,"accel","rspirv::sr::autogen_ops::Op","",350,null],[12,"ray_flags","","",350,null],[12,"cull_mask","","",350,null],[12,"sbt_offset","","",350,null],[12,"sbt_stride","","",350,null],[12,"miss_index","","",350,null],[12,"ray_origin","","",350,null],[12,"ray_tmin","","",350,null],[12,"ray_direction","","",350,null],[12,"ray_tmax","","",350,null],[12,"payload_id","","",350,null],[13,"TraceRayKHR","rspirv::sr::autogen_ops","",44,null],[12,"accel","rspirv::sr::autogen_ops::Op","",351,null],[12,"ray_flags","","",351,null],[12,"cull_mask","","",351,null],[12,"sbt_offset","","",351,null],[12,"sbt_stride","","",351,null],[12,"miss_index","","",351,null],[12,"ray_origin","","",351,null],[12,"ray_tmin","","",351,null],[12,"ray_direction","","",351,null],[12,"ray_tmax","","",351,null],[12,"payload_id","","",351,null],[13,"TypeAccelerationStructureNV","rspirv::sr::autogen_ops","",44,null],[13,"TypeAccelerationStructureKHR","","",44,null],[13,"ExecuteCallableNV","","",44,null],[12,"sbt_index","rspirv::sr::autogen_ops::Op","",352,null],[12,"callable_data_id","","",352,null],[13,"ExecuteCallableKHR","rspirv::sr::autogen_ops","",44,null],[12,"sbt_index","rspirv::sr::autogen_ops::Op","",353,null],[12,"callable_data_id","","",353,null],[13,"TypeCooperativeMatrixNV","rspirv::sr::autogen_ops","",44,null],[12,"component_type","rspirv::sr::autogen_ops::Op","",354,null],[12,"execution","","",354,null],[12,"rows","","",354,null],[12,"columns","","",354,null],[13,"CooperativeMatrixLoadNV","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",355,null],[12,"stride","","",355,null],[12,"column_major","","",355,null],[12,"memory_access","","",355,null],[13,"CooperativeMatrixStoreNV","rspirv::sr::autogen_ops","",44,null],[12,"pointer","rspirv::sr::autogen_ops::Op","",356,null],[12,"object","","",356,null],[12,"stride","","",356,null],[12,"column_major","","",356,null],[12,"memory_access","","",356,null],[13,"CooperativeMatrixMulAddNV","rspirv::sr::autogen_ops","",44,null],[12,"a","rspirv::sr::autogen_ops::Op","",357,null],[12,"b","","",357,null],[12,"c","","",357,null],[13,"CooperativeMatrixLengthNV","rspirv::sr::autogen_ops","",44,null],[12,"ty","rspirv::sr::autogen_ops::Op","",358,null],[13,"BeginInvocationInterlockEXT","rspirv::sr::autogen_ops","",44,null],[13,"EndInvocationInterlockEXT","","",44,null],[13,"DemoteToHelperInvocationEXT","","",44,null],[13,"IsHelperInvocationEXT","","",44,null],[13,"SubgroupShuffleINTEL","","",44,null],[12,"data","rspirv::sr::autogen_ops::Op","",359,null],[12,"invocation_id","","",359,null],[13,"SubgroupShuffleDownINTEL","rspirv::sr::autogen_ops","",44,null],[12,"current","rspirv::sr::autogen_ops::Op","",360,null],[12,"next","","",360,null],[12,"delta","","",360,null],[13,"SubgroupShuffleUpINTEL","rspirv::sr::autogen_ops","",44,null],[12,"previous","rspirv::sr::autogen_ops::Op","",361,null],[12,"current","","",361,null],[12,"delta","","",361,null],[13,"SubgroupShuffleXorINTEL","rspirv::sr::autogen_ops","",44,null],[12,"data","rspirv::sr::autogen_ops::Op","",362,null],[12,"value","","",362,null],[13,"SubgroupBlockReadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"ptr","rspirv::sr::autogen_ops::Op","",363,null],[13,"SubgroupBlockWriteINTEL","rspirv::sr::autogen_ops","",44,null],[12,"ptr","rspirv::sr::autogen_ops::Op","",364,null],[12,"data","","",364,null],[13,"SubgroupImageBlockReadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",365,null],[12,"coordinate","","",365,null],[13,"SubgroupImageBlockWriteINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",366,null],[12,"coordinate","","",366,null],[12,"data","","",366,null],[13,"SubgroupImageMediaBlockReadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",367,null],[12,"coordinate","","",367,null],[12,"width","","",367,null],[12,"height","","",367,null],[13,"SubgroupImageMediaBlockWriteINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image","rspirv::sr::autogen_ops::Op","",368,null],[12,"coordinate","","",368,null],[12,"width","","",368,null],[12,"height","","",368,null],[12,"data","","",368,null],[13,"UCountLeadingZerosINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",369,null],[13,"UCountTrailingZerosINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand","rspirv::sr::autogen_ops::Op","",370,null],[13,"AbsISubINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",371,null],[12,"operand_2","","",371,null],[13,"AbsUSubINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",372,null],[12,"operand_2","","",372,null],[13,"IAddSatINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",373,null],[12,"operand_2","","",373,null],[13,"UAddSatINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",374,null],[12,"operand_2","","",374,null],[13,"IAverageINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",375,null],[12,"operand_2","","",375,null],[13,"UAverageINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",376,null],[12,"operand_2","","",376,null],[13,"IAverageRoundedINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",377,null],[12,"operand_2","","",377,null],[13,"UAverageRoundedINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",378,null],[12,"operand_2","","",378,null],[13,"ISubSatINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",379,null],[12,"operand_2","","",379,null],[13,"USubSatINTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",380,null],[12,"operand_2","","",380,null],[13,"IMul32x16INTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",381,null],[12,"operand_2","","",381,null],[13,"UMul32x16INTEL","rspirv::sr::autogen_ops","",44,null],[12,"operand_1","rspirv::sr::autogen_ops::Op","",382,null],[12,"operand_2","","",382,null],[13,"DecorateString","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",383,null],[12,"decoration","","",383,null],[13,"DecorateStringGOOGLE","rspirv::sr::autogen_ops","",44,null],[12,"target","rspirv::sr::autogen_ops::Op","",384,null],[12,"decoration","","",384,null],[13,"MemberDecorateString","rspirv::sr::autogen_ops","",44,null],[12,"struct_type","rspirv::sr::autogen_ops::Op","",385,null],[12,"member","","",385,null],[12,"decoration","","",385,null],[13,"MemberDecorateStringGOOGLE","rspirv::sr::autogen_ops","",44,null],[12,"struct_type","rspirv::sr::autogen_ops::Op","",386,null],[12,"member","","",386,null],[12,"decoration","","",386,null],[13,"VmeImageINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image_type","rspirv::sr::autogen_ops::Op","",387,null],[12,"sampler","","",387,null],[13,"TypeVmeImageINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image_type","rspirv::sr::autogen_ops::Op","",388,null],[13,"TypeAvcImePayloadINTEL","rspirv::sr::autogen_ops","",44,null],[13,"TypeAvcRefPayloadINTEL","","",44,null],[13,"TypeAvcSicPayloadINTEL","","",44,null],[13,"TypeAvcMcePayloadINTEL","","",44,null],[13,"TypeAvcMceResultINTEL","","",44,null],[13,"TypeAvcImeResultINTEL","","",44,null],[13,"TypeAvcImeResultSingleReferenceStreamoutINTEL","","",44,null],[13,"TypeAvcImeResultDualReferenceStreamoutINTEL","","",44,null],[13,"TypeAvcImeSingleReferenceStreaminINTEL","","",44,null],[13,"TypeAvcImeDualReferenceStreaminINTEL","","",44,null],[13,"TypeAvcRefResultINTEL","","",44,null],[13,"TypeAvcSicResultINTEL","","",44,null],[13,"SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL","","",44,null],[12,"slice_type","rspirv::sr::autogen_ops::Op","",389,null],[12,"qp","","",389,null],[13,"SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"reference_base_penalty","rspirv::sr::autogen_ops::Op","",390,null],[12,"payload","","",390,null],[13,"SubgroupAvcMceGetDefaultInterShapePenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"slice_type","rspirv::sr::autogen_ops::Op","",391,null],[12,"qp","","",391,null],[13,"SubgroupAvcMceSetInterShapePenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"packed_shape_penalty","rspirv::sr::autogen_ops::Op","",392,null],[12,"payload","","",392,null],[13,"SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"slice_type","rspirv::sr::autogen_ops::Op","",393,null],[12,"qp","","",393,null],[13,"SubgroupAvcMceSetInterDirectionPenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"direction_cost","rspirv::sr::autogen_ops::Op","",394,null],[12,"payload","","",394,null],[13,"SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"slice_type","rspirv::sr::autogen_ops::Op","",395,null],[12,"qp","","",395,null],[13,"SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL","rspirv::sr::autogen_ops","",44,null],[12,"slice_type","rspirv::sr::autogen_ops::Op","",396,null],[12,"qp","","",396,null],[13,"SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL","rspirv::sr::autogen_ops","",44,null],[13,"SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL","","",44,null],[13,"SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL","","",44,null],[13,"SubgroupAvcMceSetMotionVectorCostFunctionINTEL","","",44,null],[12,"packed_cost_center_delta","rspirv::sr::autogen_ops::Op","",397,null],[12,"packed_cost_table","","",397,null],[12,"cost_precision","","",397,null],[12,"payload","","",397,null],[13,"SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"slice_type","rspirv::sr::autogen_ops::Op","",398,null],[12,"qp","","",398,null],[13,"SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[13,"SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL","","",44,null],[13,"SubgroupAvcMceSetAcOnlyHaarINTEL","","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",399,null],[13,"SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL","rspirv::sr::autogen_ops","",44,null],[12,"source_field_polarity","rspirv::sr::autogen_ops::Op","",400,null],[12,"payload","","",400,null],[13,"SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL","rspirv::sr::autogen_ops","",44,null],[12,"reference_field_polarity","rspirv::sr::autogen_ops::Op","",401,null],[12,"payload","","",401,null],[13,"SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL","rspirv::sr::autogen_ops","",44,null],[12,"forward_reference_field_polarity","rspirv::sr::autogen_ops::Op","",402,null],[12,"backward_reference_field_polarity","","",402,null],[12,"payload","","",402,null],[13,"SubgroupAvcMceConvertToImePayloadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",403,null],[13,"SubgroupAvcMceConvertToImeResultINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",404,null],[13,"SubgroupAvcMceConvertToRefPayloadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",405,null],[13,"SubgroupAvcMceConvertToRefResultINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",406,null],[13,"SubgroupAvcMceConvertToSicPayloadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",407,null],[13,"SubgroupAvcMceConvertToSicResultINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",408,null],[13,"SubgroupAvcMceGetMotionVectorsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",409,null],[13,"SubgroupAvcMceGetInterDistortionsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",410,null],[13,"SubgroupAvcMceGetBestInterDistortionsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",411,null],[13,"SubgroupAvcMceGetInterMajorShapeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",412,null],[13,"SubgroupAvcMceGetInterMinorShapeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",413,null],[13,"SubgroupAvcMceGetInterDirectionsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",414,null],[13,"SubgroupAvcMceGetInterMotionVectorCountINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",415,null],[13,"SubgroupAvcMceGetInterReferenceIdsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",416,null],[13,"SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL","rspirv::sr::autogen_ops","",44,null],[12,"packed_reference_ids","rspirv::sr::autogen_ops::Op","",417,null],[12,"packed_reference_parameter_field_polarities","","",417,null],[12,"payload","","",417,null],[13,"SubgroupAvcImeInitializeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_coord","rspirv::sr::autogen_ops::Op","",418,null],[12,"partition_mask","","",418,null],[12,"sad_adjustment","","",418,null],[13,"SubgroupAvcImeSetSingleReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"ref_offset","rspirv::sr::autogen_ops::Op","",419,null],[12,"search_window_config","","",419,null],[12,"payload","","",419,null],[13,"SubgroupAvcImeSetDualReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"fwd_ref_offset","rspirv::sr::autogen_ops::Op","",420,null],[12,"bwd_ref_offset","","",420,null],[12,"id_search_window_config","","",420,null],[12,"payload","","",420,null],[13,"SubgroupAvcImeRefWindowSizeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"search_window_config","rspirv::sr::autogen_ops::Op","",421,null],[12,"dual_ref","","",421,null],[13,"SubgroupAvcImeAdjustRefOffsetINTEL","rspirv::sr::autogen_ops","",44,null],[12,"ref_offset","rspirv::sr::autogen_ops::Op","",422,null],[12,"src_coord","","",422,null],[12,"ref_window_size","","",422,null],[12,"image_size","","",422,null],[13,"SubgroupAvcImeConvertToMcePayloadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",423,null],[13,"SubgroupAvcImeSetMaxMotionVectorCountINTEL","rspirv::sr::autogen_ops","",44,null],[12,"max_motion_vector_count","rspirv::sr::autogen_ops::Op","",424,null],[12,"payload","","",424,null],[13,"SubgroupAvcImeSetUnidirectionalMixDisableINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",425,null],[13,"SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL","rspirv::sr::autogen_ops","",44,null],[12,"threshold","rspirv::sr::autogen_ops::Op","",426,null],[12,"payload","","",426,null],[13,"SubgroupAvcImeSetWeightedSadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"packed_sad_weights","rspirv::sr::autogen_ops::Op","",427,null],[12,"payload","","",427,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",428,null],[12,"ref_image","","",428,null],[12,"payload","","",428,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",429,null],[12,"fwd_ref_image","","",429,null],[12,"bwd_ref_image","","",429,null],[12,"payload","","",429,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",430,null],[12,"ref_image","","",430,null],[12,"payload","","",430,null],[12,"streamin_components","","",430,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",431,null],[12,"fwd_ref_image","","",431,null],[12,"bwd_ref_image","","",431,null],[12,"payload","","",431,null],[12,"streamin_components","","",431,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",432,null],[12,"ref_image","","",432,null],[12,"payload","","",432,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",433,null],[12,"fwd_ref_image","","",433,null],[12,"bwd_ref_image","","",433,null],[12,"payload","","",433,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",434,null],[12,"ref_image","","",434,null],[12,"payload","","",434,null],[12,"streamin_components","","",434,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",435,null],[12,"fwd_ref_image","","",435,null],[12,"bwd_ref_image","","",435,null],[12,"payload","","",435,null],[12,"streamin_components","","",435,null],[13,"SubgroupAvcImeConvertToMceResultINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",436,null],[13,"SubgroupAvcImeGetSingleReferenceStreaminINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",437,null],[13,"SubgroupAvcImeGetDualReferenceStreaminINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",438,null],[13,"SubgroupAvcImeStripSingleReferenceStreamoutINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",439,null],[13,"SubgroupAvcImeStripDualReferenceStreamoutINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",440,null],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",441,null],[12,"major_shape","","",441,null],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",442,null],[12,"major_shape","","",442,null],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",443,null],[12,"major_shape","","",443,null],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",444,null],[12,"major_shape","","",444,null],[12,"direction","","",444,null],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",445,null],[12,"major_shape","","",445,null],[12,"direction","","",445,null],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",446,null],[12,"major_shape","","",446,null],[12,"direction","","",446,null],[13,"SubgroupAvcImeGetBorderReachedINTEL","rspirv::sr::autogen_ops","",44,null],[12,"image_select","rspirv::sr::autogen_ops::Op","",447,null],[12,"payload","","",447,null],[13,"SubgroupAvcImeGetTruncatedSearchIndicationINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",448,null],[13,"SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",449,null],[13,"SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",450,null],[13,"SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",451,null],[13,"SubgroupAvcFmeInitializeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_coord","rspirv::sr::autogen_ops::Op","",452,null],[12,"motion_vectors","","",452,null],[12,"major_shapes","","",452,null],[12,"minor_shapes","","",452,null],[12,"direction","","",452,null],[12,"pixel_resolution","","",452,null],[12,"sad_adjustment","","",452,null],[13,"SubgroupAvcBmeInitializeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_coord","rspirv::sr::autogen_ops::Op","",453,null],[12,"motion_vectors","","",453,null],[12,"major_shapes","","",453,null],[12,"minor_shapes","","",453,null],[12,"direction","","",453,null],[12,"pixel_resolution","","",453,null],[12,"bidirectional_weight","","",453,null],[12,"sad_adjustment","","",453,null],[13,"SubgroupAvcRefConvertToMcePayloadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",454,null],[13,"SubgroupAvcRefSetBidirectionalMixDisableINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",455,null],[13,"SubgroupAvcRefSetBilinearFilterEnableINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",456,null],[13,"SubgroupAvcRefEvaluateWithSingleReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",457,null],[12,"ref_image","","",457,null],[12,"payload","","",457,null],[13,"SubgroupAvcRefEvaluateWithDualReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",458,null],[12,"fwd_ref_image","","",458,null],[12,"bwd_ref_image","","",458,null],[12,"payload","","",458,null],[13,"SubgroupAvcRefEvaluateWithMultiReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",459,null],[12,"packed_reference_ids","","",459,null],[12,"payload","","",459,null],[13,"SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",460,null],[12,"packed_reference_ids","","",460,null],[12,"packed_reference_field_polarities","","",460,null],[12,"payload","","",460,null],[13,"SubgroupAvcRefConvertToMceResultINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",461,null],[13,"SubgroupAvcSicInitializeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_coord","rspirv::sr::autogen_ops::Op","",462,null],[13,"SubgroupAvcSicConfigureSkcINTEL","rspirv::sr::autogen_ops","",44,null],[12,"skip_block_partition_type","rspirv::sr::autogen_ops::Op","",463,null],[12,"skip_motion_vector_mask","","",463,null],[12,"motion_vectors","","",463,null],[12,"bidirectional_weight","","",463,null],[12,"sad_adjustment","","",463,null],[12,"payload","","",463,null],[13,"SubgroupAvcSicConfigureIpeLumaINTEL","rspirv::sr::autogen_ops","",44,null],[12,"luma_intra_partition_mask","rspirv::sr::autogen_ops::Op","",464,null],[12,"intra_neighbour_availabilty","","",464,null],[12,"left_edge_luma_pixels","","",464,null],[12,"upper_left_corner_luma_pixel","","",464,null],[12,"upper_edge_luma_pixels","","",464,null],[12,"upper_right_edge_luma_pixels","","",464,null],[12,"sad_adjustment","","",464,null],[12,"payload","","",464,null],[13,"SubgroupAvcSicConfigureIpeLumaChromaINTEL","rspirv::sr::autogen_ops","",44,null],[12,"luma_intra_partition_mask","rspirv::sr::autogen_ops::Op","",465,null],[12,"intra_neighbour_availabilty","","",465,null],[12,"left_edge_luma_pixels","","",465,null],[12,"upper_left_corner_luma_pixel","","",465,null],[12,"upper_edge_luma_pixels","","",465,null],[12,"upper_right_edge_luma_pixels","","",465,null],[12,"left_edge_chroma_pixels","","",465,null],[12,"upper_left_corner_chroma_pixel","","",465,null],[12,"upper_edge_chroma_pixels","","",465,null],[12,"sad_adjustment","","",465,null],[12,"payload","","",465,null],[13,"SubgroupAvcSicGetMotionVectorMaskINTEL","rspirv::sr::autogen_ops","",44,null],[12,"skip_block_partition_type","rspirv::sr::autogen_ops::Op","",466,null],[12,"direction","","",466,null],[13,"SubgroupAvcSicConvertToMcePayloadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",467,null],[13,"SubgroupAvcSicSetIntraLumaShapePenaltyINTEL","rspirv::sr::autogen_ops","",44,null],[12,"packed_shape_penalty","rspirv::sr::autogen_ops::Op","",468,null],[12,"payload","","",468,null],[13,"SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL","rspirv::sr::autogen_ops","",44,null],[12,"luma_mode_penalty","rspirv::sr::autogen_ops::Op","",469,null],[12,"luma_packed_neighbor_modes","","",469,null],[12,"luma_packed_non_dc_penalty","","",469,null],[12,"payload","","",469,null],[13,"SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL","rspirv::sr::autogen_ops","",44,null],[12,"chroma_mode_base_penalty","rspirv::sr::autogen_ops::Op","",470,null],[12,"payload","","",470,null],[13,"SubgroupAvcSicSetBilinearFilterEnableINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",471,null],[13,"SubgroupAvcSicSetSkcForwardTransformEnableINTEL","rspirv::sr::autogen_ops","",44,null],[12,"packed_sad_coefficients","rspirv::sr::autogen_ops::Op","",472,null],[12,"payload","","",472,null],[13,"SubgroupAvcSicSetBlockBasedRawSkipSadINTEL","rspirv::sr::autogen_ops","",44,null],[12,"block_based_skip_type","rspirv::sr::autogen_ops::Op","",473,null],[12,"payload","","",473,null],[13,"SubgroupAvcSicEvaluateIpeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",474,null],[12,"payload","","",474,null],[13,"SubgroupAvcSicEvaluateWithSingleReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",475,null],[12,"ref_image","","",475,null],[12,"payload","","",475,null],[13,"SubgroupAvcSicEvaluateWithDualReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",476,null],[12,"fwd_ref_image","","",476,null],[12,"bwd_ref_image","","",476,null],[12,"payload","","",476,null],[13,"SubgroupAvcSicEvaluateWithMultiReferenceINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",477,null],[12,"packed_reference_ids","","",477,null],[12,"payload","","",477,null],[13,"SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL","rspirv::sr::autogen_ops","",44,null],[12,"src_image","rspirv::sr::autogen_ops::Op","",478,null],[12,"packed_reference_ids","","",478,null],[12,"packed_reference_field_polarities","","",478,null],[12,"payload","","",478,null],[13,"SubgroupAvcSicConvertToMceResultINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",479,null],[13,"SubgroupAvcSicGetIpeLumaShapeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",480,null],[13,"SubgroupAvcSicGetBestIpeLumaDistortionINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",481,null],[13,"SubgroupAvcSicGetBestIpeChromaDistortionINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",482,null],[13,"SubgroupAvcSicGetPackedIpeLumaModesINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",483,null],[13,"SubgroupAvcSicGetIpeChromaModeINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",484,null],[13,"SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",485,null],[13,"SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",486,null],[13,"SubgroupAvcSicGetInterRawSadsINTEL","rspirv::sr::autogen_ops","",44,null],[12,"payload","rspirv::sr::autogen_ops::Op","",487,null],[13,"RayQueryGetRayTMinKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",488,null],[13,"RayQueryGetRayFlagsKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",489,null],[13,"RayQueryGetIntersectionTKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",490,null],[12,"intersection","","",490,null],[13,"RayQueryGetIntersectionInstanceCustomIndexKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",491,null],[12,"intersection","","",491,null],[13,"RayQueryGetIntersectionInstanceIdKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",492,null],[12,"intersection","","",492,null],[13,"RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",493,null],[12,"intersection","","",493,null],[13,"RayQueryGetIntersectionGeometryIndexKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",494,null],[12,"intersection","","",494,null],[13,"RayQueryGetIntersectionPrimitiveIndexKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",495,null],[12,"intersection","","",495,null],[13,"RayQueryGetIntersectionBarycentricsKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",496,null],[12,"intersection","","",496,null],[13,"RayQueryGetIntersectionFrontFaceKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",497,null],[12,"intersection","","",497,null],[13,"RayQueryGetIntersectionCandidateAABBOpaqueKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",498,null],[13,"RayQueryGetIntersectionObjectRayDirectionKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",499,null],[12,"intersection","","",499,null],[13,"RayQueryGetIntersectionObjectRayOriginKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",500,null],[12,"intersection","","",500,null],[13,"RayQueryGetWorldRayDirectionKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",501,null],[13,"RayQueryGetWorldRayOriginKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",502,null],[13,"RayQueryGetIntersectionObjectToWorldKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",503,null],[12,"intersection","","",503,null],[13,"RayQueryGetIntersectionWorldToObjectKHR","rspirv::sr::autogen_ops","",44,null],[12,"ray_query","rspirv::sr::autogen_ops::Op","",504,null],[12,"intersection","","",504,null],[0,"module","rspirv::sr","",null,null],[3,"EntryPoint","rspirv::sr::module","",null,null],[12,"execution_model","","",505,null],[12,"function","","",505,null],[12,"name","","",505,null],[3,"Block","","",null,null],[12,"arguments","","",506,null],[12,"ops","","",506,null],[12,"terminator","","",506,null],[3,"Jump","","Jump destination parameters.",null,null],[12,"block","","The block to jump to.",507,null],[12,"arguments","","The argument values corresponding to the block arguments.",507,null],[3,"Function","","",null,null],[12,"control","","",508,null],[12,"result","","Function result type.",508,null],[12,"parameters","","Function parameters.",508,null],[12,"blocks","","All blocks in this function.",508,null],[12,"start_block","","The first block of this function.",508,null],[3,"Module","","",null,null],[12,"version","","Version of the specification.",509,null],[12,"capabilities","","All OpCapability instructions.",509,null],[12,"extensions","","All OpExtension instructions.",509,null],[12,"ext_inst_imports","","All OpExtInstImport instructions.",509,null],[12,"memory_model","","The OpMemoryModel instruction.",509,null],[12,"entry_points","","All entry point declarations.",509,null],[12,"types","","All types",509,null],[12,"constants","","All constants.",509,null],[12,"ops","","All operations.",509,null],[12,"functions","","All functions.",509,null],[0,"storage","rspirv::sr","",null,null],[3,"Token","rspirv::sr::storage","A strongly typed reference to a SPIR-V element.",null,null],[11,"index","","",510,[[]]],[3,"Storage","","A structure holding some kind of SPIR-V entity (e.g., …",null,null],[11,"new","","",511,[[]]],[11,"append","","Adds a new value to the storage, returning a typed token.",511,[[],["token",3]]],[11,"fetch_or_append","","Adds a value with a check for uniqueness: returns a token …",511,[[],["token",3]]],[4,"Decoration","rspirv::sr","SPIR-V decorations.",null,null],[13,"RelaxedPrecision","","",512,null],[13,"SpecId","","",512,null],[13,"Block","","",512,null],[13,"BufferBlock","","",512,null],[13,"RowMajor","","",512,null],[13,"ColMajor","","",512,null],[13,"ArrayStride","","",512,null],[13,"MatrixStride","","",512,null],[13,"GLSLShared","","",512,null],[13,"GLSLPacked","","",512,null],[13,"CPacked","","",512,null],[13,"BuiltIn","","",512,null],[13,"NoPerspective","","",512,null],[13,"Flat","","",512,null],[13,"Patch","","",512,null],[13,"Centroid","","",512,null],[13,"Sample","","",512,null],[13,"Invariant","","",512,null],[13,"Restrict","","",512,null],[13,"Aliased","","",512,null],[13,"Volatile","","",512,null],[13,"Constant","","",512,null],[13,"Coherent","","",512,null],[13,"NonWritable","","",512,null],[13,"NonReadable","","",512,null],[13,"Uniform","","",512,null],[13,"UniformId","","",512,null],[13,"SaturatedConversion","","",512,null],[13,"Stream","","",512,null],[13,"Location","","",512,null],[13,"Component","","",512,null],[13,"Index","","",512,null],[13,"Binding","","",512,null],[13,"DescriptorSet","","",512,null],[13,"Offset","","",512,null],[13,"XfbBuffer","","",512,null],[13,"XfbStride","","",512,null],[13,"FuncParamAttr","","",512,null],[13,"FPRoundingMode","","",512,null],[13,"FPFastMathMode","","",512,null],[13,"LinkageAttributes","","",512,null],[13,"NoContraction","","",512,null],[13,"InputAttachmentIndex","","",512,null],[13,"Alignment","","",512,null],[13,"MaxByteOffset","","",512,null],[13,"AlignmentId","","",512,null],[13,"MaxByteOffsetId","","",512,null],[13,"NoSignedWrap","","",512,null],[13,"NoUnsignedWrap","","",512,null],[13,"ExplicitInterpAMD","","",512,null],[13,"OverrideCoverageNV","","",512,null],[13,"PassthroughNV","","",512,null],[13,"ViewportRelativeNV","","",512,null],[13,"SecondaryViewportRelativeNV","","",512,null],[13,"PerPrimitiveNV","","",512,null],[13,"PerViewNV","","",512,null],[13,"PerTaskNV","","",512,null],[13,"PerVertexNV","","",512,null],[13,"NonUniform","","",512,null],[13,"NonUniformEXT","","",512,null],[13,"RestrictPointer","","",512,null],[13,"RestrictPointerEXT","","",512,null],[13,"AliasedPointer","","",512,null],[13,"AliasedPointerEXT","","",512,null],[13,"CounterBuffer","","",512,null],[13,"HlslCounterBufferGOOGLE","","",512,null],[13,"UserSemantic","","",512,null],[13,"HlslSemanticGOOGLE","","",512,null],[13,"UserTypeGOOGLE","","",512,null],[4,"Constant","","Represents a SPIR-V constant.",null,null],[13,"Bool","","",513,null],[13,"Int","","",513,null],[13,"UInt","","",513,null],[13,"Float","","",513,null],[13,"Composite","","",513,null],[13,"Null","","",513,null],[13,"Sampler","","",513,null],[12,"addressing_mode","rspirv::sr::Constant","",514,null],[12,"normalized","","",514,null],[12,"filter_mode","","",514,null],[13,"SpecBool","rspirv::sr","",513,null],[13,"SpecInt","","",513,null],[13,"SpecUInt","","",513,null],[13,"SpecFloat","","",513,null],[13,"SpecComposite","","",513,null],[13,"SpecOp","","",513,null],[3,"StructMember","","",null,null],[12,"token","","",515,null],[12,"decorations","","",515,null],[4,"Type","","",null,null],[13,"Void","","",516,null],[13,"Bool","","",516,null],[13,"Int","","",516,null],[12,"width","rspirv::sr::Type","",517,null],[12,"signedness","","",517,null],[13,"Float","rspirv::sr","",516,null],[12,"width","rspirv::sr::Type","",518,null],[13,"Vector","rspirv::sr","",516,null],[12,"component_type","rspirv::sr::Type","",519,null],[12,"component_count","","",519,null],[13,"Matrix","rspirv::sr","",516,null],[12,"column_type","rspirv::sr::Type","",520,null],[12,"column_count","","",520,null],[13,"Image","rspirv::sr","",516,null],[12,"sampled_type","rspirv::sr::Type","",521,null],[12,"dim","","",521,null],[12,"depth","","",521,null],[12,"arrayed","","",521,null],[12,"ms","","",521,null],[12,"sampled","","",521,null],[12,"image_format","","",521,null],[12,"access_qualifier","","",521,null],[13,"Sampler","rspirv::sr","",516,null],[13,"SampledImage","","",516,null],[12,"image_type","rspirv::sr::Type","",522,null],[13,"Array","rspirv::sr","",516,null],[12,"element_type","rspirv::sr::Type","",523,null],[12,"length","","",523,null],[13,"RuntimeArray","rspirv::sr","",516,null],[12,"element_type","rspirv::sr::Type","",524,null],[13,"Struct","rspirv::sr","",516,null],[12,"member_0_type_member_1_type","rspirv::sr::Type","",525,null],[13,"Opaque","rspirv::sr","",516,null],[12,"the_name_of_the_opaque_type","rspirv::sr::Type","",526,null],[13,"Pointer","rspirv::sr","",516,null],[12,"storage_class","rspirv::sr::Type","",527,null],[12,"ty","","",527,null],[13,"Function","rspirv::sr","",516,null],[12,"return_type","rspirv::sr::Type","",528,null],[12,"parameter_0_type_parameter_1_type","","",528,null],[13,"Event","rspirv::sr","",516,null],[13,"DeviceEvent","","",516,null],[13,"ReserveId","","",516,null],[13,"Queue","","",516,null],[13,"Pipe","","",516,null],[12,"qualifier","rspirv::sr::Type","",529,null],[13,"ForwardPointer","rspirv::sr","",516,null],[12,"pointer_type","rspirv::sr::Type","",530,null],[12,"storage_class","","",530,null],[13,"PipeStorage","rspirv::sr","",516,null],[13,"NamedBarrier","","",516,null],[11,"from","rspirv::binary","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",531,[[]]],[11,"into","","",531,[[]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"try_into","","",531,[[],["result",4]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",532,[[]]],[11,"into","","",532,[[]]],[11,"borrow","","",532,[[]]],[11,"borrow_mut","","",532,[[]]],[11,"try_from","","",532,[[],["result",4]]],[11,"try_into","","",532,[[],["result",4]]],[11,"type_id","","",532,[[],["typeid",3]]],[11,"from","rspirv::dr","",533,[[]]],[11,"into","","",533,[[]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"try_into","","",533,[[],["result",4]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",534,[[]]],[11,"into","","",534,[[]]],[11,"borrow","","",534,[[]]],[11,"borrow_mut","","",534,[[]]],[11,"try_from","","",534,[[],["result",4]]],[11,"try_into","","",534,[[],["result",4]]],[11,"type_id","","",534,[[],["typeid",3]]],[11,"from","rspirv::grammar","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",535,[[]]],[11,"into","","",535,[[]]],[11,"borrow","","",535,[[]]],[11,"borrow_mut","","",535,[[]]],[11,"try_from","","",535,[[],["result",4]]],[11,"try_into","","",535,[[],["result",4]]],[11,"type_id","","",535,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",536,[[]]],[11,"into","","",536,[[]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"try_into","","",536,[[],["result",4]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"from","","",537,[[]]],[11,"into","","",537,[[]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"try_into","","",537,[[],["result",4]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"from","rspirv::lift","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","rspirv::sr","",512,[[]]],[11,"into","","",512,[[]]],[11,"to_owned","","",512,[[]]],[11,"clone_into","","",512,[[]]],[11,"borrow","","",512,[[]]],[11,"borrow_mut","","",512,[[]]],[11,"try_from","","",512,[[],["result",4]]],[11,"try_into","","",512,[[],["result",4]]],[11,"type_id","","",512,[[],["typeid",3]]],[11,"from","rspirv::sr::autogen_instructions","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",538,[[]]],[11,"into","","",538,[[]]],[11,"to_owned","","",538,[[]]],[11,"clone_into","","",538,[[]]],[11,"borrow","","",538,[[]]],[11,"borrow_mut","","",538,[[]]],[11,"try_from","","",538,[[],["result",4]]],[11,"try_into","","",538,[[],["result",4]]],[11,"type_id","","",538,[[],["typeid",3]]],[11,"from","","",539,[[]]],[11,"into","","",539,[[]]],[11,"to_owned","","",539,[[]]],[11,"clone_into","","",539,[[]]],[11,"borrow","","",539,[[]]],[11,"borrow_mut","","",539,[[]]],[11,"try_from","","",539,[[],["result",4]]],[11,"try_into","","",539,[[],["result",4]]],[11,"type_id","","",539,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","rspirv::sr::autogen_ops","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","rspirv::sr","",513,[[]]],[11,"into","","",513,[[]]],[11,"to_owned","","",513,[[]]],[11,"clone_into","","",513,[[]]],[11,"borrow","","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"try_into","","",513,[[],["result",4]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"from","rspirv::sr::module","",505,[[]]],[11,"into","","",505,[[]]],[11,"borrow","","",505,[[]]],[11,"borrow_mut","","",505,[[]]],[11,"try_from","","",505,[[],["result",4]]],[11,"try_into","","",505,[[],["result",4]]],[11,"type_id","","",505,[[],["typeid",3]]],[11,"from","","",506,[[]]],[11,"into","","",506,[[]]],[11,"borrow","","",506,[[]]],[11,"borrow_mut","","",506,[[]]],[11,"try_from","","",506,[[],["result",4]]],[11,"try_into","","",506,[[],["result",4]]],[11,"type_id","","",506,[[],["typeid",3]]],[11,"from","","",507,[[]]],[11,"into","","",507,[[]]],[11,"to_owned","","",507,[[]]],[11,"clone_into","","",507,[[]]],[11,"borrow","","",507,[[]]],[11,"borrow_mut","","",507,[[]]],[11,"try_from","","",507,[[],["result",4]]],[11,"try_into","","",507,[[],["result",4]]],[11,"type_id","","",507,[[],["typeid",3]]],[11,"from","","",508,[[]]],[11,"into","","",508,[[]]],[11,"borrow","","",508,[[]]],[11,"borrow_mut","","",508,[[]]],[11,"try_from","","",508,[[],["result",4]]],[11,"try_into","","",508,[[],["result",4]]],[11,"type_id","","",508,[[],["typeid",3]]],[11,"from","","",509,[[]]],[11,"into","","",509,[[]]],[11,"borrow","","",509,[[]]],[11,"borrow_mut","","",509,[[]]],[11,"try_from","","",509,[[],["result",4]]],[11,"try_into","","",509,[[],["result",4]]],[11,"type_id","","",509,[[],["typeid",3]]],[11,"from","rspirv::sr::storage","",510,[[]]],[11,"into","","",510,[[]]],[11,"to_owned","","",510,[[]]],[11,"clone_into","","",510,[[]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"try_into","","",510,[[],["result",4]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"from","","",511,[[]]],[11,"into","","",511,[[]]],[11,"borrow","","",511,[[]]],[11,"borrow_mut","","",511,[[]]],[11,"try_from","","",511,[[],["result",4]]],[11,"try_into","","",511,[[],["result",4]]],[11,"type_id","","",511,[[],["typeid",3]]],[11,"from","rspirv::sr","",515,[[]]],[11,"into","","",515,[[]]],[11,"to_owned","","",515,[[]]],[11,"clone_into","","",515,[[]]],[11,"borrow","","",515,[[]]],[11,"borrow_mut","","",515,[[]]],[11,"try_from","","",515,[[],["result",4]]],[11,"try_into","","",515,[[],["result",4]]],[11,"type_id","","",515,[[],["typeid",3]]],[11,"from","","",516,[[]]],[11,"into","","",516,[[]]],[11,"to_owned","","",516,[[]]],[11,"clone_into","","",516,[[]]],[11,"borrow","","",516,[[]]],[11,"borrow_mut","","",516,[[]]],[11,"try_from","","",516,[[],["result",4]]],[11,"try_into","","",516,[[],["result",4]]],[11,"type_id","","",516,[[],["typeid",3]]],[11,"assemble_into","rspirv::dr","",11,[[["vec",3]]]],[11,"assemble_into","","",12,[[["vec",3]]]],[11,"assemble_into","","",9,[[["vec",3]]]],[11,"assemble_into","","",7,[[["vec",3]]]],[11,"assemble_into","","",8,[[["vec",3]]]],[11,"assemble_into","","",10,[[["vec",3]]]],[11,"disassemble","","",11,[[],["string",3]]],[11,"disassemble","","",12,[[],["string",3]]],[11,"disassemble","","",9,[[],["string",3]]],[11,"disassemble","","",7,[[],["string",3]]],[11,"disassemble","","",8,[[],["string",3]]],[11,"disassemble","","Disassembles this module and returns the disassembly text.",10,[[],["string",3]]],[11,"initialize","","",534,[[],["parseaction",4]]],[11,"finalize","","",534,[[],["parseaction",4]]],[11,"consume_header","","",534,[[["moduleheader",3]],["parseaction",4]]],[11,"consume_instruction","","",534,[[["instruction",3]],["parseaction",4]]],[11,"from","rspirv::binary","",2,[[["decodeerror",4]]]],[11,"from","rspirv::dr","",12,[[["imageoperands",3]],["operand",4]]],[11,"from","","",12,[[["fpfastmathmode",3]],["operand",4]]],[11,"from","","",12,[[["selectioncontrol",3]],["operand",4]]],[11,"from","","",12,[[["loopcontrol",3]],["operand",4]]],[11,"from","","",12,[[["functioncontrol",3]],["operand",4]]],[11,"from","","",12,[[["memorysemantics",3]],["operand",4]]],[11,"from","","",12,[[["memoryaccess",3]],["operand",4]]],[11,"from","","",12,[[["kernelprofilinginfo",3]],["operand",4]]],[11,"from","","",12,[[["rayflags",3]],["operand",4]]],[11,"from","","",12,[[["sourcelanguage",4]],["operand",4]]],[11,"from","","",12,[[["executionmodel",4]],["operand",4]]],[11,"from","","",12,[[["addressingmodel",4]],["operand",4]]],[11,"from","","",12,[[["memorymodel",4]],["operand",4]]],[11,"from","","",12,[[["executionmode",4]],["operand",4]]],[11,"from","","",12,[[["storageclass",4]],["operand",4]]],[11,"from","","",12,[[["dim",4]],["operand",4]]],[11,"from","","",12,[[["sampleraddressingmode",4]],["operand",4]]],[11,"from","","",12,[[["samplerfiltermode",4]],["operand",4]]],[11,"from","","",12,[[["imageformat",4]],["operand",4]]],[11,"from","","",12,[[["imagechannelorder",4]],["operand",4]]],[11,"from","","",12,[[["imagechanneldatatype",4]],["operand",4]]],[11,"from","","",12,[[["fproundingmode",4]],["operand",4]]],[11,"from","","",12,[[["linkagetype",4]],["operand",4]]],[11,"from","","",12,[[["accessqualifier",4]],["operand",4]]],[11,"from","","",12,[[["functionparameterattribute",4]],["operand",4]]],[11,"from","","",12,[[["decoration",4]],["operand",4]]],[11,"from","","",12,[[["builtin",4]],["operand",4]]],[11,"from","","",12,[[["scope",4]],["operand",4]]],[11,"from","","",12,[[["groupoperation",4]],["operand",4]]],[11,"from","","",12,[[["kernelenqueueflags",4]],["operand",4]]],[11,"from","","",12,[[["capability",4]],["operand",4]]],[11,"from","","",12,[[["rayqueryintersection",4]],["operand",4]]],[11,"from","","",12,[[["rayquerycommittedintersectiontype",4]],["operand",4]]],[11,"from","","",12,[[["rayquerycandidateintersectiontype",4]],["operand",4]]],[11,"from","","",12,[[],["operand",4]]],[11,"from","","",12,[[],["operand",4]]],[11,"from","","",12,[[],["operand",4]]],[11,"from","","",12,[[["op",4]],["operand",4]]],[11,"from","","",12,[[["string",3]],["operand",4]]],[11,"from","","",12,[[]]],[11,"from","","Converts the given <code>u32</code> <code>val</code> into an <code>Operand::LiteralInt32</code>.",12,[[]]],[11,"from","rspirv::lift","",21,[[["operanderror",4]]]],[11,"from","","",22,[[["instructionerror",4]]]],[11,"from","rspirv::sr","",512,[[["builtin",4]],["decoration",4]]],[11,"from","","",512,[[["functionparameterattribute",4]],["decoration",4]]],[11,"from","","",512,[[["fproundingmode",4]],["decoration",4]]],[11,"from","","",512,[[["fpfastmathmode",3]],["decoration",4]]],[11,"from","","",512,[[],["decoration",4]]],[11,"clone","rspirv::dr","",10,[[],["module",3]]],[11,"clone","","",11,[[],["moduleheader",3]]],[11,"clone","","",8,[[],["function",3]]],[11,"clone","","",7,[[],["block",3]]],[11,"clone","","",9,[[],["instruction",3]]],[11,"clone","","",12,[[],["operand",4]]],[11,"clone","rspirv::grammar","",18,[[],["operandquantifier",4]]],[11,"clone","","",17,[[],["operandkind",4]]],[11,"clone","rspirv::lift","",20,[[],["operanderror",4]]],[11,"clone","","",21,[[],["instructionerror",4]]],[11,"clone","","",22,[[],["conversionerror",4]]],[11,"clone","rspirv::sr","",512,[[],["decoration",4]]],[11,"clone","rspirv::sr::autogen_instructions","",23,[[],["extension",3]]],[11,"clone","","",24,[[],["extinstimport",3]]],[11,"clone","","",25,[[],["extinst",3]]],[11,"clone","","",26,[[],["memorymodel",3]]],[11,"clone","","",27,[[],["entrypoint",3]]],[11,"clone","","",28,[[],["executionmode",3]]],[11,"clone","","",29,[[],["capability",3]]],[11,"clone","","",30,[[],["function",3]]],[11,"clone","","",538,[[],["functionparameter",3]]],[11,"clone","","",539,[[],["functionend",3]]],[11,"clone","","",31,[[],["functioncall",3]]],[11,"clone","","",32,[[],["executionmodeid",3]]],[11,"clone","rspirv::sr::autogen_ops","",33,[[],["branch",4]]],[11,"clone","","",43,[[],["terminator",4]]],[11,"clone","","",44,[[],["op",4]]],[11,"clone","rspirv::sr","",513,[[],["constant",4]]],[11,"clone","rspirv::sr::module","",507,[[],["jump",3]]],[11,"clone","rspirv::sr::storage","",510,[[]]],[11,"clone","rspirv::sr","",515,[[],["structmember",3]]],[11,"clone","","",516,[[],["type",4]]],[11,"default","rspirv::dr","",533,[[],["builder",3]]],[11,"default","","",10,[[],["module",3]]],[11,"default","","",8,[[],["function",3]]],[11,"default","","",7,[[],["block",3]]],[11,"default","","",534,[[],["loader",3]]],[11,"cmp","rspirv::sr","",512,[[["decoration",4]],["ordering",4]]],[11,"eq","rspirv::binary","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","rspirv::dr","",11,[[["moduleheader",3]]]],[11,"ne","","",11,[[["moduleheader",3]]]],[11,"eq","","",9,[[["instruction",3]]]],[11,"ne","","",9,[[["instruction",3]]]],[11,"eq","","",12,[[["operand",4]]]],[11,"ne","","",12,[[["operand",4]]]],[11,"eq","rspirv::grammar","",15,[[["instruction",3]]]],[11,"ne","","",15,[[["instruction",3]]]],[11,"eq","","",16,[[["logicaloperand",3]]]],[11,"ne","","",16,[[["logicaloperand",3]]]],[11,"eq","","",18,[[["operandquantifier",4]]]],[11,"eq","","",17,[[["operandkind",4]]]],[11,"eq","rspirv::sr","",512,[[["decoration",4]]]],[11,"ne","","",512,[[["decoration",4]]]],[11,"eq","rspirv::sr::autogen_instructions","",23,[[["extension",3]]]],[11,"ne","","",23,[[["extension",3]]]],[11,"eq","","",24,[[["extinstimport",3]]]],[11,"ne","","",24,[[["extinstimport",3]]]],[11,"eq","","",25,[[["extinst",3]]]],[11,"ne","","",25,[[["extinst",3]]]],[11,"eq","","",26,[[["memorymodel",3]]]],[11,"ne","","",26,[[["memorymodel",3]]]],[11,"eq","","",27,[[["entrypoint",3]]]],[11,"ne","","",27,[[["entrypoint",3]]]],[11,"eq","","",28,[[["executionmode",3]]]],[11,"ne","","",28,[[["executionmode",3]]]],[11,"eq","","",29,[[["capability",3]]]],[11,"ne","","",29,[[["capability",3]]]],[11,"eq","","",32,[[["executionmodeid",3]]]],[11,"ne","","",32,[[["executionmodeid",3]]]],[11,"eq","rspirv::sr::autogen_ops","",33,[[["branch",4]]]],[11,"ne","","",33,[[["branch",4]]]],[11,"eq","","",43,[[["terminator",4]]]],[11,"ne","","",43,[[["terminator",4]]]],[11,"eq","","",44,[[["op",4]]]],[11,"ne","","",44,[[["op",4]]]],[11,"eq","rspirv::sr","",513,[[["constant",4]]]],[11,"ne","","",513,[[["constant",4]]]],[11,"eq","rspirv::sr::module","",507,[[["jump",3]]]],[11,"ne","","",507,[[["jump",3]]]],[11,"eq","rspirv::sr::storage","",510,[[]]],[11,"eq","rspirv::sr","",516,[[]]],[11,"partial_cmp","","",512,[[["decoration",4]],[["option",4],["ordering",4]]]],[11,"lt","","",512,[[["decoration",4]]]],[11,"le","","",512,[[["decoration",4]]]],[11,"gt","","",512,[[["decoration",4]]]],[11,"ge","","",512,[[["decoration",4]]]],[11,"fmt","rspirv::binary","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::dr","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::grammar","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::lift","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr","",512,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr::autogen_instructions","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",538,[[["formatter",3]],["result",6]]],[11,"fmt","","",539,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr::autogen_ops","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr","",513,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr::module","",505,[[["formatter",3]],["result",6]]],[11,"fmt","","",506,[[["formatter",3]],["result",6]]],[11,"fmt","","",507,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr::storage","",510,[[["formatter",3]],["result",6]]],[11,"fmt","","",511,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::sr","",515,[[["formatter",3]],["result",6]]],[11,"fmt","","",516,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::binary","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rspirv::dr","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"index","rspirv::sr::storage","",511,[[["token",3]]]],[11,"hash","rspirv::grammar","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",17,[[]]],[11,"assemble","rspirv::binary","Assembles the current object and returns the binary code. …",4,[[],["vec",3]]],[11,"new","","Creates a new <code>Decoder</code> instance.",531,[[],["decoder",3]]],[11,"offset","","Returns the offset of the byte to decode next.",531,[[]]],[11,"word","","Decodes and returns the next raw SPIR-V word.",531,[[],[["error",4],["result",4],["word",6]]]],[11,"words","","Decodes and returns the next <code>n</code> raw SPIR-V words.",531,[[],[["error",4],["result",4],["vec",3]]]],[11,"set_limit","","Sets the limit to <code>num_words</code> words.",531,[[]]],[11,"clear_limit","","Clear the previously set limit (if any).",531,[[]]],[11,"has_limit","","Returns true if a limit has been set on this decoder.",531,[[]]],[11,"limit_reached","","Returns true if the previously set limit has been reached.",531,[[]]],[11,"id","","Decodes and returns the next SPIR-V word as an id.",531,[[],[["error",4],["result",4],["word",6]]]],[11,"string","","Decodes and returns a literal string.",531,[[],[["result",4],["string",3],["error",4]]]],[11,"int32","","Decodes and returns the next SPIR-V word as a 32-bit …",531,[[],[["result",4],["error",4]]]],[11,"int64","","Decodes and returns the next two SPIR-V words as a 64-bit …",531,[[],[["result",4],["error",4]]]],[11,"float32","","Decodes and returns the next SPIR-V word as a 32-bit …",531,[[],[["result",4],["error",4]]]],[11,"float64","","Decodes and returns the next two SPIR-V words as a 64-bit …",531,[[],[["result",4],["error",4]]]],[11,"ext_inst_integer","","Decodes and returns the next SPIR-V word as a 32-bit …",531,[[],[["result",4],["error",4]]]],[11,"image_operands","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["imageoperands",3],["result",4]]]],[11,"fp_fast_math_mode","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["fpfastmathmode",3],["result",4],["error",4]]]],[11,"selection_control","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["selectioncontrol",3],["result",4]]]],[11,"loop_control","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["loopcontrol",3],["error",4]]]],[11,"function_control","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["result",4],["functioncontrol",3]]]],[11,"memory_semantics","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["memorysemantics",3],["result",4],["error",4]]]],[11,"memory_access","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["memoryaccess",3],["result",4],["error",4]]]],[11,"kernel_profiling_info","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["result",4],["kernelprofilinginfo",3]]]],[11,"ray_flags","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["rayflags",3],["result",4]]]],[11,"source_language","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["sourcelanguage",4],["result",4],["error",4]]]],[11,"execution_model","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["result",4],["executionmodel",4]]]],[11,"addressing_model","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["addressingmodel",4],["result",4],["error",4]]]],[11,"memory_model","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["memorymodel",4],["result",4]]]],[11,"execution_mode","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["executionmode",4],["error",4]]]],[11,"storage_class","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["storageclass",4],["error",4]]]],[11,"dim","","Decodes and returns the next SPIR-V word as a SPIR-V Dim …",531,[[],[["dim",4],["result",4],["error",4]]]],[11,"sampler_addressing_mode","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["sampleraddressingmode",4],["result",4],["error",4]]]],[11,"sampler_filter_mode","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["error",4],["samplerfiltermode",4]]]],[11,"image_format","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["imageformat",4],["error",4]]]],[11,"image_channel_order","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["imagechannelorder",4],["error",4]]]],[11,"image_channel_data_type","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["imagechanneldatatype",4],["error",4]]]],[11,"fp_rounding_mode","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["fproundingmode",4],["error",4],["result",4]]]],[11,"linkage_type","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["linkagetype",4],["result",4],["error",4]]]],[11,"access_qualifier","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["accessqualifier",4],["error",4]]]],[11,"function_parameter_attribute","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["result",4],["functionparameterattribute",4]]]],[11,"decoration","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["decoration",4],["error",4],["result",4]]]],[11,"built_in","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["builtin",4],["error",4]]]],[11,"scope","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["scope",4],["error",4]]]],[11,"group_operation","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["groupoperation",4],["error",4],["result",4]]]],[11,"kernel_enqueue_flags","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["kernelenqueueflags",4],["result",4]]]],[11,"capability","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["capability",4],["result",4],["error",4]]]],[11,"ray_query_intersection","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["result",4],["rayqueryintersection",4],["error",4]]]],[11,"ray_query_committed_intersection_type","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["rayquerycommittedintersectiontype",4],["result",4]]]],[11,"ray_query_candidate_intersection_type","","Decodes and returns the next SPIR-V word as a SPIR-V …",531,[[],[["error",4],["result",4],["rayquerycandidateintersectiontype",4]]]],[11,"new","","Creates a new parser to parse the given <code>binary</code> and send …",532,[[["consumer",8]]]],[11,"parse","","Does the parsing.",532,[[],["result",6]]],[11,"new","rspirv::dr","Creates a new empty builder.",533,[[],["builder",3]]],[11,"new_from_module","","Create a new builder from an existing module",533,[[["module",3]],["builder",3]]],[11,"insert_into_block","","",533,[[["instruction",3],["insertpoint",4]],[["error",4],["result",4]]]],[11,"pop_instruction","","",533,[[],[["error",4],["result",4],["instruction",3]]]],[11,"set_version","","Sets the SPIR-V version to the given major.minor version.",533,[[]]],[11,"version","","Get the SPIR-V version as a (major, minor) tuple",533,[[],["option",4]]],[11,"module","","Returns the <code>Module</code> under construction.",533,[[],["module",3]]],[11,"module_ref","","Returns the <code>Module</code> under construction as a reference. …",533,[[],["module",3]]],[11,"module_mut","","Returns the <code>Module</code> under construction as a mutable …",533,[[],["module",3]]],[11,"selected_function","","",533,[[],["option",4]]],[11,"selected_block","","",533,[[],["option",4]]],[11,"id","","Returns the next unused id.",533,[[],["word",6]]],[11,"dedup_insert_type","","Insert a OpType instruction, deduplicate it if needed and …",533,[[["instruction",3]],[["word",6],["option",4]]]],[11,"find_return_block_indices","","Find all blocks that end in OpReturn",533,[[],["vec",3]]],[11,"select_function_by_name","","Select a function to insert instructions into by name",533,[[],[["error",4],["result",4]]]],[11,"select_function","","Select a function to insert instructions into by index …",533,[[["option",4]],[["error",4],["result",4]]]],[11,"select_block","","Select a basic block (by index) to insert instructions …",533,[[["option",4]],[["error",4],["result",4]]]],[11,"begin_function","","Begins building of a new function.",533,[[["option",4],["word",6],["functioncontrol",3]],[["error",4],["result",4],["word",6]]]],[11,"end_function","","Ends building of the current function.",533,[[],[["error",4],["result",4]]]],[11,"function_parameter","","Declares a formal parameter for the current function.",533,[[["word",6]],[["error",4],["result",4],["word",6]]]],[11,"begin_block","","Begins building of a new block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"begin_block_no_label","","Begins building of a new block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"capability","","Appends an OpCapability instruction.",533,[[["capability",4]]]],[11,"extension","","Appends an OpExtension instruction.",533,[[]]],[11,"ext_inst_import","","Appends an OpExtInstImport instruction and returns the …",533,[[],["word",6]]],[11,"memory_model","","Appends an OpMemoryModel instruction.",533,[[["addressingmodel",4],["memorymodel",4]]]],[11,"entry_point","","Appends an OpEntryPoint instruction.",533,[[["executionmodel",4],["word",6]]]],[11,"execution_mode","","Appends an OpExecutionMode instruction.",533,[[["executionmode",4],["word",6]]]],[11,"ext_inst","","",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"type_void","","Appends an OpTypeVoid instruction and returns the result …",533,[[],["word",6]]],[11,"type_bool","","Appends an OpTypeBool instruction and returns the result …",533,[[],["word",6]]],[11,"type_int","","Appends an OpTypeInt instruction and returns the result …",533,[[],["word",6]]],[11,"type_float","","Appends an OpTypeFloat instruction and returns the result …",533,[[],["word",6]]],[11,"type_vector","","Appends an OpTypeVector instruction and returns the …",533,[[["word",6]],["word",6]]],[11,"type_matrix","","Appends an OpTypeMatrix instruction and returns the …",533,[[["word",6]],["word",6]]],[11,"type_image","","Appends an OpTypeImage instruction and returns the result …",533,[[["imageformat",4],["word",6],["dim",4],["option",4],["accessqualifier",4]],["word",6]]],[11,"type_sampler","","Appends an OpTypeSampler instruction and returns the …",533,[[],["word",6]]],[11,"type_sampled_image","","Appends an OpTypeSampledImage instruction and returns the …",533,[[["word",6]],["word",6]]],[11,"type_array","","Appends an OpTypeArray instruction and returns the result …",533,[[["word",6]],["word",6]]],[11,"type_runtime_array","","Appends an OpTypeRuntimeArray instruction and returns the …",533,[[["word",6]],["word",6]]],[11,"type_struct","","Appends an OpTypeStruct instruction and returns the …",533,[[],["word",6]]],[11,"type_function","","Appends an OpTypeFunction instruction and returns the …",533,[[["word",6]],["word",6]]],[11,"type_event","","Appends an OpTypeEvent instruction and returns the result …",533,[[],["word",6]]],[11,"type_device_event","","Appends an OpTypeDeviceEvent instruction and returns the …",533,[[],["word",6]]],[11,"type_reserve_id","","Appends an OpTypeReserveId instruction and returns the …",533,[[],["word",6]]],[11,"type_queue","","Appends an OpTypeQueue instruction and returns the result …",533,[[],["word",6]]],[11,"type_pipe","","Appends an OpTypePipe instruction and returns the result …",533,[[["accessqualifier",4]],["word",6]]],[11,"type_pipe_storage","","Appends an OpTypePipeStorage instruction and returns the …",533,[[],["word",6]]],[11,"type_named_barrier","","Appends an OpTypeNamedBarrier instruction and returns the …",533,[[],["word",6]]],[11,"constant_true","","Appends an OpConstantTrue instruction.",533,[[["word",6]],["word",6]]],[11,"constant_false","","Appends an OpConstantFalse instruction.",533,[[["word",6]],["word",6]]],[11,"constant_composite","","Appends an OpConstantComposite instruction.",533,[[["word",6]],["word",6]]],[11,"constant_sampler","","Appends an OpConstantSampler instruction.",533,[[["samplerfiltermode",4],["sampleraddressingmode",4],["word",6]],["word",6]]],[11,"constant_null","","Appends an OpConstantNull instruction.",533,[[["word",6]],["word",6]]],[11,"spec_constant_true","","Appends an OpSpecConstantTrue instruction.",533,[[["word",6]],["word",6]]],[11,"spec_constant_false","","Appends an OpSpecConstantFalse instruction.",533,[[["word",6]],["word",6]]],[11,"spec_constant_composite","","Appends an OpSpecConstantComposite instruction.",533,[[["word",6]],["word",6]]],[11,"spec_constant_op","","Appends an OpSpecConstantOp instruction.",533,[[["op",4],["word",6]],["word",6]]],[11,"decorate","","Appends an OpDecorate instruction.",533,[[["decoration",4],["word",6]]]],[11,"member_decorate","","Appends an OpMemberDecorate instruction.",533,[[["decoration",4],["word",6]]]],[11,"group_decorate","","Appends an OpGroupDecorate instruction.",533,[[["word",6]]]],[11,"group_member_decorate","","Appends an OpGroupMemberDecorate instruction.",533,[[["word",6]]]],[11,"decorate_id","","Appends an OpDecorateId instruction.",533,[[["decoration",4],["word",6]]]],[11,"decorate_string","","Appends an OpDecorateString instruction.",533,[[["decoration",4],["word",6]]]],[11,"decorate_string_google","","Appends an OpDecorateStringGOOGLE instruction.",533,[[["decoration",4],["word",6]]]],[11,"member_decorate_string","","Appends an OpMemberDecorateString instruction.",533,[[["decoration",4],["word",6]]]],[11,"member_decorate_string_google","","Appends an OpMemberDecorateStringGOOGLE instruction.",533,[[["decoration",4],["word",6]]]],[11,"loop_merge","","Appends an OpLoopMerge instruction and ends the current …",533,[[["loopcontrol",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_loop_merge","","Insert an OpLoopMerge instruction and ends the current …",533,[[["word",6],["loopcontrol",3],["insertpoint",4]],[["error",4],["result",4]]]],[11,"selection_merge","","Appends an OpSelectionMerge instruction and ends the …",533,[[["selectioncontrol",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_selection_merge","","Insert an OpSelectionMerge instruction and ends the …",533,[[["word",6],["selectioncontrol",3],["insertpoint",4]],[["error",4],["result",4]]]],[11,"branch","","Appends an OpBranch instruction and ends the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_branch","","Insert an OpBranch instruction and ends the current block.",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"branch_conditional","","Appends an OpBranchConditional instruction and ends the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_branch_conditional","","Insert an OpBranchConditional instruction and ends the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"switch","","Appends an OpSwitch instruction and ends the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_switch","","Insert an OpSwitch instruction and ends the current block.",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"kill","","Appends an OpKill instruction and ends the current block.",533,[[],[["error",4],["result",4]]]],[11,"insert_kill","","Insert an OpKill instruction and ends the current block.",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"ret","","Appends an OpReturn instruction and ends the current …",533,[[],[["error",4],["result",4]]]],[11,"insert_ret","","Insert an OpReturn instruction and ends the current block.",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"ret_value","","Appends an OpReturnValue instruction and ends the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_ret_value","","Insert an OpReturnValue instruction and ends the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"unreachable","","Appends an OpUnreachable instruction and ends the current …",533,[[],[["error",4],["result",4]]]],[11,"insert_unreachable","","Insert an OpUnreachable instruction and ends the current …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"lifetime_start","","Appends an OpLifetimeStart instruction and ends the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_lifetime_start","","Insert an OpLifetimeStart instruction and ends the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"lifetime_stop","","Appends an OpLifetimeStop instruction and ends the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_lifetime_stop","","Insert an OpLifetimeStop instruction and ends the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"source_continued","","Appends an OpSourceContinued instruction.",533,[[]]],[11,"source","","Appends an OpSource instruction.",533,[[["sourcelanguage",4],["option",4],["word",6],["option",4]]]],[11,"source_extension","","Appends an OpSourceExtension instruction.",533,[[]]],[11,"name","","Appends an OpName instruction.",533,[[["word",6]]]],[11,"member_name","","Appends an OpMemberName instruction.",533,[[["word",6]]]],[11,"line","","Appends an OpLine instruction.",533,[[["word",6]]]],[11,"no_line","","Appends an OpNoLine instruction.",533,[[]]],[11,"module_processed","","Appends an OpModuleProcessed instruction.",533,[[]]],[11,"decoration_group","","Appends an OpDecorationGroup instruction and returns the …",533,[[],["word",6]]],[11,"string","","",533,[[],["word",6]]],[11,"type_forward_pointer","","Appends an OpTypeForwardPointer instruction.",533,[[["storageclass",4],["word",6]]]],[11,"type_pointer","","Appends an OpTypePointer instruction and returns the …",533,[[["option",4],["word",6],["storageclass",4]],["word",6]]],[11,"type_opaque","","Appends an OpTypeOpaque instruction and returns the …",533,[[],["word",6]]],[11,"type_struct_id","","Appends an OpTypeStruct instruction and returns the …",533,[[["option",4],["word",6]],["word",6]]],[11,"constant_f32","","Appends an OpConstant instruction with the given 32-bit …",533,[[["word",6]],["word",6]]],[11,"constant_f64","","Appends an OpConstant instruction with the given 64-bit …",533,[[["word",6]],["word",6]]],[11,"constant_u32","","Appends an OpConstant instruction with the given 32-bit …",533,[[["word",6]],["word",6]]],[11,"constant_u64","","Appends an OpConstant instruction with the given 64-bit …",533,[[["word",6]],["word",6]]],[11,"spec_constant_f32","","Appends an OpSpecConstant instruction with the given …",533,[[["word",6]],["word",6]]],[11,"spec_constant_f64","","Appends an OpSpecConstant instruction with the given …",533,[[["word",6]],["word",6]]],[11,"spec_constant_u32","","Appends an OpSpecConstant instruction with the given …",533,[[["word",6]],["word",6]]],[11,"spec_constant_u64","","Appends an OpSpecConstant instruction with the given …",533,[[["word",6]],["word",6]]],[11,"variable","","Appends an OpVariable instruction to either the current …",533,[[["option",4],["word",6],["storageclass",4]],["word",6]]],[11,"undef","","Appends an OpUndef instruction to either the current block…",533,[[["option",4],["word",6]],["word",6]]],[11,"nop","","Appends an OpNop instruction to the current block.",533,[[],[["error",4],["result",4]]]],[11,"insert_nop","","Appends an OpNop instruction to the current block.",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"function_call","","Appends an OpFunctionCall instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_function_call","","Appends an OpFunctionCall instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_texel_pointer","","Appends an OpImageTexelPointer instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_texel_pointer","","Appends an OpImageTexelPointer instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"load","","Appends an OpLoad instruction to the current block.",533,[[["option",4],["memoryaccess",3],["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_load","","Appends an OpLoad instruction to the current block.",533,[[["option",4],["memoryaccess",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"store","","Appends an OpStore instruction to the current block.",533,[[["option",4],["memoryaccess",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_store","","Appends an OpStore instruction to the current block.",533,[[["option",4],["memoryaccess",3],["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"copy_memory","","Appends an OpCopyMemory instruction to the current block.",533,[[["option",4],["memoryaccess",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_copy_memory","","Appends an OpCopyMemory instruction to the current block.",533,[[["option",4],["memoryaccess",3],["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"copy_memory_sized","","Appends an OpCopyMemorySized instruction to the current …",533,[[["option",4],["memoryaccess",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_copy_memory_sized","","Appends an OpCopyMemorySized instruction to the current …",533,[[["option",4],["memoryaccess",3],["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"access_chain","","Appends an OpAccessChain instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_access_chain","","Appends an OpAccessChain instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"in_bounds_access_chain","","Appends an OpInBoundsAccessChain instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_in_bounds_access_chain","","Appends an OpInBoundsAccessChain instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ptr_access_chain","","Appends an OpPtrAccessChain instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ptr_access_chain","","Appends an OpPtrAccessChain instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"array_length","","Appends an OpArrayLength instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_array_length","","Appends an OpArrayLength instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"generic_ptr_mem_semantics","","Appends an OpGenericPtrMemSemantics instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_generic_ptr_mem_semantics","","Appends an OpGenericPtrMemSemantics instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"in_bounds_ptr_access_chain","","Appends an OpInBoundsPtrAccessChain instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_in_bounds_ptr_access_chain","","Appends an OpInBoundsPtrAccessChain instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"vector_extract_dynamic","","Appends an OpVectorExtractDynamic instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_vector_extract_dynamic","","Appends an OpVectorExtractDynamic instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"vector_insert_dynamic","","Appends an OpVectorInsertDynamic instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_vector_insert_dynamic","","Appends an OpVectorInsertDynamic instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"vector_shuffle","","Appends an OpVectorShuffle instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_vector_shuffle","","Appends an OpVectorShuffle instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"composite_construct","","Appends an OpCompositeConstruct instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_composite_construct","","Appends an OpCompositeConstruct instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"composite_extract","","Appends an OpCompositeExtract instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_composite_extract","","Appends an OpCompositeExtract instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"composite_insert","","Appends an OpCompositeInsert instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_composite_insert","","Appends an OpCompositeInsert instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"copy_object","","Appends an OpCopyObject instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_copy_object","","Appends an OpCopyObject instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"transpose","","Appends an OpTranspose instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_transpose","","Appends an OpTranspose instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"sampled_image","","Appends an OpSampledImage instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_sampled_image","","Appends an OpSampledImage instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_implicit_lod","","Appends an OpImageSampleImplicitLod instruction to the …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_implicit_lod","","Appends an OpImageSampleImplicitLod instruction to the …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_explicit_lod","","Appends an OpImageSampleExplicitLod instruction to the …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_explicit_lod","","Appends an OpImageSampleExplicitLod instruction to the …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_dref_implicit_lod","","Appends an OpImageSampleDrefImplicitLod instruction to …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_dref_implicit_lod","","Appends an OpImageSampleDrefImplicitLod instruction to …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_dref_explicit_lod","","Appends an OpImageSampleDrefExplicitLod instruction to …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_dref_explicit_lod","","Appends an OpImageSampleDrefExplicitLod instruction to …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_proj_implicit_lod","","Appends an OpImageSampleProjImplicitLod instruction to …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_proj_implicit_lod","","Appends an OpImageSampleProjImplicitLod instruction to …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_proj_explicit_lod","","Appends an OpImageSampleProjExplicitLod instruction to …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_proj_explicit_lod","","Appends an OpImageSampleProjExplicitLod instruction to …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_proj_dref_implicit_lod","","Appends an OpImageSampleProjDrefImplicitLod instruction …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_proj_dref_implicit_lod","","Appends an OpImageSampleProjDrefImplicitLod instruction …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_proj_dref_explicit_lod","","Appends an OpImageSampleProjDrefExplicitLod instruction …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_proj_dref_explicit_lod","","Appends an OpImageSampleProjDrefExplicitLod instruction …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_fetch","","Appends an OpImageFetch instruction to the current block.",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_fetch","","Appends an OpImageFetch instruction to the current block.",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_gather","","Appends an OpImageGather instruction to the current block.",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_gather","","Appends an OpImageGather instruction to the current block.",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_dref_gather","","Appends an OpImageDrefGather instruction to the current …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_dref_gather","","Appends an OpImageDrefGather instruction to the current …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_read","","Appends an OpImageRead instruction to the current block.",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_read","","Appends an OpImageRead instruction to the current block.",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_write","","Appends an OpImageWrite instruction to the current block.",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_image_write","","Appends an OpImageWrite instruction to the current block.",533,[[["imageoperands",3],["word",6],["insertpoint",4],["option",4]],[["error",4],["result",4]]]],[11,"image","","Appends an OpImage instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image","","Appends an OpImage instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_format","","Appends an OpImageQueryFormat instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_format","","Appends an OpImageQueryFormat instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_order","","Appends an OpImageQueryOrder instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_order","","Appends an OpImageQueryOrder instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_size_lod","","Appends an OpImageQuerySizeLod instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_size_lod","","Appends an OpImageQuerySizeLod instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_size","","Appends an OpImageQuerySize instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_size","","Appends an OpImageQuerySize instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_lod","","Appends an OpImageQueryLod instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_lod","","Appends an OpImageQueryLod instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_levels","","Appends an OpImageQueryLevels instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_levels","","Appends an OpImageQueryLevels instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_query_samples","","Appends an OpImageQuerySamples instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_query_samples","","Appends an OpImageQuerySamples instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"convert_f_to_u","","Appends an OpConvertFToU instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_convert_f_to_u","","Appends an OpConvertFToU instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"convert_f_to_s","","Appends an OpConvertFToS instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_convert_f_to_s","","Appends an OpConvertFToS instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"convert_s_to_f","","Appends an OpConvertSToF instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_convert_s_to_f","","Appends an OpConvertSToF instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"convert_u_to_f","","Appends an OpConvertUToF instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_convert_u_to_f","","Appends an OpConvertUToF instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_convert","","Appends an OpUConvert instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_convert","","Appends an OpUConvert instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_convert","","Appends an OpSConvert instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_convert","","Appends an OpSConvert instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_convert","","Appends an OpFConvert instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_convert","","Appends an OpFConvert instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"quantize_to_f16","","Appends an OpQuantizeToF16 instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_quantize_to_f16","","Appends an OpQuantizeToF16 instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"convert_ptr_to_u","","Appends an OpConvertPtrToU instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_convert_ptr_to_u","","Appends an OpConvertPtrToU instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"sat_convert_s_to_u","","Appends an OpSatConvertSToU instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_sat_convert_s_to_u","","Appends an OpSatConvertSToU instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"sat_convert_u_to_s","","Appends an OpSatConvertUToS instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_sat_convert_u_to_s","","Appends an OpSatConvertUToS instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"convert_u_to_ptr","","Appends an OpConvertUToPtr instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_convert_u_to_ptr","","Appends an OpConvertUToPtr instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ptr_cast_to_generic","","Appends an OpPtrCastToGeneric instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ptr_cast_to_generic","","Appends an OpPtrCastToGeneric instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"generic_cast_to_ptr","","Appends an OpGenericCastToPtr instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_generic_cast_to_ptr","","Appends an OpGenericCastToPtr instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"generic_cast_to_ptr_explicit","","Appends an OpGenericCastToPtrExplicit instruction to the …",533,[[["option",4],["storageclass",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_generic_cast_to_ptr_explicit","","Appends an OpGenericCastToPtrExplicit instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["storageclass",4]],[["error",4],["result",4],["word",6]]]],[11,"bitcast","","Appends an OpBitcast instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bitcast","","Appends an OpBitcast instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_negate","","Appends an OpSNegate instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_negate","","Appends an OpSNegate instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_negate","","Appends an OpFNegate instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_negate","","Appends an OpFNegate instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_add","","Appends an OpIAdd instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_add","","Appends an OpIAdd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_add","","Appends an OpFAdd instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_add","","Appends an OpFAdd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_sub","","Appends an OpISub instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_sub","","Appends an OpISub instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_sub","","Appends an OpFSub instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_sub","","Appends an OpFSub instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_mul","","Appends an OpIMul instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_mul","","Appends an OpIMul instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_mul","","Appends an OpFMul instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_mul","","Appends an OpFMul instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_div","","Appends an OpUDiv instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_div","","Appends an OpUDiv instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_div","","Appends an OpSDiv instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_div","","Appends an OpSDiv instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_div","","Appends an OpFDiv instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_div","","Appends an OpFDiv instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_mod","","Appends an OpUMod instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_mod","","Appends an OpUMod instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_rem","","Appends an OpSRem instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_rem","","Appends an OpSRem instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_mod","","Appends an OpSMod instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_mod","","Appends an OpSMod instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_rem","","Appends an OpFRem instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_rem","","Appends an OpFRem instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_mod","","Appends an OpFMod instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_mod","","Appends an OpFMod instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"vector_times_scalar","","Appends an OpVectorTimesScalar instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_vector_times_scalar","","Appends an OpVectorTimesScalar instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"matrix_times_scalar","","Appends an OpMatrixTimesScalar instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_matrix_times_scalar","","Appends an OpMatrixTimesScalar instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"vector_times_matrix","","Appends an OpVectorTimesMatrix instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_vector_times_matrix","","Appends an OpVectorTimesMatrix instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"matrix_times_vector","","Appends an OpMatrixTimesVector instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_matrix_times_vector","","Appends an OpMatrixTimesVector instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"matrix_times_matrix","","Appends an OpMatrixTimesMatrix instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_matrix_times_matrix","","Appends an OpMatrixTimesMatrix instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"outer_product","","Appends an OpOuterProduct instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_outer_product","","Appends an OpOuterProduct instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"dot","","Appends an OpDot instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_dot","","Appends an OpDot instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_add_carry","","Appends an OpIAddCarry instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_add_carry","","Appends an OpIAddCarry instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_sub_borrow","","Appends an OpISubBorrow instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_sub_borrow","","Appends an OpISubBorrow instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_mul_extended","","Appends an OpUMulExtended instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_mul_extended","","Appends an OpUMulExtended instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_mul_extended","","Appends an OpSMulExtended instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_mul_extended","","Appends an OpSMulExtended instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"any","","Appends an OpAny instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_any","","Appends an OpAny instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"all","","Appends an OpAll instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_all","","Appends an OpAll instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"is_nan","","Appends an OpIsNan instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_nan","","Appends an OpIsNan instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"is_inf","","Appends an OpIsInf instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_inf","","Appends an OpIsInf instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"is_finite","","Appends an OpIsFinite instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_finite","","Appends an OpIsFinite instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"is_normal","","Appends an OpIsNormal instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_normal","","Appends an OpIsNormal instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"sign_bit_set","","Appends an OpSignBitSet instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_sign_bit_set","","Appends an OpSignBitSet instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"less_or_greater","","Appends an OpLessOrGreater instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_less_or_greater","","Appends an OpLessOrGreater instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ordered","","Appends an OpOrdered instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ordered","","Appends an OpOrdered instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"unordered","","Appends an OpUnordered instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_unordered","","Appends an OpUnordered instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"logical_equal","","Appends an OpLogicalEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_logical_equal","","Appends an OpLogicalEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"logical_not_equal","","Appends an OpLogicalNotEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_logical_not_equal","","Appends an OpLogicalNotEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"logical_or","","Appends an OpLogicalOr instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_logical_or","","Appends an OpLogicalOr instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"logical_and","","Appends an OpLogicalAnd instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_logical_and","","Appends an OpLogicalAnd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"logical_not","","Appends an OpLogicalNot instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_logical_not","","Appends an OpLogicalNot instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"select","","Appends an OpSelect instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_select","","Appends an OpSelect instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_equal","","Appends an OpIEqual instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_equal","","Appends an OpIEqual instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_not_equal","","Appends an OpINotEqual instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_not_equal","","Appends an OpINotEqual instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_greater_than","","Appends an OpUGreaterThan instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_greater_than","","Appends an OpUGreaterThan instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_greater_than","","Appends an OpSGreaterThan instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_greater_than","","Appends an OpSGreaterThan instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_greater_than_equal","","Appends an OpUGreaterThanEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_greater_than_equal","","Appends an OpUGreaterThanEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_greater_than_equal","","Appends an OpSGreaterThanEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_greater_than_equal","","Appends an OpSGreaterThanEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_less_than","","Appends an OpULessThan instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_less_than","","Appends an OpULessThan instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_less_than","","Appends an OpSLessThan instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_less_than","","Appends an OpSLessThan instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_less_than_equal","","Appends an OpULessThanEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_less_than_equal","","Appends an OpULessThanEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"s_less_than_equal","","Appends an OpSLessThanEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_s_less_than_equal","","Appends an OpSLessThanEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_ord_equal","","Appends an OpFOrdEqual instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_ord_equal","","Appends an OpFOrdEqual instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_unord_equal","","Appends an OpFUnordEqual instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_unord_equal","","Appends an OpFUnordEqual instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_ord_not_equal","","Appends an OpFOrdNotEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_ord_not_equal","","Appends an OpFOrdNotEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_unord_not_equal","","Appends an OpFUnordNotEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_unord_not_equal","","Appends an OpFUnordNotEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_ord_less_than","","Appends an OpFOrdLessThan instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_ord_less_than","","Appends an OpFOrdLessThan instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_unord_less_than","","Appends an OpFUnordLessThan instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_unord_less_than","","Appends an OpFUnordLessThan instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_ord_greater_than","","Appends an OpFOrdGreaterThan instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_ord_greater_than","","Appends an OpFOrdGreaterThan instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_unord_greater_than","","Appends an OpFUnordGreaterThan instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_unord_greater_than","","Appends an OpFUnordGreaterThan instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_ord_less_than_equal","","Appends an OpFOrdLessThanEqual instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_ord_less_than_equal","","Appends an OpFOrdLessThanEqual instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_unord_less_than_equal","","Appends an OpFUnordLessThanEqual instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_unord_less_than_equal","","Appends an OpFUnordLessThanEqual instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_ord_greater_than_equal","","Appends an OpFOrdGreaterThanEqual instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_ord_greater_than_equal","","Appends an OpFOrdGreaterThanEqual instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"f_unord_greater_than_equal","","Appends an OpFUnordGreaterThanEqual instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_f_unord_greater_than_equal","","Appends an OpFUnordGreaterThanEqual instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"shift_right_logical","","Appends an OpShiftRightLogical instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_shift_right_logical","","Appends an OpShiftRightLogical instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"shift_right_arithmetic","","Appends an OpShiftRightArithmetic instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_shift_right_arithmetic","","Appends an OpShiftRightArithmetic instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"shift_left_logical","","Appends an OpShiftLeftLogical instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_shift_left_logical","","Appends an OpShiftLeftLogical instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bitwise_or","","Appends an OpBitwiseOr instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bitwise_or","","Appends an OpBitwiseOr instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bitwise_xor","","Appends an OpBitwiseXor instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bitwise_xor","","Appends an OpBitwiseXor instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bitwise_and","","Appends an OpBitwiseAnd instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bitwise_and","","Appends an OpBitwiseAnd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"not","","Appends an OpNot instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_not","","Appends an OpNot instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bit_field_insert","","Appends an OpBitFieldInsert instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bit_field_insert","","Appends an OpBitFieldInsert instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bit_field_s_extract","","Appends an OpBitFieldSExtract instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bit_field_s_extract","","Appends an OpBitFieldSExtract instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bit_field_u_extract","","Appends an OpBitFieldUExtract instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bit_field_u_extract","","Appends an OpBitFieldUExtract instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bit_reverse","","Appends an OpBitReverse instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bit_reverse","","Appends an OpBitReverse instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"bit_count","","Appends an OpBitCount instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_bit_count","","Appends an OpBitCount instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"d_pdx","","Appends an OpDPdx instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_d_pdx","","Appends an OpDPdx instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"d_pdy","","Appends an OpDPdy instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_d_pdy","","Appends an OpDPdy instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"fwidth","","Appends an OpFwidth instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_fwidth","","Appends an OpFwidth instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"d_pdx_fine","","Appends an OpDPdxFine instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_d_pdx_fine","","Appends an OpDPdxFine instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"d_pdy_fine","","Appends an OpDPdyFine instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_d_pdy_fine","","Appends an OpDPdyFine instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"fwidth_fine","","Appends an OpFwidthFine instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_fwidth_fine","","Appends an OpFwidthFine instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"d_pdx_coarse","","Appends an OpDPdxCoarse instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_d_pdx_coarse","","Appends an OpDPdxCoarse instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"d_pdy_coarse","","Appends an OpDPdyCoarse instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_d_pdy_coarse","","Appends an OpDPdyCoarse instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"fwidth_coarse","","Appends an OpFwidthCoarse instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_fwidth_coarse","","Appends an OpFwidthCoarse instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"emit_vertex","","Appends an OpEmitVertex instruction to the current block.",533,[[],[["error",4],["result",4]]]],[11,"insert_emit_vertex","","Appends an OpEmitVertex instruction to the current block.",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"end_primitive","","Appends an OpEndPrimitive instruction to the current …",533,[[],[["error",4],["result",4]]]],[11,"insert_end_primitive","","Appends an OpEndPrimitive instruction to the current …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"emit_stream_vertex","","Appends an OpEmitStreamVertex instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_emit_stream_vertex","","Appends an OpEmitStreamVertex instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"end_stream_primitive","","Appends an OpEndStreamPrimitive instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_end_stream_primitive","","Appends an OpEndStreamPrimitive instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"control_barrier","","Appends an OpControlBarrier instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_control_barrier","","Appends an OpControlBarrier instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"memory_barrier","","Appends an OpMemoryBarrier instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_memory_barrier","","Appends an OpMemoryBarrier instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"atomic_load","","Appends an OpAtomicLoad instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_load","","Appends an OpAtomicLoad instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_store","","Appends an OpAtomicStore instruction to the current block.",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_atomic_store","","Appends an OpAtomicStore instruction to the current block.",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"atomic_exchange","","Appends an OpAtomicExchange instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_exchange","","Appends an OpAtomicExchange instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_compare_exchange","","Appends an OpAtomicCompareExchange instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_compare_exchange","","Appends an OpAtomicCompareExchange instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_compare_exchange_weak","","Appends an OpAtomicCompareExchangeWeak instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_compare_exchange_weak","","Appends an OpAtomicCompareExchangeWeak instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_i_increment","","Appends an OpAtomicIIncrement instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_i_increment","","Appends an OpAtomicIIncrement instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_i_decrement","","Appends an OpAtomicIDecrement instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_i_decrement","","Appends an OpAtomicIDecrement instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_i_add","","Appends an OpAtomicIAdd instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_i_add","","Appends an OpAtomicIAdd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_i_sub","","Appends an OpAtomicISub instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_i_sub","","Appends an OpAtomicISub instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_s_min","","Appends an OpAtomicSMin instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_s_min","","Appends an OpAtomicSMin instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_u_min","","Appends an OpAtomicUMin instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_u_min","","Appends an OpAtomicUMin instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_s_max","","Appends an OpAtomicSMax instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_s_max","","Appends an OpAtomicSMax instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_u_max","","Appends an OpAtomicUMax instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_u_max","","Appends an OpAtomicUMax instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_and","","Appends an OpAtomicAnd instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_and","","Appends an OpAtomicAnd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_or","","Appends an OpAtomicOr instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_or","","Appends an OpAtomicOr instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_xor","","Appends an OpAtomicXor instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_xor","","Appends an OpAtomicXor instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"phi","","Appends an OpPhi instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_phi","","Appends an OpPhi instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_async_copy","","Appends an OpGroupAsyncCopy instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_async_copy","","Appends an OpGroupAsyncCopy instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_wait_events","","Appends an OpGroupWaitEvents instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_group_wait_events","","Appends an OpGroupWaitEvents instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"group_all","","Appends an OpGroupAll instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_all","","Appends an OpGroupAll instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_any","","Appends an OpGroupAny instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_any","","Appends an OpGroupAny instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_broadcast","","Appends an OpGroupBroadcast instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_broadcast","","Appends an OpGroupBroadcast instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_i_add","","Appends an OpGroupIAdd instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_i_add","","Appends an OpGroupIAdd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_f_add","","Appends an OpGroupFAdd instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_f_add","","Appends an OpGroupFAdd instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_f_min","","Appends an OpGroupFMin instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_f_min","","Appends an OpGroupFMin instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_u_min","","Appends an OpGroupUMin instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_u_min","","Appends an OpGroupUMin instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_s_min","","Appends an OpGroupSMin instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_s_min","","Appends an OpGroupSMin instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_f_max","","Appends an OpGroupFMax instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_f_max","","Appends an OpGroupFMax instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_u_max","","Appends an OpGroupUMax instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_u_max","","Appends an OpGroupUMax instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_s_max","","Appends an OpGroupSMax instruction to the current block.",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_s_max","","Appends an OpGroupSMax instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"read_pipe","","Appends an OpReadPipe instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_read_pipe","","Appends an OpReadPipe instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"write_pipe","","Appends an OpWritePipe instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_write_pipe","","Appends an OpWritePipe instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"reserved_read_pipe","","Appends an OpReservedReadPipe instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_reserved_read_pipe","","Appends an OpReservedReadPipe instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"reserved_write_pipe","","Appends an OpReservedWritePipe instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_reserved_write_pipe","","Appends an OpReservedWritePipe instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"reserve_read_pipe_packets","","Appends an OpReserveReadPipePackets instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_reserve_read_pipe_packets","","Appends an OpReserveReadPipePackets instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"reserve_write_pipe_packets","","Appends an OpReserveWritePipePackets instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_reserve_write_pipe_packets","","Appends an OpReserveWritePipePackets instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"commit_read_pipe","","Appends an OpCommitReadPipe instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_commit_read_pipe","","Appends an OpCommitReadPipe instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"commit_write_pipe","","Appends an OpCommitWritePipe instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_commit_write_pipe","","Appends an OpCommitWritePipe instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"is_valid_reserve_id","","Appends an OpIsValidReserveId instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_valid_reserve_id","","Appends an OpIsValidReserveId instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_num_pipe_packets","","Appends an OpGetNumPipePackets instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_num_pipe_packets","","Appends an OpGetNumPipePackets instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_max_pipe_packets","","Appends an OpGetMaxPipePackets instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_max_pipe_packets","","Appends an OpGetMaxPipePackets instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_reserve_read_pipe_packets","","Appends an OpGroupReserveReadPipePackets instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_reserve_read_pipe_packets","","Appends an OpGroupReserveReadPipePackets instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_reserve_write_pipe_packets","","Appends an OpGroupReserveWritePipePackets instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_reserve_write_pipe_packets","","Appends an OpGroupReserveWritePipePackets instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_commit_read_pipe","","Appends an OpGroupCommitReadPipe instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_group_commit_read_pipe","","Appends an OpGroupCommitReadPipe instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"group_commit_write_pipe","","Appends an OpGroupCommitWritePipe instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_group_commit_write_pipe","","Appends an OpGroupCommitWritePipe instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"enqueue_marker","","Appends an OpEnqueueMarker instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_enqueue_marker","","Appends an OpEnqueueMarker instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"enqueue_kernel","","Appends an OpEnqueueKernel instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_enqueue_kernel","","Appends an OpEnqueueKernel instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_kernel_n_drange_sub_group_count","","Appends an OpGetKernelNDrangeSubGroupCount instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_kernel_n_drange_sub_group_count","","Appends an OpGetKernelNDrangeSubGroupCount instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_kernel_n_drange_max_sub_group_size","","Appends an OpGetKernelNDrangeMaxSubGroupSize instruction …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_kernel_n_drange_max_sub_group_size","","Appends an OpGetKernelNDrangeMaxSubGroupSize instruction …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_kernel_work_group_size","","Appends an OpGetKernelWorkGroupSize instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_kernel_work_group_size","","Appends an OpGetKernelWorkGroupSize instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_kernel_preferred_work_group_size_multiple","","Appends an OpGetKernelPreferredWorkGroupSizeMultiple …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_kernel_preferred_work_group_size_multiple","","Appends an OpGetKernelPreferredWorkGroupSizeMultiple …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"retain_event","","Appends an OpRetainEvent instruction to the current block.",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_retain_event","","Appends an OpRetainEvent instruction to the current block.",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"release_event","","Appends an OpReleaseEvent instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_release_event","","Appends an OpReleaseEvent instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"create_user_event","","Appends an OpCreateUserEvent instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_create_user_event","","Appends an OpCreateUserEvent instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"is_valid_event","","Appends an OpIsValidEvent instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_valid_event","","Appends an OpIsValidEvent instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"set_user_event_status","","Appends an OpSetUserEventStatus instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_set_user_event_status","","Appends an OpSetUserEventStatus instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"capture_event_profiling_info","","Appends an OpCaptureEventProfilingInfo instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_capture_event_profiling_info","","Appends an OpCaptureEventProfilingInfo instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"get_default_queue","","Appends an OpGetDefaultQueue instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_default_queue","","Appends an OpGetDefaultQueue instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"build_nd_range","","Appends an OpBuildNDRange instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_build_nd_range","","Appends an OpBuildNDRange instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_implicit_lod","","Appends an OpImageSparseSampleImplicitLod instruction to …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_implicit_lod","","Appends an OpImageSparseSampleImplicitLod instruction to …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_explicit_lod","","Appends an OpImageSparseSampleExplicitLod instruction to …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_explicit_lod","","Appends an OpImageSparseSampleExplicitLod instruction to …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_dref_implicit_lod","","Appends an OpImageSparseSampleDrefImplicitLod instruction …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_dref_implicit_lod","","Appends an OpImageSparseSampleDrefImplicitLod instruction …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_dref_explicit_lod","","Appends an OpImageSparseSampleDrefExplicitLod instruction …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_dref_explicit_lod","","Appends an OpImageSparseSampleDrefExplicitLod instruction …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_proj_implicit_lod","","Appends an OpImageSparseSampleProjImplicitLod instruction …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_proj_implicit_lod","","Appends an OpImageSparseSampleProjImplicitLod instruction …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_proj_explicit_lod","","Appends an OpImageSparseSampleProjExplicitLod instruction …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_proj_explicit_lod","","Appends an OpImageSparseSampleProjExplicitLod instruction …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_proj_dref_implicit_lod","","Appends an OpImageSparseSampleProjDrefImplicitLod …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_proj_dref_implicit_lod","","Appends an OpImageSparseSampleProjDrefImplicitLod …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_sample_proj_dref_explicit_lod","","Appends an OpImageSparseSampleProjDrefExplicitLod …",533,[[["option",4],["imageoperands",3],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_sample_proj_dref_explicit_lod","","Appends an OpImageSparseSampleProjDrefExplicitLod …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_fetch","","Appends an OpImageSparseFetch instruction to the current …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_fetch","","Appends an OpImageSparseFetch instruction to the current …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_gather","","Appends an OpImageSparseGather instruction to the current …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_gather","","Appends an OpImageSparseGather instruction to the current …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_dref_gather","","Appends an OpImageSparseDrefGather instruction to the …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_dref_gather","","Appends an OpImageSparseDrefGather instruction to the …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sparse_texels_resident","","Appends an OpImageSparseTexelsResident instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_texels_resident","","Appends an OpImageSparseTexelsResident instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_flag_test_and_set","","Appends an OpAtomicFlagTestAndSet instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_atomic_flag_test_and_set","","Appends an OpAtomicFlagTestAndSet instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"atomic_flag_clear","","Appends an OpAtomicFlagClear instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_atomic_flag_clear","","Appends an OpAtomicFlagClear instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"image_sparse_read","","Appends an OpImageSparseRead instruction to the current …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sparse_read","","Appends an OpImageSparseRead instruction to the current …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"size_of","","Appends an OpSizeOf instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_size_of","","Appends an OpSizeOf instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"constant_pipe_storage","","Appends an OpConstantPipeStorage instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_constant_pipe_storage","","Appends an OpConstantPipeStorage instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"create_pipe_from_pipe_storage","","Appends an OpCreatePipeFromPipeStorage instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_create_pipe_from_pipe_storage","","Appends an OpCreatePipeFromPipeStorage instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_kernel_local_size_for_subgroup_count","","Appends an OpGetKernelLocalSizeForSubgroupCount …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_kernel_local_size_for_subgroup_count","","Appends an OpGetKernelLocalSizeForSubgroupCount …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"get_kernel_max_num_subgroups","","Appends an OpGetKernelMaxNumSubgroups instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_get_kernel_max_num_subgroups","","Appends an OpGetKernelMaxNumSubgroups instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"named_barrier_initialize","","Appends an OpNamedBarrierInitialize instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_named_barrier_initialize","","Appends an OpNamedBarrierInitialize instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"memory_named_barrier","","Appends an OpMemoryNamedBarrier instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_memory_named_barrier","","Appends an OpMemoryNamedBarrier instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"group_non_uniform_elect","","Appends an OpGroupNonUniformElect instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_elect","","Appends an OpGroupNonUniformElect instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_all","","Appends an OpGroupNonUniformAll instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_all","","Appends an OpGroupNonUniformAll instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_any","","Appends an OpGroupNonUniformAny instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_any","","Appends an OpGroupNonUniformAny instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_all_equal","","Appends an OpGroupNonUniformAllEqual instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_all_equal","","Appends an OpGroupNonUniformAllEqual instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_broadcast","","Appends an OpGroupNonUniformBroadcast instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_broadcast","","Appends an OpGroupNonUniformBroadcast instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_broadcast_first","","Appends an OpGroupNonUniformBroadcastFirst instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_broadcast_first","","Appends an OpGroupNonUniformBroadcastFirst instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_ballot","","Appends an OpGroupNonUniformBallot instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_ballot","","Appends an OpGroupNonUniformBallot instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_inverse_ballot","","Appends an OpGroupNonUniformInverseBallot instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_inverse_ballot","","Appends an OpGroupNonUniformInverseBallot instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_ballot_bit_extract","","Appends an OpGroupNonUniformBallotBitExtract instruction …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_ballot_bit_extract","","Appends an OpGroupNonUniformBallotBitExtract instruction …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_ballot_bit_count","","Appends an OpGroupNonUniformBallotBitCount instruction to …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_ballot_bit_count","","Appends an OpGroupNonUniformBallotBitCount instruction to …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_ballot_find_lsb","","Appends an OpGroupNonUniformBallotFindLSB instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_ballot_find_lsb","","Appends an OpGroupNonUniformBallotFindLSB instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_ballot_find_msb","","Appends an OpGroupNonUniformBallotFindMSB instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_ballot_find_msb","","Appends an OpGroupNonUniformBallotFindMSB instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_shuffle","","Appends an OpGroupNonUniformShuffle instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_shuffle","","Appends an OpGroupNonUniformShuffle instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_shuffle_xor","","Appends an OpGroupNonUniformShuffleXor instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_shuffle_xor","","Appends an OpGroupNonUniformShuffleXor instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_shuffle_up","","Appends an OpGroupNonUniformShuffleUp instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_shuffle_up","","Appends an OpGroupNonUniformShuffleUp instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_shuffle_down","","Appends an OpGroupNonUniformShuffleDown instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_shuffle_down","","Appends an OpGroupNonUniformShuffleDown instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_i_add","","Appends an OpGroupNonUniformIAdd instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_i_add","","Appends an OpGroupNonUniformIAdd instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_f_add","","Appends an OpGroupNonUniformFAdd instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_f_add","","Appends an OpGroupNonUniformFAdd instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_i_mul","","Appends an OpGroupNonUniformIMul instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_i_mul","","Appends an OpGroupNonUniformIMul instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_f_mul","","Appends an OpGroupNonUniformFMul instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_f_mul","","Appends an OpGroupNonUniformFMul instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_s_min","","Appends an OpGroupNonUniformSMin instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_s_min","","Appends an OpGroupNonUniformSMin instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_u_min","","Appends an OpGroupNonUniformUMin instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_u_min","","Appends an OpGroupNonUniformUMin instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_f_min","","Appends an OpGroupNonUniformFMin instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_f_min","","Appends an OpGroupNonUniformFMin instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_s_max","","Appends an OpGroupNonUniformSMax instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_s_max","","Appends an OpGroupNonUniformSMax instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_u_max","","Appends an OpGroupNonUniformUMax instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_u_max","","Appends an OpGroupNonUniformUMax instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_f_max","","Appends an OpGroupNonUniformFMax instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_f_max","","Appends an OpGroupNonUniformFMax instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_bitwise_and","","Appends an OpGroupNonUniformBitwiseAnd instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_bitwise_and","","Appends an OpGroupNonUniformBitwiseAnd instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_bitwise_or","","Appends an OpGroupNonUniformBitwiseOr instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_bitwise_or","","Appends an OpGroupNonUniformBitwiseOr instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_bitwise_xor","","Appends an OpGroupNonUniformBitwiseXor instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_bitwise_xor","","Appends an OpGroupNonUniformBitwiseXor instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_logical_and","","Appends an OpGroupNonUniformLogicalAnd instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_logical_and","","Appends an OpGroupNonUniformLogicalAnd instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_logical_or","","Appends an OpGroupNonUniformLogicalOr instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_logical_or","","Appends an OpGroupNonUniformLogicalOr instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_logical_xor","","Appends an OpGroupNonUniformLogicalXor instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_logical_xor","","Appends an OpGroupNonUniformLogicalXor instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_quad_broadcast","","Appends an OpGroupNonUniformQuadBroadcast instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_quad_broadcast","","Appends an OpGroupNonUniformQuadBroadcast instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_quad_swap","","Appends an OpGroupNonUniformQuadSwap instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_quad_swap","","Appends an OpGroupNonUniformQuadSwap instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"copy_logical","","Appends an OpCopyLogical instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_copy_logical","","Appends an OpCopyLogical instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ptr_equal","","Appends an OpPtrEqual instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ptr_equal","","Appends an OpPtrEqual instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ptr_not_equal","","Appends an OpPtrNotEqual instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ptr_not_equal","","Appends an OpPtrNotEqual instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ptr_diff","","Appends an OpPtrDiff instruction to the current block.",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ptr_diff","","Appends an OpPtrDiff instruction to the current block.",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_ballot_khr","","Appends an OpSubgroupBallotKHR instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_ballot_khr","","Appends an OpSubgroupBallotKHR instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_first_invocation_khr","","Appends an OpSubgroupFirstInvocationKHR instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_first_invocation_khr","","Appends an OpSubgroupFirstInvocationKHR instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_all_khr","","Appends an OpSubgroupAllKHR instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_all_khr","","Appends an OpSubgroupAllKHR instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_any_khr","","Appends an OpSubgroupAnyKHR instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_any_khr","","Appends an OpSubgroupAnyKHR instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_all_equal_khr","","Appends an OpSubgroupAllEqualKHR instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_all_equal_khr","","Appends an OpSubgroupAllEqualKHR instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_read_invocation_khr","","Appends an OpSubgroupReadInvocationKHR instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_read_invocation_khr","","Appends an OpSubgroupReadInvocationKHR instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_initialize_khr","","Appends an OpRayQueryInitializeKHR instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_ray_query_initialize_khr","","Appends an OpRayQueryInitializeKHR instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"ray_query_terminate_khr","","Appends an OpRayQueryTerminateKHR instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_ray_query_terminate_khr","","Appends an OpRayQueryTerminateKHR instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"ray_query_generate_intersection_khr","","Appends an OpRayQueryGenerateIntersectionKHR instruction …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_ray_query_generate_intersection_khr","","Appends an OpRayQueryGenerateIntersectionKHR instruction …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"ray_query_confirm_intersection_khr","","Appends an OpRayQueryConfirmIntersectionKHR instruction …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_ray_query_confirm_intersection_khr","","Appends an OpRayQueryConfirmIntersectionKHR instruction …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"ray_query_proceed_khr","","Appends an OpRayQueryProceedKHR instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_proceed_khr","","Appends an OpRayQueryProceedKHR instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_type_khr","","Appends an OpRayQueryGetIntersectionTypeKHR instruction …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_type_khr","","Appends an OpRayQueryGetIntersectionTypeKHR instruction …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"group_i_add_non_uniform_amd","","Appends an OpGroupIAddNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_i_add_non_uniform_amd","","Appends an OpGroupIAddNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_f_add_non_uniform_amd","","Appends an OpGroupFAddNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_f_add_non_uniform_amd","","Appends an OpGroupFAddNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_f_min_non_uniform_amd","","Appends an OpGroupFMinNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_f_min_non_uniform_amd","","Appends an OpGroupFMinNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_u_min_non_uniform_amd","","Appends an OpGroupUMinNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_u_min_non_uniform_amd","","Appends an OpGroupUMinNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_s_min_non_uniform_amd","","Appends an OpGroupSMinNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_s_min_non_uniform_amd","","Appends an OpGroupSMinNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_f_max_non_uniform_amd","","Appends an OpGroupFMaxNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_f_max_non_uniform_amd","","Appends an OpGroupFMaxNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_u_max_non_uniform_amd","","Appends an OpGroupUMaxNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_u_max_non_uniform_amd","","Appends an OpGroupUMaxNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"group_s_max_non_uniform_amd","","Appends an OpGroupSMaxNonUniformAMD instruction to the …",533,[[["option",4],["word",6],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_s_max_non_uniform_amd","","Appends an OpGroupSMaxNonUniformAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4],["groupoperation",4]],[["error",4],["result",4],["word",6]]]],[11,"fragment_mask_fetch_amd","","Appends an OpFragmentMaskFetchAMD instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_fragment_mask_fetch_amd","","Appends an OpFragmentMaskFetchAMD instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"fragment_fetch_amd","","Appends an OpFragmentFetchAMD instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_fragment_fetch_amd","","Appends an OpFragmentFetchAMD instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"read_clock_khr","","Appends an OpReadClockKHR instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_read_clock_khr","","Appends an OpReadClockKHR instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"image_sample_footprint_nv","","Appends an OpImageSampleFootprintNV instruction to the …",533,[[["imageoperands",3],["option",4],["word",6],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"insert_image_sample_footprint_nv","","Appends an OpImageSampleFootprintNV instruction to the …",533,[[["imageoperands",3],["word",6],["option",4],["insertpoint",4],["option",4]],[["error",4],["result",4],["word",6]]]],[11,"group_non_uniform_partition_nv","","Appends an OpGroupNonUniformPartitionNV instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_group_non_uniform_partition_nv","","Appends an OpGroupNonUniformPartitionNV instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"write_packed_primitive_indices4x8_nv","","Appends an OpWritePackedPrimitiveIndices4x8NV instruction …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_write_packed_primitive_indices4x8_nv","","Appends an OpWritePackedPrimitiveIndices4x8NV instruction …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"report_intersection_nv","","Appends an OpReportIntersectionNV instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_report_intersection_nv","","Appends an OpReportIntersectionNV instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"report_intersection_khr","","Appends an OpReportIntersectionKHR instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_report_intersection_khr","","Appends an OpReportIntersectionKHR instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ignore_intersection_nv","","Appends an OpIgnoreIntersectionNV instruction to the …",533,[[],[["error",4],["result",4]]]],[11,"insert_ignore_intersection_nv","","Appends an OpIgnoreIntersectionNV instruction to the …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"ignore_intersection_khr","","Appends an OpIgnoreIntersectionKHR instruction to the …",533,[[],[["error",4],["result",4]]]],[11,"insert_ignore_intersection_khr","","Appends an OpIgnoreIntersectionKHR instruction to the …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"terminate_ray_nv","","Appends an OpTerminateRayNV instruction to the current …",533,[[],[["error",4],["result",4]]]],[11,"insert_terminate_ray_nv","","Appends an OpTerminateRayNV instruction to the current …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"terminate_ray_khr","","Appends an OpTerminateRayKHR instruction to the current …",533,[[],[["error",4],["result",4]]]],[11,"insert_terminate_ray_khr","","Appends an OpTerminateRayKHR instruction to the current …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"trace_nv","","Appends an OpTraceNV instruction to the current block.",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_trace_nv","","Appends an OpTraceNV instruction to the current block.",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"trace_ray_khr","","Appends an OpTraceRayKHR instruction to the current block.",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_trace_ray_khr","","Appends an OpTraceRayKHR instruction to the current block.",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"execute_callable_nv","","Appends an OpExecuteCallableNV instruction to the current …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_execute_callable_nv","","Appends an OpExecuteCallableNV instruction to the current …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"execute_callable_khr","","Appends an OpExecuteCallableKHR instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_execute_callable_khr","","Appends an OpExecuteCallableKHR instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"cooperative_matrix_load_nv","","Appends an OpCooperativeMatrixLoadNV instruction to the …",533,[[["option",4],["memoryaccess",3],["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_cooperative_matrix_load_nv","","Appends an OpCooperativeMatrixLoadNV instruction to the …",533,[[["option",4],["memoryaccess",3],["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"cooperative_matrix_store_nv","","Appends an OpCooperativeMatrixStoreNV instruction to the …",533,[[["option",4],["memoryaccess",3],["word",6]],[["error",4],["result",4]]]],[11,"insert_cooperative_matrix_store_nv","","Appends an OpCooperativeMatrixStoreNV instruction to the …",533,[[["option",4],["memoryaccess",3],["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"cooperative_matrix_mul_add_nv","","Appends an OpCooperativeMatrixMulAddNV instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_cooperative_matrix_mul_add_nv","","Appends an OpCooperativeMatrixMulAddNV instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"cooperative_matrix_length_nv","","Appends an OpCooperativeMatrixLengthNV instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_cooperative_matrix_length_nv","","Appends an OpCooperativeMatrixLengthNV instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"begin_invocation_interlock_ext","","Appends an OpBeginInvocationInterlockEXT instruction to …",533,[[],[["error",4],["result",4]]]],[11,"insert_begin_invocation_interlock_ext","","Appends an OpBeginInvocationInterlockEXT instruction to …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"end_invocation_interlock_ext","","Appends an OpEndInvocationInterlockEXT instruction to the …",533,[[],[["error",4],["result",4]]]],[11,"insert_end_invocation_interlock_ext","","Appends an OpEndInvocationInterlockEXT instruction to the …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"demote_to_helper_invocation_ext","","Appends an OpDemoteToHelperInvocationEXT instruction to …",533,[[],[["error",4],["result",4]]]],[11,"insert_demote_to_helper_invocation_ext","","Appends an OpDemoteToHelperInvocationEXT instruction to …",533,[[["insertpoint",4]],[["error",4],["result",4]]]],[11,"is_helper_invocation_ext","","Appends an OpIsHelperInvocationEXT instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_is_helper_invocation_ext","","Appends an OpIsHelperInvocationEXT instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_shuffle_intel","","Appends an OpSubgroupShuffleINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_shuffle_intel","","Appends an OpSubgroupShuffleINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_shuffle_down_intel","","Appends an OpSubgroupShuffleDownINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_shuffle_down_intel","","Appends an OpSubgroupShuffleDownINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_shuffle_up_intel","","Appends an OpSubgroupShuffleUpINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_shuffle_up_intel","","Appends an OpSubgroupShuffleUpINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_shuffle_xor_intel","","Appends an OpSubgroupShuffleXorINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_shuffle_xor_intel","","Appends an OpSubgroupShuffleXorINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_block_read_intel","","Appends an OpSubgroupBlockReadINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_block_read_intel","","Appends an OpSubgroupBlockReadINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_block_write_intel","","Appends an OpSubgroupBlockWriteINTEL instruction to the …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_subgroup_block_write_intel","","Appends an OpSubgroupBlockWriteINTEL instruction to the …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"subgroup_image_block_read_intel","","Appends an OpSubgroupImageBlockReadINTEL instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_image_block_read_intel","","Appends an OpSubgroupImageBlockReadINTEL instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_image_block_write_intel","","Appends an OpSubgroupImageBlockWriteINTEL instruction to …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_subgroup_image_block_write_intel","","Appends an OpSubgroupImageBlockWriteINTEL instruction to …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"subgroup_image_media_block_read_intel","","Appends an OpSubgroupImageMediaBlockReadINTEL instruction …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_subgroup_image_media_block_read_intel","","Appends an OpSubgroupImageMediaBlockReadINTEL instruction …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"subgroup_image_media_block_write_intel","","Appends an OpSubgroupImageMediaBlockWriteINTEL …",533,[[["word",6]],[["error",4],["result",4]]]],[11,"insert_subgroup_image_media_block_write_intel","","Appends an OpSubgroupImageMediaBlockWriteINTEL …",533,[[["word",6],["insertpoint",4]],[["error",4],["result",4]]]],[11,"u_count_leading_zeros_intel","","Appends an OpUCountLeadingZerosINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_count_leading_zeros_intel","","Appends an OpUCountLeadingZerosINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_count_trailing_zeros_intel","","Appends an OpUCountTrailingZerosINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_count_trailing_zeros_intel","","Appends an OpUCountTrailingZerosINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"abs_i_sub_intel","","Appends an OpAbsISubINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_abs_i_sub_intel","","Appends an OpAbsISubINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"abs_u_sub_intel","","Appends an OpAbsUSubINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_abs_u_sub_intel","","Appends an OpAbsUSubINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_add_sat_intel","","Appends an OpIAddSatINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_add_sat_intel","","Appends an OpIAddSatINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_add_sat_intel","","Appends an OpUAddSatINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_add_sat_intel","","Appends an OpUAddSatINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_average_intel","","Appends an OpIAverageINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_average_intel","","Appends an OpIAverageINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_average_intel","","Appends an OpUAverageINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_average_intel","","Appends an OpUAverageINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_average_rounded_intel","","Appends an OpIAverageRoundedINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_average_rounded_intel","","Appends an OpIAverageRoundedINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_average_rounded_intel","","Appends an OpUAverageRoundedINTEL instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_average_rounded_intel","","Appends an OpUAverageRoundedINTEL instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_sub_sat_intel","","Appends an OpISubSatINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_sub_sat_intel","","Appends an OpISubSatINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_sub_sat_intel","","Appends an OpUSubSatINTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_sub_sat_intel","","Appends an OpUSubSatINTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"i_mul32x16_intel","","Appends an OpIMul32x16INTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_i_mul32x16_intel","","Appends an OpIMul32x16INTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"u_mul32x16_intel","","Appends an OpUMul32x16INTEL instruction to the current …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_u_mul32x16_intel","","Appends an OpUMul32x16INTEL instruction to the current …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_ray_t_min_khr","","Appends an OpRayQueryGetRayTMinKHR instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_ray_t_min_khr","","Appends an OpRayQueryGetRayTMinKHR instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_ray_flags_khr","","Appends an OpRayQueryGetRayFlagsKHR instruction to the …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_ray_flags_khr","","Appends an OpRayQueryGetRayFlagsKHR instruction to the …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_tkhr","","Appends an OpRayQueryGetIntersectionTKHR instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_tkhr","","Appends an OpRayQueryGetIntersectionTKHR instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_instance_custom_index_khr","","Appends an …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_instance_custom_index_khr","","Appends an …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_instance_id_khr","","Appends an OpRayQueryGetIntersectionInstanceIdKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_instance_id_khr","","Appends an OpRayQueryGetIntersectionInstanceIdKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_instance_shader_binding_table_record_offset_khr","","Appends an …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_instance_shader_binding_table_record_offset_khr","","Appends an …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_geometry_index_khr","","Appends an OpRayQueryGetIntersectionGeometryIndexKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_geometry_index_khr","","Appends an OpRayQueryGetIntersectionGeometryIndexKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_primitive_index_khr","","Appends an OpRayQueryGetIntersectionPrimitiveIndexKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_primitive_index_khr","","Appends an OpRayQueryGetIntersectionPrimitiveIndexKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_barycentrics_khr","","Appends an OpRayQueryGetIntersectionBarycentricsKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_barycentrics_khr","","Appends an OpRayQueryGetIntersectionBarycentricsKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_front_face_khr","","Appends an OpRayQueryGetIntersectionFrontFaceKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_front_face_khr","","Appends an OpRayQueryGetIntersectionFrontFaceKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_candidate_aabb_opaque_khr","","Appends an …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_candidate_aabb_opaque_khr","","Appends an …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_object_ray_direction_khr","","Appends an OpRayQueryGetIntersectionObjectRayDirectionKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_object_ray_direction_khr","","Appends an OpRayQueryGetIntersectionObjectRayDirectionKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_object_ray_origin_khr","","Appends an OpRayQueryGetIntersectionObjectRayOriginKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_object_ray_origin_khr","","Appends an OpRayQueryGetIntersectionObjectRayOriginKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_world_ray_direction_khr","","Appends an OpRayQueryGetWorldRayDirectionKHR instruction …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_world_ray_direction_khr","","Appends an OpRayQueryGetWorldRayDirectionKHR instruction …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_world_ray_origin_khr","","Appends an OpRayQueryGetWorldRayOriginKHR instruction to …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_world_ray_origin_khr","","Appends an OpRayQueryGetWorldRayOriginKHR instruction to …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_object_to_world_khr","","Appends an OpRayQueryGetIntersectionObjectToWorldKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_object_to_world_khr","","Appends an OpRayQueryGetIntersectionObjectToWorldKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"ray_query_get_intersection_world_to_object_khr","","Appends an OpRayQueryGetIntersectionWorldToObjectKHR …",533,[[["option",4],["word",6]],[["error",4],["result",4],["word",6]]]],[11,"insert_ray_query_get_intersection_world_to_object_khr","","Appends an OpRayQueryGetIntersectionWorldToObjectKHR …",533,[[["word",6],["option",4],["insertpoint",4]],[["error",4],["result",4],["word",6]]]],[11,"is_type_identical","","Compare two instructions by opcode and operands; this is …",9,[[["instruction",3]]]],[11,"unwrap_image_operands","","",12,[[],["imageoperands",3]]],[11,"unwrap_fp_fast_math_mode","","",12,[[],["fpfastmathmode",3]]],[11,"unwrap_selection_control","","",12,[[],["selectioncontrol",3]]],[11,"unwrap_loop_control","","",12,[[],["loopcontrol",3]]],[11,"unwrap_function_control","","",12,[[],["functioncontrol",3]]],[11,"unwrap_memory_semantics","","",12,[[],["memorysemantics",3]]],[11,"unwrap_memory_access","","",12,[[],["memoryaccess",3]]],[11,"unwrap_kernel_profiling_info","","",12,[[],["kernelprofilinginfo",3]]],[11,"unwrap_ray_flags","","",12,[[],["rayflags",3]]],[11,"unwrap_source_language","","",12,[[],["sourcelanguage",4]]],[11,"unwrap_execution_model","","",12,[[],["executionmodel",4]]],[11,"unwrap_addressing_model","","",12,[[],["addressingmodel",4]]],[11,"unwrap_memory_model","","",12,[[],["memorymodel",4]]],[11,"unwrap_execution_mode","","",12,[[],["executionmode",4]]],[11,"unwrap_storage_class","","",12,[[],["storageclass",4]]],[11,"unwrap_dim","","",12,[[],["dim",4]]],[11,"unwrap_sampler_addressing_mode","","",12,[[],["sampleraddressingmode",4]]],[11,"unwrap_sampler_filter_mode","","",12,[[],["samplerfiltermode",4]]],[11,"unwrap_image_format","","",12,[[],["imageformat",4]]],[11,"unwrap_image_channel_order","","",12,[[],["imagechannelorder",4]]],[11,"unwrap_image_channel_data_type","","",12,[[],["imagechanneldatatype",4]]],[11,"unwrap_fp_rounding_mode","","",12,[[],["fproundingmode",4]]],[11,"unwrap_linkage_type","","",12,[[],["linkagetype",4]]],[11,"unwrap_access_qualifier","","",12,[[],["accessqualifier",4]]],[11,"unwrap_function_parameter_attribute","","",12,[[],["functionparameterattribute",4]]],[11,"unwrap_decoration","","",12,[[],["decoration",4]]],[11,"unwrap_built_in","","",12,[[],["builtin",4]]],[11,"unwrap_scope","","",12,[[],["scope",4]]],[11,"unwrap_group_operation","","",12,[[],["groupoperation",4]]],[11,"unwrap_kernel_enqueue_flags","","",12,[[],["kernelenqueueflags",4]]],[11,"unwrap_capability","","",12,[[],["capability",4]]],[11,"unwrap_ray_query_intersection","","",12,[[],["rayqueryintersection",4]]],[11,"unwrap_ray_query_committed_intersection_type","","",12,[[],["rayquerycommittedintersectiontype",4]]],[11,"unwrap_ray_query_candidate_intersection_type","","",12,[[],["rayquerycandidateintersectiontype",4]]],[11,"unwrap_id_memory_semantics","","",12,[[],["word",6]]],[11,"unwrap_id_scope","","",12,[[],["word",6]]],[11,"unwrap_id_ref","","",12,[[],["word",6]]],[11,"unwrap_literal_int32","","",12,[[]]],[11,"unwrap_literal_int64","","",12,[[]]],[11,"unwrap_literal_float32","","",12,[[]]],[11,"unwrap_literal_float64","","",12,[[]]],[11,"unwrap_literal_ext_inst_integer","","",12,[[]]],[11,"unwrap_literal_spec_constant_op_integer","","",12,[[],["op",4]]],[11,"unwrap_literal_string","","",12,[[]]],[11,"id_ref_any","","",12,[[],[["word",6],["option",4]]]],[11,"id_ref_any_mut","","",12,[[],[["option",4],["word",6]]]],[11,"new","","Creates a new empty <code>Module</code> instance.",10,[[]]],[11,"global_inst_iter","","Returns an iterator over all global instructions.",10,[[]]],[11,"global_inst_iter_mut","","Returns a mut iterator over all global instructions.",10,[[]]],[11,"all_inst_iter","","Returns a iterator over all instructions.",10,[[]]],[11,"all_inst_iter_mut","","Returns a mut iterator over all instructions.",10,[[]]],[11,"new","","Creates a new <code>ModuleHeader</code> instance.",11,[[["word",6]],["moduleheader",3]]],[11,"set_version","","Sets the SPIR-V version to the given major.minor version.",11,[[]]],[11,"version","","Returns the major and minor version numbers as a tuple.",11,[[]]],[11,"generator","","Returns the generator\'s name and version as a tuple.",11,[[]]],[11,"new","","Creates a new empty <code>Function</code> instance.",8,[[]]],[11,"def_id","","",8,[[],[["option",4],["word",6]]]],[11,"all_inst_iter","","",8,[[]]],[11,"all_inst_iter_mut","","",8,[[]]],[11,"new","","Creates a new empty <code>Block</code> instance.",7,[[]]],[11,"label_id","","",7,[[],[["option",4],["word",6]]]],[11,"new","","Creates a new <code>Instruction</code> instance.",9,[[["vec",3],["operand",4],["op",4],["word",6],["option",4]]]],[11,"new","","Creates a new empty loader.",534,[[],["loader",3]]],[11,"module","","Returns the <code>Module</code> under construction.",534,[[],["module",3]]],[11,"lookup_opcode","rspirv::grammar","Looks up the given <code>opcode</code> in the instruction table and …",535,[[],[["instruction",3],["option",4]]]],[11,"get","","Returns a reference to the instruction grammar entry with …",535,[[["op",4]],["instruction",3]]],[11,"lookup_opcode","","Looks up the given <code>opcode</code> in the instruction table and …",536,[[],[["extendedinstruction",3],["option",4]]]],[11,"get","","Returns a reference to the instruction grammar entry with …",536,[[["glop",4]],["extendedinstruction",3]]],[11,"lookup_opcode","","Looks up the given <code>opcode</code> in the instruction table and …",537,[[],[["extendedinstruction",3],["option",4]]]],[11,"get","","Returns a reference to the instruction grammar entry with …",537,[[["clop",4]],["extendedinstruction",3]]],[11,"is_bool_constant","rspirv::sr","",513,[[]]],[11,"is_int_constant","","",513,[[]]],[11,"is_uint_constant","","",513,[[]]],[11,"is_float_constant","","",513,[[]]],[11,"is_composite_constant","","",513,[[]]],[11,"is_null_constant","","",513,[[]]],[11,"is_sampler_constant","","",513,[[]]],[11,"is_spec_constant","","",513,[[]]],[11,"is_spec_op_constant","","",513,[[]]],[11,"new","","",515,[[["token",3],["type",4]]]],[11,"is_numerical_type","","",516,[[]]],[11,"is_scalar_type","","",516,[[]]],[11,"is_aggregate_type","","",516,[[]]],[11,"is_composite_type","","",516,[[]]]],"p":[[4,"DecodeError"],[4,"ParseAction"],[4,"ParseState"],[8,"Consumer"],[8,"Assemble"],[8,"Disassemble"],[4,"InsertPoint"],[3,"Block"],[3,"Function"],[3,"Instruction"],[3,"Module"],[3,"ModuleHeader"],[4,"Operand"],[4,"Error"],[3,"ExtendedInstruction"],[3,"Instruction"],[3,"LogicalOperand"],[4,"OperandKind"],[4,"OperandQuantifier"],[3,"LiftContext"],[4,"OperandError"],[4,"InstructionError"],[4,"ConversionError"],[3,"Extension"],[3,"ExtInstImport"],[3,"ExtInst"],[3,"MemoryModel"],[3,"EntryPoint"],[3,"ExecutionMode"],[3,"Capability"],[3,"Function"],[3,"FunctionCall"],[3,"ExecutionModeId"],[4,"Branch"],[13,"Phi"],[13,"LoopMerge"],[13,"SelectionMerge"],[13,"Branch"],[13,"BranchConditional"],[13,"Switch"],[13,"ReturnValue"],[13,"LifetimeStart"],[13,"LifetimeStop"],[4,"Terminator"],[4,"Op"],[13,"SourceContinued"],[13,"Source"],[13,"SourceExtension"],[13,"Name"],[13,"MemberName"],[13,"String"],[13,"Line"],[13,"Variable"],[13,"ImageTexelPointer"],[13,"Load"],[13,"Store"],[13,"CopyMemory"],[13,"CopyMemorySized"],[13,"AccessChain"],[13,"InBoundsAccessChain"],[13,"PtrAccessChain"],[13,"ArrayLength"],[13,"GenericPtrMemSemantics"],[13,"InBoundsPtrAccessChain"],[13,"Decorate"],[13,"MemberDecorate"],[13,"GroupDecorate"],[13,"GroupMemberDecorate"],[13,"VectorExtractDynamic"],[13,"VectorInsertDynamic"],[13,"VectorShuffle"],[13,"CompositeConstruct"],[13,"CompositeExtract"],[13,"CompositeInsert"],[13,"CopyObject"],[13,"Transpose"],[13,"SampledImage"],[13,"ImageSampleImplicitLod"],[13,"ImageSampleExplicitLod"],[13,"ImageSampleDrefImplicitLod"],[13,"ImageSampleDrefExplicitLod"],[13,"ImageSampleProjImplicitLod"],[13,"ImageSampleProjExplicitLod"],[13,"ImageSampleProjDrefImplicitLod"],[13,"ImageSampleProjDrefExplicitLod"],[13,"ImageFetch"],[13,"ImageGather"],[13,"ImageDrefGather"],[13,"ImageRead"],[13,"ImageWrite"],[13,"Image"],[13,"ImageQueryFormat"],[13,"ImageQueryOrder"],[13,"ImageQuerySizeLod"],[13,"ImageQuerySize"],[13,"ImageQueryLod"],[13,"ImageQueryLevels"],[13,"ImageQuerySamples"],[13,"ConvertFToU"],[13,"ConvertFToS"],[13,"ConvertSToF"],[13,"ConvertUToF"],[13,"UConvert"],[13,"SConvert"],[13,"FConvert"],[13,"QuantizeToF16"],[13,"ConvertPtrToU"],[13,"SatConvertSToU"],[13,"SatConvertUToS"],[13,"ConvertUToPtr"],[13,"PtrCastToGeneric"],[13,"GenericCastToPtr"],[13,"GenericCastToPtrExplicit"],[13,"Bitcast"],[13,"SNegate"],[13,"FNegate"],[13,"IAdd"],[13,"FAdd"],[13,"ISub"],[13,"FSub"],[13,"IMul"],[13,"FMul"],[13,"UDiv"],[13,"SDiv"],[13,"FDiv"],[13,"UMod"],[13,"SRem"],[13,"SMod"],[13,"FRem"],[13,"FMod"],[13,"VectorTimesScalar"],[13,"MatrixTimesScalar"],[13,"VectorTimesMatrix"],[13,"MatrixTimesVector"],[13,"MatrixTimesMatrix"],[13,"OuterProduct"],[13,"Dot"],[13,"IAddCarry"],[13,"ISubBorrow"],[13,"UMulExtended"],[13,"SMulExtended"],[13,"Any"],[13,"All"],[13,"IsNan"],[13,"IsInf"],[13,"IsFinite"],[13,"IsNormal"],[13,"SignBitSet"],[13,"LessOrGreater"],[13,"Ordered"],[13,"Unordered"],[13,"LogicalEqual"],[13,"LogicalNotEqual"],[13,"LogicalOr"],[13,"LogicalAnd"],[13,"LogicalNot"],[13,"Select"],[13,"IEqual"],[13,"INotEqual"],[13,"UGreaterThan"],[13,"SGreaterThan"],[13,"UGreaterThanEqual"],[13,"SGreaterThanEqual"],[13,"ULessThan"],[13,"SLessThan"],[13,"ULessThanEqual"],[13,"SLessThanEqual"],[13,"FOrdEqual"],[13,"FUnordEqual"],[13,"FOrdNotEqual"],[13,"FUnordNotEqual"],[13,"FOrdLessThan"],[13,"FUnordLessThan"],[13,"FOrdGreaterThan"],[13,"FUnordGreaterThan"],[13,"FOrdLessThanEqual"],[13,"FUnordLessThanEqual"],[13,"FOrdGreaterThanEqual"],[13,"FUnordGreaterThanEqual"],[13,"ShiftRightLogical"],[13,"ShiftRightArithmetic"],[13,"ShiftLeftLogical"],[13,"BitwiseOr"],[13,"BitwiseXor"],[13,"BitwiseAnd"],[13,"Not"],[13,"BitFieldInsert"],[13,"BitFieldSExtract"],[13,"BitFieldUExtract"],[13,"BitReverse"],[13,"BitCount"],[13,"DPdx"],[13,"DPdy"],[13,"Fwidth"],[13,"DPdxFine"],[13,"DPdyFine"],[13,"FwidthFine"],[13,"DPdxCoarse"],[13,"DPdyCoarse"],[13,"FwidthCoarse"],[13,"EmitStreamVertex"],[13,"EndStreamPrimitive"],[13,"ControlBarrier"],[13,"MemoryBarrier"],[13,"AtomicLoad"],[13,"AtomicStore"],[13,"AtomicExchange"],[13,"AtomicCompareExchange"],[13,"AtomicCompareExchangeWeak"],[13,"AtomicIIncrement"],[13,"AtomicIDecrement"],[13,"AtomicIAdd"],[13,"AtomicISub"],[13,"AtomicSMin"],[13,"AtomicUMin"],[13,"AtomicSMax"],[13,"AtomicUMax"],[13,"AtomicAnd"],[13,"AtomicOr"],[13,"AtomicXor"],[13,"GroupAsyncCopy"],[13,"GroupWaitEvents"],[13,"GroupAll"],[13,"GroupAny"],[13,"GroupBroadcast"],[13,"GroupIAdd"],[13,"GroupFAdd"],[13,"GroupFMin"],[13,"GroupUMin"],[13,"GroupSMin"],[13,"GroupFMax"],[13,"GroupUMax"],[13,"GroupSMax"],[13,"ReadPipe"],[13,"WritePipe"],[13,"ReservedReadPipe"],[13,"ReservedWritePipe"],[13,"ReserveReadPipePackets"],[13,"ReserveWritePipePackets"],[13,"CommitReadPipe"],[13,"CommitWritePipe"],[13,"IsValidReserveId"],[13,"GetNumPipePackets"],[13,"GetMaxPipePackets"],[13,"GroupReserveReadPipePackets"],[13,"GroupReserveWritePipePackets"],[13,"GroupCommitReadPipe"],[13,"GroupCommitWritePipe"],[13,"EnqueueMarker"],[13,"EnqueueKernel"],[13,"GetKernelNDrangeSubGroupCount"],[13,"GetKernelNDrangeMaxSubGroupSize"],[13,"GetKernelWorkGroupSize"],[13,"GetKernelPreferredWorkGroupSizeMultiple"],[13,"RetainEvent"],[13,"ReleaseEvent"],[13,"IsValidEvent"],[13,"SetUserEventStatus"],[13,"CaptureEventProfilingInfo"],[13,"BuildNDRange"],[13,"ImageSparseSampleImplicitLod"],[13,"ImageSparseSampleExplicitLod"],[13,"ImageSparseSampleDrefImplicitLod"],[13,"ImageSparseSampleDrefExplicitLod"],[13,"ImageSparseSampleProjImplicitLod"],[13,"ImageSparseSampleProjExplicitLod"],[13,"ImageSparseSampleProjDrefImplicitLod"],[13,"ImageSparseSampleProjDrefExplicitLod"],[13,"ImageSparseFetch"],[13,"ImageSparseGather"],[13,"ImageSparseDrefGather"],[13,"ImageSparseTexelsResident"],[13,"AtomicFlagTestAndSet"],[13,"AtomicFlagClear"],[13,"ImageSparseRead"],[13,"SizeOf"],[13,"ConstantPipeStorage"],[13,"CreatePipeFromPipeStorage"],[13,"GetKernelLocalSizeForSubgroupCount"],[13,"GetKernelMaxNumSubgroups"],[13,"NamedBarrierInitialize"],[13,"MemoryNamedBarrier"],[13,"ModuleProcessed"],[13,"DecorateId"],[13,"GroupNonUniformElect"],[13,"GroupNonUniformAll"],[13,"GroupNonUniformAny"],[13,"GroupNonUniformAllEqual"],[13,"GroupNonUniformBroadcast"],[13,"GroupNonUniformBroadcastFirst"],[13,"GroupNonUniformBallot"],[13,"GroupNonUniformInverseBallot"],[13,"GroupNonUniformBallotBitExtract"],[13,"GroupNonUniformBallotBitCount"],[13,"GroupNonUniformBallotFindLSB"],[13,"GroupNonUniformBallotFindMSB"],[13,"GroupNonUniformShuffle"],[13,"GroupNonUniformShuffleXor"],[13,"GroupNonUniformShuffleUp"],[13,"GroupNonUniformShuffleDown"],[13,"GroupNonUniformIAdd"],[13,"GroupNonUniformFAdd"],[13,"GroupNonUniformIMul"],[13,"GroupNonUniformFMul"],[13,"GroupNonUniformSMin"],[13,"GroupNonUniformUMin"],[13,"GroupNonUniformFMin"],[13,"GroupNonUniformSMax"],[13,"GroupNonUniformUMax"],[13,"GroupNonUniformFMax"],[13,"GroupNonUniformBitwiseAnd"],[13,"GroupNonUniformBitwiseOr"],[13,"GroupNonUniformBitwiseXor"],[13,"GroupNonUniformLogicalAnd"],[13,"GroupNonUniformLogicalOr"],[13,"GroupNonUniformLogicalXor"],[13,"GroupNonUniformQuadBroadcast"],[13,"GroupNonUniformQuadSwap"],[13,"CopyLogical"],[13,"PtrEqual"],[13,"PtrNotEqual"],[13,"PtrDiff"],[13,"SubgroupBallotKHR"],[13,"SubgroupFirstInvocationKHR"],[13,"SubgroupAllKHR"],[13,"SubgroupAnyKHR"],[13,"SubgroupAllEqualKHR"],[13,"SubgroupReadInvocationKHR"],[13,"RayQueryInitializeKHR"],[13,"RayQueryTerminateKHR"],[13,"RayQueryGenerateIntersectionKHR"],[13,"RayQueryConfirmIntersectionKHR"],[13,"RayQueryProceedKHR"],[13,"RayQueryGetIntersectionTypeKHR"],[13,"GroupIAddNonUniformAMD"],[13,"GroupFAddNonUniformAMD"],[13,"GroupFMinNonUniformAMD"],[13,"GroupUMinNonUniformAMD"],[13,"GroupSMinNonUniformAMD"],[13,"GroupFMaxNonUniformAMD"],[13,"GroupUMaxNonUniformAMD"],[13,"GroupSMaxNonUniformAMD"],[13,"FragmentMaskFetchAMD"],[13,"FragmentFetchAMD"],[13,"ReadClockKHR"],[13,"ImageSampleFootprintNV"],[13,"GroupNonUniformPartitionNV"],[13,"WritePackedPrimitiveIndices4x8NV"],[13,"ReportIntersectionNV"],[13,"ReportIntersectionKHR"],[13,"TraceNV"],[13,"TraceRayKHR"],[13,"ExecuteCallableNV"],[13,"ExecuteCallableKHR"],[13,"TypeCooperativeMatrixNV"],[13,"CooperativeMatrixLoadNV"],[13,"CooperativeMatrixStoreNV"],[13,"CooperativeMatrixMulAddNV"],[13,"CooperativeMatrixLengthNV"],[13,"SubgroupShuffleINTEL"],[13,"SubgroupShuffleDownINTEL"],[13,"SubgroupShuffleUpINTEL"],[13,"SubgroupShuffleXorINTEL"],[13,"SubgroupBlockReadINTEL"],[13,"SubgroupBlockWriteINTEL"],[13,"SubgroupImageBlockReadINTEL"],[13,"SubgroupImageBlockWriteINTEL"],[13,"SubgroupImageMediaBlockReadINTEL"],[13,"SubgroupImageMediaBlockWriteINTEL"],[13,"UCountLeadingZerosINTEL"],[13,"UCountTrailingZerosINTEL"],[13,"AbsISubINTEL"],[13,"AbsUSubINTEL"],[13,"IAddSatINTEL"],[13,"UAddSatINTEL"],[13,"IAverageINTEL"],[13,"UAverageINTEL"],[13,"IAverageRoundedINTEL"],[13,"UAverageRoundedINTEL"],[13,"ISubSatINTEL"],[13,"USubSatINTEL"],[13,"IMul32x16INTEL"],[13,"UMul32x16INTEL"],[13,"DecorateString"],[13,"DecorateStringGOOGLE"],[13,"MemberDecorateString"],[13,"MemberDecorateStringGOOGLE"],[13,"VmeImageINTEL"],[13,"TypeVmeImageINTEL"],[13,"SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL"],[13,"SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL"],[13,"SubgroupAvcMceGetDefaultInterShapePenaltyINTEL"],[13,"SubgroupAvcMceSetInterShapePenaltyINTEL"],[13,"SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL"],[13,"SubgroupAvcMceSetInterDirectionPenaltyINTEL"],[13,"SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL"],[13,"SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL"],[13,"SubgroupAvcMceSetMotionVectorCostFunctionINTEL"],[13,"SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL"],[13,"SubgroupAvcMceSetAcOnlyHaarINTEL"],[13,"SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL"],[13,"SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL"],[13,"SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL"],[13,"SubgroupAvcMceConvertToImePayloadINTEL"],[13,"SubgroupAvcMceConvertToImeResultINTEL"],[13,"SubgroupAvcMceConvertToRefPayloadINTEL"],[13,"SubgroupAvcMceConvertToRefResultINTEL"],[13,"SubgroupAvcMceConvertToSicPayloadINTEL"],[13,"SubgroupAvcMceConvertToSicResultINTEL"],[13,"SubgroupAvcMceGetMotionVectorsINTEL"],[13,"SubgroupAvcMceGetInterDistortionsINTEL"],[13,"SubgroupAvcMceGetBestInterDistortionsINTEL"],[13,"SubgroupAvcMceGetInterMajorShapeINTEL"],[13,"SubgroupAvcMceGetInterMinorShapeINTEL"],[13,"SubgroupAvcMceGetInterDirectionsINTEL"],[13,"SubgroupAvcMceGetInterMotionVectorCountINTEL"],[13,"SubgroupAvcMceGetInterReferenceIdsINTEL"],[13,"SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL"],[13,"SubgroupAvcImeInitializeINTEL"],[13,"SubgroupAvcImeSetSingleReferenceINTEL"],[13,"SubgroupAvcImeSetDualReferenceINTEL"],[13,"SubgroupAvcImeRefWindowSizeINTEL"],[13,"SubgroupAvcImeAdjustRefOffsetINTEL"],[13,"SubgroupAvcImeConvertToMcePayloadINTEL"],[13,"SubgroupAvcImeSetMaxMotionVectorCountINTEL"],[13,"SubgroupAvcImeSetUnidirectionalMixDisableINTEL"],[13,"SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL"],[13,"SubgroupAvcImeSetWeightedSadINTEL"],[13,"SubgroupAvcImeEvaluateWithSingleReferenceINTEL"],[13,"SubgroupAvcImeEvaluateWithDualReferenceINTEL"],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL"],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL"],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL"],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL"],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL"],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL"],[13,"SubgroupAvcImeConvertToMceResultINTEL"],[13,"SubgroupAvcImeGetSingleReferenceStreaminINTEL"],[13,"SubgroupAvcImeGetDualReferenceStreaminINTEL"],[13,"SubgroupAvcImeStripSingleReferenceStreamoutINTEL"],[13,"SubgroupAvcImeStripDualReferenceStreamoutINTEL"],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL"],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL"],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL"],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL"],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL"],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL"],[13,"SubgroupAvcImeGetBorderReachedINTEL"],[13,"SubgroupAvcImeGetTruncatedSearchIndicationINTEL"],[13,"SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL"],[13,"SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL"],[13,"SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL"],[13,"SubgroupAvcFmeInitializeINTEL"],[13,"SubgroupAvcBmeInitializeINTEL"],[13,"SubgroupAvcRefConvertToMcePayloadINTEL"],[13,"SubgroupAvcRefSetBidirectionalMixDisableINTEL"],[13,"SubgroupAvcRefSetBilinearFilterEnableINTEL"],[13,"SubgroupAvcRefEvaluateWithSingleReferenceINTEL"],[13,"SubgroupAvcRefEvaluateWithDualReferenceINTEL"],[13,"SubgroupAvcRefEvaluateWithMultiReferenceINTEL"],[13,"SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL"],[13,"SubgroupAvcRefConvertToMceResultINTEL"],[13,"SubgroupAvcSicInitializeINTEL"],[13,"SubgroupAvcSicConfigureSkcINTEL"],[13,"SubgroupAvcSicConfigureIpeLumaINTEL"],[13,"SubgroupAvcSicConfigureIpeLumaChromaINTEL"],[13,"SubgroupAvcSicGetMotionVectorMaskINTEL"],[13,"SubgroupAvcSicConvertToMcePayloadINTEL"],[13,"SubgroupAvcSicSetIntraLumaShapePenaltyINTEL"],[13,"SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL"],[13,"SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL"],[13,"SubgroupAvcSicSetBilinearFilterEnableINTEL"],[13,"SubgroupAvcSicSetSkcForwardTransformEnableINTEL"],[13,"SubgroupAvcSicSetBlockBasedRawSkipSadINTEL"],[13,"SubgroupAvcSicEvaluateIpeINTEL"],[13,"SubgroupAvcSicEvaluateWithSingleReferenceINTEL"],[13,"SubgroupAvcSicEvaluateWithDualReferenceINTEL"],[13,"SubgroupAvcSicEvaluateWithMultiReferenceINTEL"],[13,"SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL"],[13,"SubgroupAvcSicConvertToMceResultINTEL"],[13,"SubgroupAvcSicGetIpeLumaShapeINTEL"],[13,"SubgroupAvcSicGetBestIpeLumaDistortionINTEL"],[13,"SubgroupAvcSicGetBestIpeChromaDistortionINTEL"],[13,"SubgroupAvcSicGetPackedIpeLumaModesINTEL"],[13,"SubgroupAvcSicGetIpeChromaModeINTEL"],[13,"SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL"],[13,"SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL"],[13,"SubgroupAvcSicGetInterRawSadsINTEL"],[13,"RayQueryGetRayTMinKHR"],[13,"RayQueryGetRayFlagsKHR"],[13,"RayQueryGetIntersectionTKHR"],[13,"RayQueryGetIntersectionInstanceCustomIndexKHR"],[13,"RayQueryGetIntersectionInstanceIdKHR"],[13,"RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR"],[13,"RayQueryGetIntersectionGeometryIndexKHR"],[13,"RayQueryGetIntersectionPrimitiveIndexKHR"],[13,"RayQueryGetIntersectionBarycentricsKHR"],[13,"RayQueryGetIntersectionFrontFaceKHR"],[13,"RayQueryGetIntersectionCandidateAABBOpaqueKHR"],[13,"RayQueryGetIntersectionObjectRayDirectionKHR"],[13,"RayQueryGetIntersectionObjectRayOriginKHR"],[13,"RayQueryGetWorldRayDirectionKHR"],[13,"RayQueryGetWorldRayOriginKHR"],[13,"RayQueryGetIntersectionObjectToWorldKHR"],[13,"RayQueryGetIntersectionWorldToObjectKHR"],[3,"EntryPoint"],[3,"Block"],[3,"Jump"],[3,"Function"],[3,"Module"],[3,"Token"],[3,"Storage"],[4,"Decoration"],[4,"Constant"],[13,"Sampler"],[3,"StructMember"],[4,"Type"],[13,"Int"],[13,"Float"],[13,"Vector"],[13,"Matrix"],[13,"Image"],[13,"SampledImage"],[13,"Array"],[13,"RuntimeArray"],[13,"Struct"],[13,"Opaque"],[13,"Pointer"],[13,"Function"],[13,"Pipe"],[13,"ForwardPointer"],[3,"Decoder"],[3,"Parser"],[3,"Builder"],[3,"Loader"],[3,"CoreInstructionTable"],[3,"GlslStd450InstructionTable"],[3,"OpenCLStd100InstructionTable"],[3,"FunctionParameter"],[3,"FunctionEnd"]]},\
"rustc_codegen_spirv":{"doc":"Welcome to the API documentation for the <code>rust-gpu</code> …","i":[[5,"__rustc_codegen_backend","rustc_codegen_spirv","This is the entrypoint for a hot plugged …",null,[[],[["box",3],["codegenbackend",8]]]]],"p":[]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[],["demangle",3]]],[3,"TryDemangleError","","Error returned from the <code>try_demangle</code> function below when …",null,null],[5,"try_demangle","","The same as <code>demangle</code>, except return an <code>Err</code> if the string …",null,[[],[["demangle",3],["result",4],["trydemangleerror",3]]]],[11,"as_str","","Returns the underlying string that\'s being demangled.",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",1,[[],["trydemangleerror",3]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"ryu":{"doc":"github crates-io docs-rs","i":[[0,"raw","ryu","Unsafe functions that mirror the API of the C …",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes …",null,[[]]],[5,"format64","","Print f64 to the given buffer and return number of bytes …",null,[[]]],[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[8,"Float","","A floating point number, f32 or f64, that can be written …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]],[11,"new","","This is a cheap operation; you don\'t need to worry about …",0,[[]]],[11,"format","","Print a floating point number into this buffer and return …",0,[[["float",8]]]],[11,"format_finite","","Print a floating point number into this buffer and return …",0,[[["float",8]]]]],"p":[[3,"Buffer"]]},\
"serde":{"doc":"SerdeSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the …",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can …",null,null],[3,"UnitDeserializer","","A deserializer holding a <code>()</code>.",null,null],[3,"BoolDeserializer","","A deserializer holding a <code>bool</code>.",null,null],[3,"I8Deserializer","","A deserializer holding an <code>i8</code>.",null,null],[3,"I16Deserializer","","A deserializer holding an <code>i16</code>.",null,null],[3,"I32Deserializer","","A deserializer holding an <code>i32</code>.",null,null],[3,"I64Deserializer","","A deserializer holding an <code>i64</code>.",null,null],[3,"IsizeDeserializer","","A deserializer holding an <code>isize</code>.",null,null],[3,"U8Deserializer","","A deserializer holding a <code>u8</code>.",null,null],[3,"U16Deserializer","","A deserializer holding a <code>u16</code>.",null,null],[3,"U64Deserializer","","A deserializer holding a <code>u64</code>.",null,null],[3,"UsizeDeserializer","","A deserializer holding a <code>usize</code>.",null,null],[3,"F32Deserializer","","A deserializer holding an <code>f32</code>.",null,null],[3,"F64Deserializer","","A deserializer holding an <code>f64</code>.",null,null],[3,"CharDeserializer","","A deserializer holding a <code>char</code>.",null,null],[3,"I128Deserializer","","A deserializer holding an <code>i128</code>.",null,null],[3,"U128Deserializer","","A deserializer holding a <code>u128</code>.",null,null],[3,"U32Deserializer","","A deserializer holding a <code>u32</code>.",null,null],[3,"StrDeserializer","","A deserializer holding a <code>&str</code>.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a <code>&str</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a <code>String</code>.",null,null],[3,"CowStrDeserializer","","A deserializer holding a <code>Cow<str></code>.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given byte …",1,[[],["borrowedbytesdeserializer",3]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new <code>SeqDeserializer<I, E></code>.",2,[[]]],[11,"end","","Check for remaining elements after passing a …",2,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a <code>SeqAccess</code>.",null,null],[11,"new","","Construct a new <code>SeqAccessDeserializer<A></code>.",3,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new <code>MapDeserializer<I, E></code>.",4,[[]]],[11,"end","","Check for remaining elements after passing a …",4,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a <code>MapAccess</code>.",null,null],[11,"new","","Construct a new <code>MapAccessDeserializer<A></code>.",5,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …",null,null],[10,"custom","","Raised when there is general error when deserializing a …",6,[[]]],[11,"invalid_type","","Raised when a <code>Deserialize</code> receives a type different from …",6,[[["expected",8],["unexpected",4]]]],[11,"invalid_value","","Raised when a <code>Deserialize</code> receives a value of the right …",6,[[["expected",8],["unexpected",4]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input …",6,[[["expected",8]]]],[11,"unknown_variant","","Raised when a <code>Deserialize</code> enum type received a variant …",6,[[]]],[11,"unknown_field","","Raised when a <code>Deserialize</code> struct type received a field …",6,[[]]],[11,"missing_field","","Raised when a <code>Deserialize</code> struct type expected to receive …",6,[[]]],[11,"duplicate_field","","Raised when a <code>Deserialize</code> struct type received more than …",6,[[]]],[4,"Unexpected","","<code>Unexpected</code> represents an unexpected invocation of any one …",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",7,null],[13,"Unsigned","","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …",7,null],[13,"Signed","","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …",7,null],[13,"Float","","The input contained a floating point <code>f32</code> or <code>f64</code> that was …",7,null],[13,"Char","","The input contained a <code>char</code> that was not expected.",7,null],[13,"Str","","The input contained a <code>&str</code> or <code>String</code> that was not …",7,null],[13,"Bytes","","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …",7,null],[13,"Unit","","The input contained a unit <code>()</code> that was not expected.",7,null],[13,"Option","","The input contained an <code>Option<T></code> that was not expected.",7,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not …",7,null],[13,"Seq","","The input contained a sequence that was not expected.",7,null],[13,"Map","","The input contained a map that was not expected.",7,null],[13,"Enum","","The input contained an enum that was not expected.",7,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",7,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not …",7,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",7,null],[13,"StructVariant","","The input contained a struct variant that was not …",7,null],[13,"Other","","A message stating what uncategorized thing the input …",7,null],[8,"Expected","","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …",null,null],[10,"fmt","","Format an explanation of what data was being expected. …",8,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without …",null,null],[8,"DeserializeSeed","","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common <code>Deserialize::deserialize</code> …",10,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",11,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",11,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a …",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects …",12,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",12,[[],["result",4]]],[11,"visit_i8","","The input contains an <code>i8</code>.",12,[[],["result",4]]],[11,"visit_i16","","The input contains an <code>i16</code>.",12,[[],["result",4]]],[11,"visit_i32","","The input contains an <code>i32</code>.",12,[[],["result",4]]],[11,"visit_i64","","The input contains an <code>i64</code>.",12,[[],["result",4]]],[11,"visit_i128","","The input contains a <code>i128</code>.",12,[[],["result",4]]],[11,"visit_u8","","The input contains a <code>u8</code>.",12,[[],["result",4]]],[11,"visit_u16","","The input contains a <code>u16</code>.",12,[[],["result",4]]],[11,"visit_u32","","The input contains a <code>u32</code>.",12,[[],["result",4]]],[11,"visit_u64","","The input contains a <code>u64</code>.",12,[[],["result",4]]],[11,"visit_u128","","The input contains a <code>u128</code>.",12,[[],["result",4]]],[11,"visit_f32","","The input contains an <code>f32</code>.",12,[[],["result",4]]],[11,"visit_f64","","The input contains an <code>f64</code>.",12,[[],["result",4]]],[11,"visit_char","","The input contains a <code>char</code>.",12,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string …",12,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long …",12,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string …",12,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte …",12,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as …",12,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte …",12,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",12,[[],["result",4]]],[11,"visit_unit","","The input contains a unit <code>()</code>.",12,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",12,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",12,[[],["result",4]]],[8,"SeqAccess","","Provides a <code>Visitor</code> access to each element of a sequence …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",13,null],[10,"next_element_seed","","This returns <code>Ok(Some(value))</code> for the next value in the …",13,[[],[["option",4],["result",4]]]],[11,"next_element","","This returns <code>Ok(Some(value))</code> for the next value in the …",13,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, …",13,[[],["option",4]]],[8,"MapAccess","","Provides a <code>Visitor</code> access to each entry of a map in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",14,null],[10,"next_key_seed","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",14,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a <code>Ok(value)</code> for the next value in the map.",14,[[],["result",4]]],[11,"next_entry_seed","","This returns <code>Ok(Some((key, value)))</code> for the next …",14,[[],[["result",4],["option",4]]]],[11,"next_key","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",14,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a <code>Ok(value)</code> for the next value in the map.",14,[[],["result",4]]],[11,"next_entry","","This returns <code>Ok(Some((key, value)))</code> for the next …",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if …",14,[[],["option",4]]],[8,"EnumAccess","","Provides a <code>Visitor</code> access to the data of an enum in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",15,null],[16,"Variant","","The <code>Visitor</code> that will be used to deserialize the content …",15,null],[10,"variant_seed","","<code>variant</code> is called to identify which variant to …",15,[[],["result",4]]],[11,"variant","","<code>variant</code> is called to identify which variant to …",15,[[],["result",4]]],[8,"VariantAccess","","<code>VariantAccess</code> is a visitor that is created by the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a <code>Deserializer</code> from which …",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a <code>Serializer</code> that does not …",null,null],[8,"Error","","Trait used by <code>Serialize</code> implementations to generically …",null,null],[10,"custom","","Used when a <code>Serialize</code> implementation encounters any error …",18,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",20,null],[16,"Error","","The error type when some error occurs during …",20,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",20,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",20,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",20,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",20,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",20,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",20,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",20,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",20,[[]]],[8,"SerializeSeq","","Returned from <code>Serializer::serialize_seq</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",21,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",21,[[],["result",4]]],[8,"SerializeTuple","","Returned from <code>Serializer::serialize_tuple</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",22,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",22,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from <code>Serializer::serialize_tuple_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",23,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from <code>Serializer::serialize_tuple_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",24,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result",4]]],[8,"SerializeMap","","Returned from <code>Serializer::serialize_map</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",25,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",25,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[],["result",4]]],[10,"end","","Finish serializing a map.",25,[[],["result",4]]],[8,"SerializeStruct","","Returned from <code>Serializer::serialize_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",26,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[],["result",4]]],[10,"end","","Finish serializing a struct.",26,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from <code>Serializer::serialize_struct_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",27,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result",4]]],[8,"Deserialize","serde","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",11,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",11,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",11,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",11,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",11,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",11,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",11,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",11,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",11,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",11,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",11,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",11,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",11,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",11,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",11,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",11,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",11,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",11,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",11,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",11,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",11,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",11,[[],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",11,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",11,[[],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",11,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",11,[[],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",11,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",11,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",11,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",11,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",20,null],[16,"Error","","The error type when some error occurs during …",20,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",20,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",20,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",20,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",20,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",20,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",20,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",20,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",20,[[],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",20,[[],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",20,[[],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",20,[[],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",20,[[],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",20,[[],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",20,[[],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",20,[[],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",20,[[],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",20,[[],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",20,[[],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",20,[[],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",20,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",20,[[],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",20,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",20,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",20,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",20,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",20,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",20,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",20,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",20,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",20,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",20,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",20,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",20,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",20,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",20,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",20,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",20,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",20,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",20,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the <code>Deserializer</code> part of a …",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is …",null,null],[11,"from","serde::de::value","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"fmt","serde::de","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde::ser","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"deserialize","serde::de","",49,[[],[["ignoredany",3],["result",4]]]],[11,"deserialize_bool","serde::de::value","",29,[[],["result",4]]],[11,"deserialize_i8","","",29,[[],["result",4]]],[11,"deserialize_i16","","",29,[[],["result",4]]],[11,"deserialize_i32","","",29,[[],["result",4]]],[11,"deserialize_i64","","",29,[[],["result",4]]],[11,"deserialize_i128","","",29,[[],["result",4]]],[11,"deserialize_u8","","",29,[[],["result",4]]],[11,"deserialize_u16","","",29,[[],["result",4]]],[11,"deserialize_u32","","",29,[[],["result",4]]],[11,"deserialize_u64","","",29,[[],["result",4]]],[11,"deserialize_u128","","",29,[[],["result",4]]],[11,"deserialize_f32","","",29,[[],["result",4]]],[11,"deserialize_f64","","",29,[[],["result",4]]],[11,"deserialize_char","","",29,[[],["result",4]]],[11,"deserialize_str","","",29,[[],["result",4]]],[11,"deserialize_string","","",29,[[],["result",4]]],[11,"deserialize_bytes","","",29,[[],["result",4]]],[11,"deserialize_byte_buf","","",29,[[],["result",4]]],[11,"deserialize_unit","","",29,[[],["result",4]]],[11,"deserialize_unit_struct","","",29,[[],["result",4]]],[11,"deserialize_newtype_struct","","",29,[[],["result",4]]],[11,"deserialize_seq","","",29,[[],["result",4]]],[11,"deserialize_tuple","","",29,[[],["result",4]]],[11,"deserialize_tuple_struct","","",29,[[],["result",4]]],[11,"deserialize_map","","",29,[[],["result",4]]],[11,"deserialize_struct","","",29,[[],["result",4]]],[11,"deserialize_enum","","",29,[[],["result",4]]],[11,"deserialize_identifier","","",29,[[],["result",4]]],[11,"deserialize_ignored_any","","",29,[[],["result",4]]],[11,"deserialize_any","","",29,[[],["result",4]]],[11,"deserialize_option","","",29,[[],["result",4]]],[11,"deserialize_bool","","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[],["result",4]]],[11,"deserialize_enum","","",30,[[],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"expecting","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",49,[[],["result",4]]],[11,"visit_i64","","",49,[[],["result",4]]],[11,"visit_u64","","",49,[[],["result",4]]],[11,"visit_f64","","",49,[[],["result",4]]],[11,"visit_str","","",49,[[],["result",4]]],[11,"visit_none","","",49,[[],["result",4]]],[11,"visit_some","","",49,[[],["result",4]]],[11,"visit_newtype_struct","","",49,[[],["result",4]]],[11,"visit_unit","","",49,[[],["result",4]]],[11,"visit_seq","","",49,[[],["result",4]]],[11,"visit_map","","",49,[[],["result",4]]],[11,"visit_bytes","","",49,[[],["result",4]]],[11,"visit_enum","","",49,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",2,[[],[["option",4],["result",4]]]],[11,"size_hint","","",2,[[],["option",4]]],[11,"next_element_seed","","",4,[[],[["option",4],["result",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"next_key_seed","","",4,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",4,[[],["result",4]]],[11,"next_entry_seed","","",4,[[],[["result",4],["option",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"variant_seed","","",45,[[],["result",4]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",5,[[],["result",4]]],[11,"serialize_element","serde::ser","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_element","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_key","","",50,[[],["result",4]]],[11,"serialize_value","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"serialize_field","","",50,[[],["result",4]]],[11,"end","","",50,[[],["result",4]]],[11,"custom","serde::de::value","",28,[[]]],[11,"custom","","",28,[[]]],[11,"clone","","",28,[[],["error",3]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["seqdeserializer",3]]],[11,"clone","","",3,[[],["seqaccessdeserializer",3]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",49,[[],["ignoredany",3]]],[11,"clone","","",7,[[],["unexpected",4]]],[11,"default","","",49,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",28,[[["error",3]]]],[11,"ne","","",28,[[["error",3]]]],[11,"eq","serde::de","",7,[[["unexpected",4]]]],[11,"ne","","",7,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde::de","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",28,[[]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSONJSON is a ubiquitous open-standard format that …","i":[[0,"de","serde_json","Deserialize JSON data to a Rust data structure.",null,null],[8,"Read","serde_json::de","Trait used by the deserializer for iterating over input. …",null,null],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[11,"new","","Create a JSON deserializer from one of the possible …",0,[[]]],[11,"from_reader","","Creates a JSON deserializer from an <code>io::Read</code>.",0,[[]]],[11,"from_slice","","Creates a JSON deserializer from a <code>&[u8]</code>.",0,[[]]],[11,"from_str","","Creates a JSON deserializer from a <code>&str</code>.",0,[[]]],[11,"end","","The <code>Deserializer::end</code> method should be called after a …",0,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of …",0,[[],["streamdeserializer",3]]],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON …",null,null],[11,"new","","Create a JSON stream deserializer from one of the …",1,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a …",1,[[]]],[5,"from_reader","","Deserialize an instance of type <code>T</code> from an IO stream of …",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type <code>T</code> from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type <code>T</code> from a string of JSON …",null,[[],["result",6]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur …",null,null],[6,"Result","","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.",null,null],[11,"line","","One-based line number at which the error was detected.",2,[[]]],[11,"column","","One-based column number at which the error was detected.",2,[[]]],[11,"classify","","Categorizes the cause of this error.",2,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to …",2,[[]]],[11,"is_syntax","","Returns true if this error was caused by input that was …",2,[[]]],[11,"is_data","","Returns true if this error was caused by input data that …",2,[[]]],[11,"is_eof","","Returns true if this error was caused by prematurely …",2,[[]]],[4,"Category","","Categorizes the cause of a <code>serde_json::Error</code>.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes …",3,null],[13,"Syntax","","The error was caused by input that was not syntactically …",3,null],[13,"Data","","The error was caused by input data that was semantically …",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of …",3,null],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[11,"new","","Makes a new empty Map.",4,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",4,[[]]],[11,"clear","","Clears the map, removing all values.",4,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",4,[[],[["value",4],["option",4]]]],[11,"contains_key","","Returns true if the map contains a value for the …",4,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",4,[[],[["value",4],["option",4]]]],[11,"insert","","Inserts a key-value pair into the map.",4,[[["string",3],["value",4]],[["option",4],["value",4]]]],[11,"remove","","Removes a key from the map, returning the value at the …",4,[[],[["option",4],["value",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",4,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other …",4,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",4,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",4,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[]]],[11,"iter","","Gets an iterator over the entries of the map.",4,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",4,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",4,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",4,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",4,[[],["valuesmut",3]]],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[3,"VacantEntry","","A vacant Entry. It is part of the <code>Entry</code> enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the <code>Entry</code> enum.",null,null],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",5,[[],["value",4]]],[11,"key","","Gets a reference to the key that would be used when …",6,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",6,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",7,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",7,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",7,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",7,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the <code>OccupiedEntry</code>\'s key, …",7,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns …",7,[[],["value",4]]],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[11,"new","","Creates a new JSON serializer.",8,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",8,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written …",8,[[]]],[11,"into_inner","","Unwrap the <code>Writer</code> from the <code>Serializer</code>.",8,[[]]],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote <code>\\\"</code>",9,null],[13,"ReverseSolidus","","An escaped reverse solidus <code>\\\\</code>",9,null],[13,"Solidus","","An escaped solidus <code>/</code>",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as <code>\\\\b</code>)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as <code>\\\\f</code>)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as <code>\\\\n</code>)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as …",9,null],[13,"Tab","","An escaped tab character (usually escaped as <code>\\\\t</code>)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped …",9,null],[8,"Formatter","","This trait abstracts away serializing the JSON control …",null,null],[11,"write_null","","Writes a <code>null</code> value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a <code>true</code> or <code>false</code> value to the specified writer.",10,[[],["result",6]]],[11,"write_i8","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_i16","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_i32","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_i64","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_u8","","Writes an integer value like <code>123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_u16","","Writes an integer value like <code>123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_u32","","Writes an integer value like <code>123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_u64","","Writes an integer value like <code>123</code> to the specified writer.",10,[[],["result",6]]],[11,"write_f32","","Writes a floating point value like <code>-31.26e+12</code> to the …",10,[[],["result",6]]],[11,"write_f64","","Writes a floating point value like <code>-31.26e+12</code> to the …",10,[[],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a …",10,[[],["result",6]]],[11,"begin_string","","Called before each series of <code>write_string_fragment</code> and …",10,[[],["result",6]]],[11,"end_string","","Called after each series of <code>write_string_fragment</code> and …",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping …",10,[[],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array.  Writes a <code>[</code> to the specified …",10,[[],["result",6]]],[11,"end_array","","Called after every array.  Writes a <code>]</code> to the specified …",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value.  Writes a <code>,</code> if needed to …",10,[[],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object.  Writes a <code>{</code> to the specified …",10,[[],["result",6]]],[11,"end_object","","Called after every object.  Writes a <code>}</code> to the specified …",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[],["result",6]]],[11,"end_object_key","","Called after every object key.  A <code>:</code> should be written to …",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value.  A <code>:</code> should be written …",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping …",10,[[],["result",6]]],[3,"CompactFormatter","","This structure compacts a JSON value with no extra …",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it …",null,null],[11,"new","","Construct a pretty printer formatter that defaults to …",11,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the <code>indent</code> …",11,[[]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO …",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON …",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["result",6],["vec",3]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["result",6],["vec",3]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["result",6],["string",3]]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any …",null,null],[8,"Index","serde_json::value","A type that can be used to index into a <code>serde_json::Value</code>.",null,null],[3,"Serializer","","Serializer whose output is a <code>Value</code>.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating …",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",12,null],[13,"Bool","","Represents a JSON boolean.",12,null],[13,"Number","","Represents a JSON number, whether integer or floating …",12,null],[13,"String","","Represents a JSON string.",12,null],[13,"Array","","Represents a JSON array.",12,null],[13,"Object","","Represents a JSON object.",12,null],[11,"get","","Index into a JSON array or map. A string index can be …",12,[[["index",8]],[["value",4],["option",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index …",12,[[["index",8]],[["value",4],["option",4]]]],[11,"is_object","","Returns true if the <code>Value</code> is an Object. Returns false …",12,[[]]],[11,"as_object","","If the <code>Value</code> is an Object, returns the associated Map. …",12,[[],[["map",3],["option",4]]]],[11,"as_object_mut","","If the <code>Value</code> is an Object, returns the associated mutable …",12,[[],[["option",4],["map",3]]]],[11,"is_array","","Returns true if the <code>Value</code> is an Array. Returns false …",12,[[]]],[11,"as_array","","If the <code>Value</code> is an Array, returns the associated vector. …",12,[[],[["vec",3],["option",4]]]],[11,"as_array_mut","","If the <code>Value</code> is an Array, returns the associated mutable …",12,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the <code>Value</code> is a String. Returns false …",12,[[]]],[11,"as_str","","If the <code>Value</code> is a String, returns the associated str. …",12,[[],["option",4]]],[11,"is_number","","Returns true if the <code>Value</code> is a Number. Returns false …",12,[[]]],[11,"is_i64","","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …",12,[[]]],[11,"is_u64","","Returns true if the <code>Value</code> is an integer between zero and …",12,[[]]],[11,"is_f64","","Returns true if the <code>Value</code> is a number that can be …",12,[[]]],[11,"as_i64","","If the <code>Value</code> is an integer, represent it as i64 if …",12,[[],["option",4]]],[11,"as_u64","","If the <code>Value</code> is an integer, represent it as u64 if …",12,[[],["option",4]]],[11,"as_f64","","If the <code>Value</code> is a number, represent it as f64 if …",12,[[],["option",4]]],[11,"is_boolean","","Returns true if the <code>Value</code> is a Boolean. Returns false …",12,[[]]],[11,"as_bool","","If the <code>Value</code> is a Boolean, returns the associated bool. …",12,[[],["option",4]]],[11,"is_null","","Returns true if the <code>Value</code> is a Null. Returns false …",12,[[]]],[11,"as_null","","If the <code>Value</code> is a Null, returns (). Returns None …",12,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",12,[[],[["value",4],["option",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable …",12,[[],[["value",4],["option",4]]]],[11,"take","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …",12,[[],["value",4]]],[5,"to_value","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …",null,[[],[["error",3],["result",4],["value",4]]]],[5,"from_value","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.",null,[[["value",4]],[["result",4],["error",3]]]],[11,"is_i64","","Returns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …",13,[[]]],[11,"is_u64","","Returns true if the <code>Number</code> is an integer between zero and …",13,[[]]],[11,"is_f64","","Returns true if the <code>Number</code> can be represented by f64.",13,[[]]],[11,"as_i64","","If the <code>Number</code> is an integer, represent it as i64 if …",13,[[],["option",4]]],[11,"as_u64","","If the <code>Number</code> is an integer, represent it as u64 if …",13,[[],["option",4]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None …",13,[[],["option",4]]],[11,"from_f64","","Converts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values …",13,[[],[["number",3],["option",4]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input …",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[]]],[5,"from_reader","serde_json","Deserialize an instance of type <code>T</code> from an IO stream of …",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type <code>T</code> from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type <code>T</code> from a string of JSON …",null,[[],["result",6]]],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON …",null,null],[3,"Error","","This type represents all possible errors that can occur …",null,null],[6,"Result","","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.",null,null],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["result",6],["string",3]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["result",6],["vec",3]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["result",6],["vec",3]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO …",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON …",null,[[],["result",6]]],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[5,"from_value","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.",null,[[["value",4]],[["result",4],["error",3]]]],[5,"to_value","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …",null,[[],[["error",3],["result",4],["value",4]]]],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating …",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",12,null],[13,"Bool","","Represents a JSON boolean.",12,null],[13,"Number","","Represents a JSON number, whether integer or floating …",12,null],[13,"String","","Represents a JSON string.",12,null],[13,"Array","","Represents a JSON array.",12,null],[13,"Object","","Represents a JSON object.",12,null],[14,"json","","Construct a <code>serde_json::Value</code> from a JSON literal.",null,null],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::map","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","serde_json","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde_json::ser","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",11,[[],["result",6]]],[11,"end_array","","",11,[[],["result",6]]],[11,"begin_array_value","","",11,[[],["result",6]]],[11,"end_array_value","","",11,[[],["result",6]]],[11,"begin_object","","",11,[[],["result",6]]],[11,"end_object","","",11,[[],["result",6]]],[11,"begin_object_key","","",11,[[],["result",6]]],[11,"begin_object_value","","",11,[[],["result",6]]],[11,"end_object_value","","",11,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["result",6],["option",4]]]],[11,"peek","","",14,[[],[["result",6],["option",4]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[]]],[11,"parse_str","","",14,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],["result",6]]],[11,"set_failed","","",14,[[]]],[11,"next","","",15,[[],[["result",6],["option",4]]]],[11,"peek","","",15,[[],[["result",6],["option",4]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[]]],[11,"parse_str","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],["result",6]]],[11,"set_failed","","",15,[[]]],[11,"next","","",16,[[],[["result",6],["option",4]]]],[11,"peek","","",16,[[],[["result",6],["option",4]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[]]],[11,"parse_str","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],["result",6]]],[11,"set_failed","","",16,[[]]],[11,"from","serde_json","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","Convert 32-bit floating point number to <code>Value</code>",12,[[]]],[11,"from","","Convert 64-bit floating point number to <code>Value</code>",12,[[]]],[11,"from","","Convert boolean to <code>Value</code>",12,[[]]],[11,"from","","Convert <code>String</code> to <code>Value</code>",12,[[["string",3]]]],[11,"from","","Convert string slice to <code>Value</code>",12,[[]]],[11,"from","","Convert copy-on-write string to <code>Value</code>",12,[[["cow",4]]]],[11,"from","","Convert map (with string keys) to <code>Value</code>",12,[[["map",3],["string",3],["value",4]]]],[11,"from","","Convert a <code>Vec</code> to <code>Value</code>",12,[[["vec",3]]]],[11,"from","","Convert a slice to <code>Value</code>",12,[[]]],[11,"from","","Convert <code>()</code> to <code>Value</code>",12,[[]]],[11,"from","serde_json::value","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[]]],[11,"len","","",18,[[]]],[11,"len","","",19,[[]]],[11,"len","","",20,[[]]],[11,"len","","",21,[[]]],[11,"len","","",22,[[]]],[11,"extend","serde_json","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"next","","",1,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json","",4,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",11,[[],["prettyformatter",3]]],[11,"clone","serde_json","",12,[[],["value",4]]],[11,"clone","serde_json::value","",13,[[],["number",3]]],[11,"default","serde_json","",4,[[]]],[11,"default","serde_json::ser","",11,[[]]],[11,"default","serde_json","",12,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]]]],[11,"eq","serde_json","",4,[[]]],[11,"eq","","",12,[[["value",4]]]],[11,"ne","","",12,[[["value",4]]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[["string",3]]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","","",12,[[]]],[11,"eq","serde_json::value","",13,[[["number",3]]]],[11,"ne","","",13,[[["number",3]]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","Display a JSON value as a string.",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json","",4,[[],["value",4]]],[11,"index","","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> …",12,[[],["value",4]]],[11,"index_mut","","",4,[[],["value",4]]],[11,"index_mut","","Write into a <code>serde_json::Value</code> using the syntax …",12,[[],["value",4]]],[11,"from_str","serde_json::value","",13,[[],["result",4]]],[11,"from_str","serde_json","",12,[[],[["error",3],["result",4],["value",4]]]],[11,"from_iter","","",4,[[]]],[11,"from_iter","","Convert an iteratable type to a <code>Value</code>",12,[[["intoiterator",8]]]],[11,"from_iter","","Convert an iteratable type to a <code>Value</code>",12,[[["intoiterator",8]]]],[11,"source","","",2,[[],[["error",8],["option",4]]]],[11,"deserialize_any","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_option","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_enum","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_newtype_struct","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_char","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_str","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_string","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_bytes","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_byte_buf","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_unit","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_unit_struct","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_seq","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple_struct","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_map","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_struct","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_identifier","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_ignored_any","","",12,[[],[["result",4],["error",3]]]],[11,"deserialize_any","serde_json::value","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[],["result",4]]],[11,"deserialize_enum","","",13,[[],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json","",12,[[]]],[11,"custom","","",2,[[["display",8]],["error",3]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","serde_json::value","",13,[[],["result",4]]],[11,"serialize_bool","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_i64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u8","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u16","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_u64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f32","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_f64","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_char","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_str","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_bytes","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_unit_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_struct","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_newtype_variant","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_none","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_some","","",24,[[],[["value",4],["result",6]]]],[11,"serialize_seq","","",24,[[["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[],["result",6]]],[11,"serialize_tuple_struct","","",24,[[],["result",6]]],[11,"serialize_tuple_variant","","",24,[[],["result",6]]],[11,"serialize_map","","",24,[[["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[],["result",6]]],[11,"serialize_struct_variant","","",24,[[],["result",6]]],[11,"collect_str","","",24,[[],[["value",4],["result",6]]]],[11,"deserialize","serde_json","",4,[[],["result",4]]],[11,"deserialize","","",12,[[],[["result",4],["value",4]]]],[11,"deserialize","serde_json::value","",13,[[],[["number",3],["result",4]]]],[11,"custom","serde_json","",2,[[["display",8]],["error",3]]],[11,"invalid_type","","",2,[[["expected",8],["unexpected",4]]]]],"p":[[3,"Deserializer"],[3,"StreamDeserializer"],[3,"Error"],[4,"Category"],[3,"Map"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Serializer"],[4,"CharEscape"],[8,"Formatter"],[3,"PrettyFormatter"],[4,"Value"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"spirv_builder":{"doc":"","i":[[4,"SpirvBuilderError","spirv_builder","",null,null],[13,"BuildFailed","","",0,null],[4,"MemoryModel","","",null,null],[13,"Simple","","",1,null],[13,"Vulkan","","",1,null],[13,"GLSL450","","",1,null],[3,"SpirvBuilder","","",null,null],[11,"new","","",2,[[]]],[11,"print_metadata","","Whether to print build.rs cargo metadata (e.g. …",2,[[]]],[11,"spirv_version","","Sets the SPIR-V binary version to use. Defaults to v1.3.",2,[[]]],[11,"memory_model","","Sets the SPIR-V memory model. Defaults to Vulkan.",2,[[["memorymodel",4]]]],[11,"build","","Builds the module. Returns the path to the built spir-v …",2,[[],[["spirvbuildererror",4],["pathbuf",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",0,[[["result",4]]]],[11,"to_result","","",0,[[],["result",4]]],[11,"to_self_profile_string","","",0,[[["querykeystringbuilder",3]],["stringid",3]]],[11,"vzip","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",1,[[["result",4]]]],[11,"to_result","","",1,[[],["result",4]]],[11,"vzip","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",2,[[["result",4]]]],[11,"to_result","","",2,[[],["result",4]]],[11,"vzip","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"SpirvBuilderError"],[4,"MemoryModel"],[3,"SpirvBuilder"]]},\
"spirv_headers":{"doc":"The SPIR-V header.","i":[[6,"Word","spirv_headers","",null,null],[17,"MAGIC_NUMBER","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"REVISION","","",null,null],[3,"ImageOperands","","SPIR-V operand kind: ImageOperands",null,null],[18,"NONE","","",0,null],[18,"BIAS","","",0,null],[18,"LOD","","",0,null],[18,"GRAD","","",0,null],[18,"CONST_OFFSET","","",0,null],[18,"OFFSET","","",0,null],[18,"CONST_OFFSETS","","",0,null],[18,"SAMPLE","","",0,null],[18,"MIN_LOD","","",0,null],[18,"MAKE_TEXEL_AVAILABLE","","",0,null],[18,"MAKE_TEXEL_AVAILABLE_KHR","","",0,null],[18,"MAKE_TEXEL_VISIBLE","","",0,null],[18,"MAKE_TEXEL_VISIBLE_KHR","","",0,null],[18,"NON_PRIVATE_TEXEL","","",0,null],[18,"NON_PRIVATE_TEXEL_KHR","","",0,null],[18,"VOLATILE_TEXEL","","",0,null],[18,"VOLATILE_TEXEL_KHR","","",0,null],[18,"SIGN_EXTEND","","",0,null],[18,"ZERO_EXTEND","","",0,null],[11,"empty","","Returns an empty set of flags",0,[[],["imageoperands",3]]],[11,"all","","Returns the set containing all flags.",0,[[],["imageoperands",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",0,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",0,[[],[["option",4],["imageoperands",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",0,[[],["imageoperands",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",0,[[],["imageoperands",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",0,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",0,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",0,[[["imageoperands",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",0,[[["imageoperands",3]]]],[11,"insert","","Inserts the specified flags in-place.",0,[[["imageoperands",3]]]],[11,"remove","","Removes the specified flags in-place.",0,[[["imageoperands",3]]]],[11,"toggle","","Toggles the specified flags in-place.",0,[[["imageoperands",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",0,[[["imageoperands",3]]]],[3,"FPFastMathMode","","SPIR-V operand kind: FPFastMathMode",null,null],[18,"NONE","","",1,null],[18,"NOT_NAN","","",1,null],[18,"NOT_INF","","",1,null],[18,"NSZ","","",1,null],[18,"ALLOW_RECIP","","",1,null],[18,"FAST","","",1,null],[11,"empty","","Returns an empty set of flags",1,[[],["fpfastmathmode",3]]],[11,"all","","Returns the set containing all flags.",1,[[],["fpfastmathmode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",1,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",1,[[],[["option",4],["fpfastmathmode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",1,[[],["fpfastmathmode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",1,[[],["fpfastmathmode",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",1,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",1,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",1,[[["fpfastmathmode",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",1,[[["fpfastmathmode",3]]]],[11,"insert","","Inserts the specified flags in-place.",1,[[["fpfastmathmode",3]]]],[11,"remove","","Removes the specified flags in-place.",1,[[["fpfastmathmode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",1,[[["fpfastmathmode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",1,[[["fpfastmathmode",3]]]],[3,"SelectionControl","","SPIR-V operand kind: SelectionControl",null,null],[18,"NONE","","",2,null],[18,"FLATTEN","","",2,null],[18,"DONT_FLATTEN","","",2,null],[11,"empty","","Returns an empty set of flags",2,[[],["selectioncontrol",3]]],[11,"all","","Returns the set containing all flags.",2,[[],["selectioncontrol",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",2,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",2,[[],[["option",4],["selectioncontrol",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",2,[[],["selectioncontrol",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",2,[[],["selectioncontrol",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",2,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",2,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",2,[[["selectioncontrol",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",2,[[["selectioncontrol",3]]]],[11,"insert","","Inserts the specified flags in-place.",2,[[["selectioncontrol",3]]]],[11,"remove","","Removes the specified flags in-place.",2,[[["selectioncontrol",3]]]],[11,"toggle","","Toggles the specified flags in-place.",2,[[["selectioncontrol",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",2,[[["selectioncontrol",3]]]],[3,"LoopControl","","SPIR-V operand kind: LoopControl",null,null],[18,"NONE","","",3,null],[18,"UNROLL","","",3,null],[18,"DONT_UNROLL","","",3,null],[18,"DEPENDENCY_INFINITE","","",3,null],[18,"DEPENDENCY_LENGTH","","",3,null],[18,"MIN_ITERATIONS","","",3,null],[18,"MAX_ITERATIONS","","",3,null],[18,"ITERATION_MULTIPLE","","",3,null],[18,"PEEL_COUNT","","",3,null],[18,"PARTIAL_COUNT","","",3,null],[11,"empty","","Returns an empty set of flags",3,[[],["loopcontrol",3]]],[11,"all","","Returns the set containing all flags.",3,[[],["loopcontrol",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",3,[[],[["loopcontrol",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",3,[[],["loopcontrol",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",3,[[],["loopcontrol",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",3,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",3,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",3,[[["loopcontrol",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",3,[[["loopcontrol",3]]]],[11,"insert","","Inserts the specified flags in-place.",3,[[["loopcontrol",3]]]],[11,"remove","","Removes the specified flags in-place.",3,[[["loopcontrol",3]]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[["loopcontrol",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",3,[[["loopcontrol",3]]]],[3,"FunctionControl","","SPIR-V operand kind: FunctionControl",null,null],[18,"NONE","","",4,null],[18,"INLINE","","",4,null],[18,"DONT_INLINE","","",4,null],[18,"PURE","","",4,null],[18,"CONST","","",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["functioncontrol",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["functioncontrol",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[],[["option",4],["functioncontrol",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[],["functioncontrol",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[],["functioncontrol",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[["functioncontrol",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",4,[[["functioncontrol",3]]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["functioncontrol",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["functioncontrol",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["functioncontrol",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["functioncontrol",3]]]],[3,"MemorySemantics","","SPIR-V operand kind: MemorySemantics",null,null],[18,"RELAXED","","",5,null],[18,"NONE","","",5,null],[18,"ACQUIRE","","",5,null],[18,"RELEASE","","",5,null],[18,"ACQUIRE_RELEASE","","",5,null],[18,"SEQUENTIALLY_CONSISTENT","","",5,null],[18,"UNIFORM_MEMORY","","",5,null],[18,"SUBGROUP_MEMORY","","",5,null],[18,"WORKGROUP_MEMORY","","",5,null],[18,"CROSS_WORKGROUP_MEMORY","","",5,null],[18,"ATOMIC_COUNTER_MEMORY","","",5,null],[18,"IMAGE_MEMORY","","",5,null],[18,"OUTPUT_MEMORY","","",5,null],[18,"OUTPUT_MEMORY_KHR","","",5,null],[18,"MAKE_AVAILABLE","","",5,null],[18,"MAKE_AVAILABLE_KHR","","",5,null],[18,"MAKE_VISIBLE","","",5,null],[18,"MAKE_VISIBLE_KHR","","",5,null],[18,"VOLATILE","","",5,null],[11,"empty","","Returns an empty set of flags",5,[[],["memorysemantics",3]]],[11,"all","","Returns the set containing all flags.",5,[[],["memorysemantics",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",5,[[],[["option",4],["memorysemantics",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",5,[[],["memorysemantics",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",5,[[],["memorysemantics",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",5,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",5,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",5,[[["memorysemantics",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",5,[[["memorysemantics",3]]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["memorysemantics",3]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["memorysemantics",3]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["memorysemantics",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",5,[[["memorysemantics",3]]]],[3,"MemoryAccess","","SPIR-V operand kind: MemoryAccess",null,null],[18,"NONE","","",6,null],[18,"VOLATILE","","",6,null],[18,"ALIGNED","","",6,null],[18,"NONTEMPORAL","","",6,null],[18,"MAKE_POINTER_AVAILABLE","","",6,null],[18,"MAKE_POINTER_AVAILABLE_KHR","","",6,null],[18,"MAKE_POINTER_VISIBLE","","",6,null],[18,"MAKE_POINTER_VISIBLE_KHR","","",6,null],[18,"NON_PRIVATE_POINTER","","",6,null],[18,"NON_PRIVATE_POINTER_KHR","","",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["memoryaccess",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["memoryaccess",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",6,[[],[["option",4],["memoryaccess",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",6,[[],["memoryaccess",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[],["memoryaccess",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",6,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",6,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",6,[[["memoryaccess",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",6,[[["memoryaccess",3]]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["memoryaccess",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["memoryaccess",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["memoryaccess",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",6,[[["memoryaccess",3]]]],[3,"KernelProfilingInfo","","SPIR-V operand kind: KernelProfilingInfo",null,null],[18,"NONE","","",7,null],[18,"CMD_EXEC_TIME","","",7,null],[11,"empty","","Returns an empty set of flags",7,[[],["kernelprofilinginfo",3]]],[11,"all","","Returns the set containing all flags.",7,[[],["kernelprofilinginfo",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",7,[[],[["kernelprofilinginfo",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",7,[[],["kernelprofilinginfo",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",7,[[],["kernelprofilinginfo",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",7,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",7,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",7,[[["kernelprofilinginfo",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",7,[[["kernelprofilinginfo",3]]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["kernelprofilinginfo",3]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["kernelprofilinginfo",3]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["kernelprofilinginfo",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",7,[[["kernelprofilinginfo",3]]]],[3,"RayFlags","","SPIR-V operand kind: RayFlags",null,null],[18,"NONE_KHR","","",8,null],[18,"OPAQUE_KHR","","",8,null],[18,"NO_OPAQUE_KHR","","",8,null],[18,"TERMINATE_ON_FIRST_HIT_KHR","","",8,null],[18,"SKIP_CLOSEST_HIT_SHADER_KHR","","",8,null],[18,"CULL_BACK_FACING_TRIANGLES_KHR","","",8,null],[18,"CULL_FRONT_FACING_TRIANGLES_KHR","","",8,null],[18,"CULL_OPAQUE_KHR","","",8,null],[18,"CULL_NO_OPAQUE_KHR","","",8,null],[18,"SKIP_TRIANGLES_KHR","","",8,null],[18,"SKIP_AAB_BS_KHR","","",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["rayflags",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["rayflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",8,[[],[["rayflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",8,[[],["rayflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[],["rayflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",8,[[]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",8,[[]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",8,[[["rayflags",3]]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",8,[[["rayflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["rayflags",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["rayflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["rayflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",8,[[["rayflags",3]]]],[4,"SourceLanguage","","/// SPIR-V operand kind: SourceLanguage",null,null],[13,"Unknown","","",9,null],[13,"ESSL","","",9,null],[13,"GLSL","","",9,null],[13,"OpenCL_C","","",9,null],[13,"OpenCL_CPP","","",9,null],[13,"HLSL","","",9,null],[11,"required_capabilities","","",9,[[]]],[4,"ExecutionModel","","/// SPIR-V operand kind: ExecutionModel",null,null],[13,"Vertex","","",10,null],[13,"TessellationControl","","",10,null],[13,"TessellationEvaluation","","",10,null],[13,"Geometry","","",10,null],[13,"Fragment","","",10,null],[13,"GLCompute","","",10,null],[13,"Kernel","","",10,null],[13,"TaskNV","","",10,null],[13,"MeshNV","","",10,null],[13,"RayGenerationNV","","",10,null],[13,"IntersectionNV","","",10,null],[13,"AnyHitNV","","",10,null],[13,"ClosestHitNV","","",10,null],[13,"MissNV","","",10,null],[13,"CallableNV","","",10,null],[18,"RayGenerationKHR","","",10,null],[18,"IntersectionKHR","","",10,null],[18,"AnyHitKHR","","",10,null],[18,"ClosestHitKHR","","",10,null],[18,"MissKHR","","",10,null],[18,"CallableKHR","","",10,null],[11,"required_capabilities","","",10,[[]]],[4,"AddressingModel","","/// SPIR-V operand kind: AddressingModel",null,null],[13,"Logical","","",11,null],[13,"Physical32","","",11,null],[13,"Physical64","","",11,null],[13,"PhysicalStorageBuffer64","","",11,null],[18,"PhysicalStorageBuffer64EXT","","",11,null],[11,"required_capabilities","","",11,[[]]],[4,"MemoryModel","","/// SPIR-V operand kind: MemoryModel",null,null],[13,"Simple","","",12,null],[13,"GLSL450","","",12,null],[13,"OpenCL","","",12,null],[13,"Vulkan","","",12,null],[18,"VulkanKHR","","",12,null],[11,"required_capabilities","","",12,[[]]],[4,"ExecutionMode","","/// SPIR-V operand kind: ExecutionMode",null,null],[13,"Invocations","","",13,null],[13,"SpacingEqual","","",13,null],[13,"SpacingFractionalEven","","",13,null],[13,"SpacingFractionalOdd","","",13,null],[13,"VertexOrderCw","","",13,null],[13,"VertexOrderCcw","","",13,null],[13,"PixelCenterInteger","","",13,null],[13,"OriginUpperLeft","","",13,null],[13,"OriginLowerLeft","","",13,null],[13,"EarlyFragmentTests","","",13,null],[13,"PointMode","","",13,null],[13,"Xfb","","",13,null],[13,"DepthReplacing","","",13,null],[13,"DepthGreater","","",13,null],[13,"DepthLess","","",13,null],[13,"DepthUnchanged","","",13,null],[13,"LocalSize","","",13,null],[13,"LocalSizeHint","","",13,null],[13,"InputPoints","","",13,null],[13,"InputLines","","",13,null],[13,"InputLinesAdjacency","","",13,null],[13,"Triangles","","",13,null],[13,"InputTrianglesAdjacency","","",13,null],[13,"Quads","","",13,null],[13,"Isolines","","",13,null],[13,"OutputVertices","","",13,null],[13,"OutputPoints","","",13,null],[13,"OutputLineStrip","","",13,null],[13,"OutputTriangleStrip","","",13,null],[13,"VecTypeHint","","",13,null],[13,"ContractionOff","","",13,null],[13,"Initializer","","",13,null],[13,"Finalizer","","",13,null],[13,"SubgroupSize","","",13,null],[13,"SubgroupsPerWorkgroup","","",13,null],[13,"SubgroupsPerWorkgroupId","","",13,null],[13,"LocalSizeId","","",13,null],[13,"LocalSizeHintId","","",13,null],[13,"PostDepthCoverage","","",13,null],[13,"DenormPreserve","","",13,null],[13,"DenormFlushToZero","","",13,null],[13,"SignedZeroInfNanPreserve","","",13,null],[13,"RoundingModeRTE","","",13,null],[13,"RoundingModeRTZ","","",13,null],[13,"StencilRefReplacingEXT","","",13,null],[13,"OutputLinesNV","","",13,null],[13,"OutputPrimitivesNV","","",13,null],[13,"DerivativeGroupQuadsNV","","",13,null],[13,"DerivativeGroupLinearNV","","",13,null],[13,"OutputTrianglesNV","","",13,null],[13,"PixelInterlockOrderedEXT","","",13,null],[13,"PixelInterlockUnorderedEXT","","",13,null],[13,"SampleInterlockOrderedEXT","","",13,null],[13,"SampleInterlockUnorderedEXT","","",13,null],[13,"ShadingRateInterlockOrderedEXT","","",13,null],[13,"ShadingRateInterlockUnorderedEXT","","",13,null],[11,"required_capabilities","","",13,[[]]],[4,"StorageClass","","/// SPIR-V operand kind: StorageClass",null,null],[13,"UniformConstant","","",14,null],[13,"Input","","",14,null],[13,"Uniform","","",14,null],[13,"Output","","",14,null],[13,"Workgroup","","",14,null],[13,"CrossWorkgroup","","",14,null],[13,"Private","","",14,null],[13,"Function","","",14,null],[13,"Generic","","",14,null],[13,"PushConstant","","",14,null],[13,"AtomicCounter","","",14,null],[13,"Image","","",14,null],[13,"StorageBuffer","","",14,null],[13,"CallableDataNV","","",14,null],[13,"IncomingCallableDataNV","","",14,null],[13,"RayPayloadNV","","",14,null],[13,"HitAttributeNV","","",14,null],[13,"IncomingRayPayloadNV","","",14,null],[13,"ShaderRecordBufferNV","","",14,null],[13,"PhysicalStorageBuffer","","",14,null],[18,"CallableDataKHR","","",14,null],[18,"IncomingCallableDataKHR","","",14,null],[18,"RayPayloadKHR","","",14,null],[18,"HitAttributeKHR","","",14,null],[18,"IncomingRayPayloadKHR","","",14,null],[18,"ShaderRecordBufferKHR","","",14,null],[18,"PhysicalStorageBufferEXT","","",14,null],[11,"required_capabilities","","",14,[[]]],[4,"Dim","","/// SPIR-V operand kind: Dim",null,null],[13,"Dim1D","","",15,null],[13,"Dim2D","","",15,null],[13,"Dim3D","","",15,null],[13,"DimCube","","",15,null],[13,"DimRect","","",15,null],[13,"DimBuffer","","",15,null],[13,"DimSubpassData","","",15,null],[11,"required_capabilities","","",15,[[]]],[4,"SamplerAddressingMode","","/// SPIR-V operand kind: SamplerAddressingMode",null,null],[13,"None","","",16,null],[13,"ClampToEdge","","",16,null],[13,"Clamp","","",16,null],[13,"Repeat","","",16,null],[13,"RepeatMirrored","","",16,null],[11,"required_capabilities","","",16,[[]]],[4,"SamplerFilterMode","","/// SPIR-V operand kind: SamplerFilterMode",null,null],[13,"Nearest","","",17,null],[13,"Linear","","",17,null],[11,"required_capabilities","","",17,[[]]],[4,"ImageFormat","","/// SPIR-V operand kind: ImageFormat",null,null],[13,"Unknown","","",18,null],[13,"Rgba32f","","",18,null],[13,"Rgba16f","","",18,null],[13,"R32f","","",18,null],[13,"Rgba8","","",18,null],[13,"Rgba8Snorm","","",18,null],[13,"Rg32f","","",18,null],[13,"Rg16f","","",18,null],[13,"R11fG11fB10f","","",18,null],[13,"R16f","","",18,null],[13,"Rgba16","","",18,null],[13,"Rgb10A2","","",18,null],[13,"Rg16","","",18,null],[13,"Rg8","","",18,null],[13,"R16","","",18,null],[13,"R8","","",18,null],[13,"Rgba16Snorm","","",18,null],[13,"Rg16Snorm","","",18,null],[13,"Rg8Snorm","","",18,null],[13,"R16Snorm","","",18,null],[13,"R8Snorm","","",18,null],[13,"Rgba32i","","",18,null],[13,"Rgba16i","","",18,null],[13,"Rgba8i","","",18,null],[13,"R32i","","",18,null],[13,"Rg32i","","",18,null],[13,"Rg16i","","",18,null],[13,"Rg8i","","",18,null],[13,"R16i","","",18,null],[13,"R8i","","",18,null],[13,"Rgba32ui","","",18,null],[13,"Rgba16ui","","",18,null],[13,"Rgba8ui","","",18,null],[13,"R32ui","","",18,null],[13,"Rgb10a2ui","","",18,null],[13,"Rg32ui","","",18,null],[13,"Rg16ui","","",18,null],[13,"Rg8ui","","",18,null],[13,"R16ui","","",18,null],[13,"R8ui","","",18,null],[11,"required_capabilities","","",18,[[]]],[4,"ImageChannelOrder","","/// SPIR-V operand kind: ImageChannelOrder",null,null],[13,"R","","",19,null],[13,"A","","",19,null],[13,"RG","","",19,null],[13,"RA","","",19,null],[13,"RGB","","",19,null],[13,"RGBA","","",19,null],[13,"BGRA","","",19,null],[13,"ARGB","","",19,null],[13,"Intensity","","",19,null],[13,"Luminance","","",19,null],[13,"Rx","","",19,null],[13,"RGx","","",19,null],[13,"RGBx","","",19,null],[13,"Depth","","",19,null],[13,"DepthStencil","","",19,null],[13,"sRGB","","",19,null],[13,"sRGBx","","",19,null],[13,"sRGBA","","",19,null],[13,"sBGRA","","",19,null],[13,"ABGR","","",19,null],[11,"required_capabilities","","",19,[[]]],[4,"ImageChannelDataType","","/// SPIR-V operand kind: ImageChannelDataType",null,null],[13,"SnormInt8","","",20,null],[13,"SnormInt16","","",20,null],[13,"UnormInt8","","",20,null],[13,"UnormInt16","","",20,null],[13,"UnormShort565","","",20,null],[13,"UnormShort555","","",20,null],[13,"UnormInt101010","","",20,null],[13,"SignedInt8","","",20,null],[13,"SignedInt16","","",20,null],[13,"SignedInt32","","",20,null],[13,"UnsignedInt8","","",20,null],[13,"UnsignedInt16","","",20,null],[13,"UnsignedInt32","","",20,null],[13,"HalfFloat","","",20,null],[13,"Float","","",20,null],[13,"UnormInt24","","",20,null],[13,"UnormInt101010_2","","",20,null],[11,"required_capabilities","","",20,[[]]],[4,"FPRoundingMode","","/// SPIR-V operand kind: FPRoundingMode",null,null],[13,"RTE","","",21,null],[13,"RTZ","","",21,null],[13,"RTP","","",21,null],[13,"RTN","","",21,null],[11,"required_capabilities","","",21,[[]]],[4,"LinkageType","","/// SPIR-V operand kind: LinkageType",null,null],[13,"Export","","",22,null],[13,"Import","","",22,null],[11,"required_capabilities","","",22,[[]]],[4,"AccessQualifier","","/// SPIR-V operand kind: AccessQualifier",null,null],[13,"ReadOnly","","",23,null],[13,"WriteOnly","","",23,null],[13,"ReadWrite","","",23,null],[11,"required_capabilities","","",23,[[]]],[4,"FunctionParameterAttribute","","/// SPIR-V operand kind: FunctionParameterAttribute",null,null],[13,"Zext","","",24,null],[13,"Sext","","",24,null],[13,"ByVal","","",24,null],[13,"Sret","","",24,null],[13,"NoAlias","","",24,null],[13,"NoCapture","","",24,null],[13,"NoWrite","","",24,null],[13,"NoReadWrite","","",24,null],[11,"required_capabilities","","",24,[[]]],[4,"Decoration","","/// SPIR-V operand kind: Decoration",null,null],[13,"RelaxedPrecision","","",25,null],[13,"SpecId","","",25,null],[13,"Block","","",25,null],[13,"BufferBlock","","",25,null],[13,"RowMajor","","",25,null],[13,"ColMajor","","",25,null],[13,"ArrayStride","","",25,null],[13,"MatrixStride","","",25,null],[13,"GLSLShared","","",25,null],[13,"GLSLPacked","","",25,null],[13,"CPacked","","",25,null],[13,"BuiltIn","","",25,null],[13,"NoPerspective","","",25,null],[13,"Flat","","",25,null],[13,"Patch","","",25,null],[13,"Centroid","","",25,null],[13,"Sample","","",25,null],[13,"Invariant","","",25,null],[13,"Restrict","","",25,null],[13,"Aliased","","",25,null],[13,"Volatile","","",25,null],[13,"Constant","","",25,null],[13,"Coherent","","",25,null],[13,"NonWritable","","",25,null],[13,"NonReadable","","",25,null],[13,"Uniform","","",25,null],[13,"UniformId","","",25,null],[13,"SaturatedConversion","","",25,null],[13,"Stream","","",25,null],[13,"Location","","",25,null],[13,"Component","","",25,null],[13,"Index","","",25,null],[13,"Binding","","",25,null],[13,"DescriptorSet","","",25,null],[13,"Offset","","",25,null],[13,"XfbBuffer","","",25,null],[13,"XfbStride","","",25,null],[13,"FuncParamAttr","","",25,null],[13,"FPRoundingMode","","",25,null],[13,"FPFastMathMode","","",25,null],[13,"LinkageAttributes","","",25,null],[13,"NoContraction","","",25,null],[13,"InputAttachmentIndex","","",25,null],[13,"Alignment","","",25,null],[13,"MaxByteOffset","","",25,null],[13,"AlignmentId","","",25,null],[13,"MaxByteOffsetId","","",25,null],[13,"NoSignedWrap","","",25,null],[13,"NoUnsignedWrap","","",25,null],[13,"ExplicitInterpAMD","","",25,null],[13,"OverrideCoverageNV","","",25,null],[13,"PassthroughNV","","",25,null],[13,"ViewportRelativeNV","","",25,null],[13,"SecondaryViewportRelativeNV","","",25,null],[13,"PerPrimitiveNV","","",25,null],[13,"PerViewNV","","",25,null],[13,"PerTaskNV","","",25,null],[13,"PerVertexNV","","",25,null],[13,"NonUniform","","",25,null],[13,"RestrictPointer","","",25,null],[13,"AliasedPointer","","",25,null],[13,"CounterBuffer","","",25,null],[13,"UserSemantic","","",25,null],[13,"UserTypeGOOGLE","","",25,null],[18,"NonUniformEXT","","",25,null],[18,"RestrictPointerEXT","","",25,null],[18,"AliasedPointerEXT","","",25,null],[18,"HlslCounterBufferGOOGLE","","",25,null],[18,"HlslSemanticGOOGLE","","",25,null],[11,"required_capabilities","","",25,[[]]],[4,"BuiltIn","","/// SPIR-V operand kind: BuiltIn",null,null],[13,"Position","","",26,null],[13,"PointSize","","",26,null],[13,"ClipDistance","","",26,null],[13,"CullDistance","","",26,null],[13,"VertexId","","",26,null],[13,"InstanceId","","",26,null],[13,"PrimitiveId","","",26,null],[13,"InvocationId","","",26,null],[13,"Layer","","",26,null],[13,"ViewportIndex","","",26,null],[13,"TessLevelOuter","","",26,null],[13,"TessLevelInner","","",26,null],[13,"TessCoord","","",26,null],[13,"PatchVertices","","",26,null],[13,"FragCoord","","",26,null],[13,"PointCoord","","",26,null],[13,"FrontFacing","","",26,null],[13,"SampleId","","",26,null],[13,"SamplePosition","","",26,null],[13,"SampleMask","","",26,null],[13,"FragDepth","","",26,null],[13,"HelperInvocation","","",26,null],[13,"NumWorkgroups","","",26,null],[13,"WorkgroupSize","","",26,null],[13,"WorkgroupId","","",26,null],[13,"LocalInvocationId","","",26,null],[13,"GlobalInvocationId","","",26,null],[13,"LocalInvocationIndex","","",26,null],[13,"WorkDim","","",26,null],[13,"GlobalSize","","",26,null],[13,"EnqueuedWorkgroupSize","","",26,null],[13,"GlobalOffset","","",26,null],[13,"GlobalLinearId","","",26,null],[13,"SubgroupSize","","",26,null],[13,"SubgroupMaxSize","","",26,null],[13,"NumSubgroups","","",26,null],[13,"NumEnqueuedSubgroups","","",26,null],[13,"SubgroupId","","",26,null],[13,"SubgroupLocalInvocationId","","",26,null],[13,"VertexIndex","","",26,null],[13,"InstanceIndex","","",26,null],[13,"SubgroupEqMask","","",26,null],[13,"SubgroupGeMask","","",26,null],[13,"SubgroupGtMask","","",26,null],[13,"SubgroupLeMask","","",26,null],[13,"SubgroupLtMask","","",26,null],[13,"BaseVertex","","",26,null],[13,"BaseInstance","","",26,null],[13,"DrawIndex","","",26,null],[13,"DeviceIndex","","",26,null],[13,"ViewIndex","","",26,null],[13,"BaryCoordNoPerspAMD","","",26,null],[13,"BaryCoordNoPerspCentroidAMD","","",26,null],[13,"BaryCoordNoPerspSampleAMD","","",26,null],[13,"BaryCoordSmoothAMD","","",26,null],[13,"BaryCoordSmoothCentroidAMD","","",26,null],[13,"BaryCoordSmoothSampleAMD","","",26,null],[13,"BaryCoordPullModelAMD","","",26,null],[13,"FragStencilRefEXT","","",26,null],[13,"ViewportMaskNV","","",26,null],[13,"SecondaryPositionNV","","",26,null],[13,"SecondaryViewportMaskNV","","",26,null],[13,"PositionPerViewNV","","",26,null],[13,"ViewportMaskPerViewNV","","",26,null],[13,"FullyCoveredEXT","","",26,null],[13,"TaskCountNV","","",26,null],[13,"PrimitiveCountNV","","",26,null],[13,"PrimitiveIndicesNV","","",26,null],[13,"ClipDistancePerViewNV","","",26,null],[13,"CullDistancePerViewNV","","",26,null],[13,"LayerPerViewNV","","",26,null],[13,"MeshViewCountNV","","",26,null],[13,"MeshViewIndicesNV","","",26,null],[13,"BaryCoordNV","","",26,null],[13,"BaryCoordNoPerspNV","","",26,null],[13,"FragSizeEXT","","",26,null],[13,"FragInvocationCountEXT","","",26,null],[13,"LaunchIdNV","","",26,null],[13,"LaunchSizeNV","","",26,null],[13,"WorldRayOriginNV","","",26,null],[13,"WorldRayDirectionNV","","",26,null],[13,"ObjectRayOriginNV","","",26,null],[13,"ObjectRayDirectionNV","","",26,null],[13,"RayTminNV","","",26,null],[13,"RayTmaxNV","","",26,null],[13,"InstanceCustomIndexNV","","",26,null],[13,"ObjectToWorldNV","","",26,null],[13,"WorldToObjectNV","","",26,null],[13,"HitTNV","","",26,null],[13,"HitKindNV","","",26,null],[13,"IncomingRayFlagsNV","","",26,null],[13,"RayGeometryIndexKHR","","",26,null],[13,"WarpsPerSMNV","","",26,null],[13,"SMCountNV","","",26,null],[13,"WarpIDNV","","",26,null],[13,"SMIDNV","","",26,null],[18,"SubgroupEqMaskKHR","","",26,null],[18,"SubgroupGeMaskKHR","","",26,null],[18,"SubgroupGtMaskKHR","","",26,null],[18,"SubgroupLeMaskKHR","","",26,null],[18,"SubgroupLtMaskKHR","","",26,null],[18,"FragmentSizeNV","","",26,null],[18,"InvocationsPerPixelNV","","",26,null],[18,"LaunchIdKHR","","",26,null],[18,"LaunchSizeKHR","","",26,null],[18,"WorldRayOriginKHR","","",26,null],[18,"WorldRayDirectionKHR","","",26,null],[18,"ObjectRayOriginKHR","","",26,null],[18,"ObjectRayDirectionKHR","","",26,null],[18,"RayTminKHR","","",26,null],[18,"RayTmaxKHR","","",26,null],[18,"InstanceCustomIndexKHR","","",26,null],[18,"ObjectToWorldKHR","","",26,null],[18,"WorldToObjectKHR","","",26,null],[18,"HitTKHR","","",26,null],[18,"HitKindKHR","","",26,null],[18,"IncomingRayFlagsKHR","","",26,null],[11,"required_capabilities","","",26,[[]]],[4,"Scope","","/// SPIR-V operand kind: Scope",null,null],[13,"CrossDevice","","",27,null],[13,"Device","","",27,null],[13,"Workgroup","","",27,null],[13,"Subgroup","","",27,null],[13,"Invocation","","",27,null],[13,"QueueFamily","","",27,null],[13,"ShaderCallKHR","","",27,null],[18,"QueueFamilyKHR","","",27,null],[11,"required_capabilities","","",27,[[]]],[4,"GroupOperation","","/// SPIR-V operand kind: GroupOperation",null,null],[13,"Reduce","","",28,null],[13,"InclusiveScan","","",28,null],[13,"ExclusiveScan","","",28,null],[13,"ClusteredReduce","","",28,null],[13,"PartitionedReduceNV","","",28,null],[13,"PartitionedInclusiveScanNV","","",28,null],[13,"PartitionedExclusiveScanNV","","",28,null],[11,"required_capabilities","","",28,[[]]],[4,"KernelEnqueueFlags","","/// SPIR-V operand kind: KernelEnqueueFlags",null,null],[13,"NoWait","","",29,null],[13,"WaitKernel","","",29,null],[13,"WaitWorkGroup","","",29,null],[11,"required_capabilities","","",29,[[]]],[4,"Capability","","/// SPIR-V operand kind: Capability",null,null],[13,"Matrix","","",30,null],[13,"Shader","","",30,null],[13,"Geometry","","",30,null],[13,"Tessellation","","",30,null],[13,"Addresses","","",30,null],[13,"Linkage","","",30,null],[13,"Kernel","","",30,null],[13,"Vector16","","",30,null],[13,"Float16Buffer","","",30,null],[13,"Float16","","",30,null],[13,"Float64","","",30,null],[13,"Int64","","",30,null],[13,"Int64Atomics","","",30,null],[13,"ImageBasic","","",30,null],[13,"ImageReadWrite","","",30,null],[13,"ImageMipmap","","",30,null],[13,"Pipes","","",30,null],[13,"Groups","","",30,null],[13,"DeviceEnqueue","","",30,null],[13,"LiteralSampler","","",30,null],[13,"AtomicStorage","","",30,null],[13,"Int16","","",30,null],[13,"TessellationPointSize","","",30,null],[13,"GeometryPointSize","","",30,null],[13,"ImageGatherExtended","","",30,null],[13,"StorageImageMultisample","","",30,null],[13,"UniformBufferArrayDynamicIndexing","","",30,null],[13,"SampledImageArrayDynamicIndexing","","",30,null],[13,"StorageBufferArrayDynamicIndexing","","",30,null],[13,"StorageImageArrayDynamicIndexing","","",30,null],[13,"ClipDistance","","",30,null],[13,"CullDistance","","",30,null],[13,"ImageCubeArray","","",30,null],[13,"SampleRateShading","","",30,null],[13,"ImageRect","","",30,null],[13,"SampledRect","","",30,null],[13,"GenericPointer","","",30,null],[13,"Int8","","",30,null],[13,"InputAttachment","","",30,null],[13,"SparseResidency","","",30,null],[13,"MinLod","","",30,null],[13,"Sampled1D","","",30,null],[13,"Image1D","","",30,null],[13,"SampledCubeArray","","",30,null],[13,"SampledBuffer","","",30,null],[13,"ImageBuffer","","",30,null],[13,"ImageMSArray","","",30,null],[13,"StorageImageExtendedFormats","","",30,null],[13,"ImageQuery","","",30,null],[13,"DerivativeControl","","",30,null],[13,"InterpolationFunction","","",30,null],[13,"TransformFeedback","","",30,null],[13,"GeometryStreams","","",30,null],[13,"StorageImageReadWithoutFormat","","",30,null],[13,"StorageImageWriteWithoutFormat","","",30,null],[13,"MultiViewport","","",30,null],[13,"SubgroupDispatch","","",30,null],[13,"NamedBarrier","","",30,null],[13,"PipeStorage","","",30,null],[13,"GroupNonUniform","","",30,null],[13,"GroupNonUniformVote","","",30,null],[13,"GroupNonUniformArithmetic","","",30,null],[13,"GroupNonUniformBallot","","",30,null],[13,"GroupNonUniformShuffle","","",30,null],[13,"GroupNonUniformShuffleRelative","","",30,null],[13,"GroupNonUniformClustered","","",30,null],[13,"GroupNonUniformQuad","","",30,null],[13,"ShaderLayer","","",30,null],[13,"ShaderViewportIndex","","",30,null],[13,"SubgroupBallotKHR","","",30,null],[13,"DrawParameters","","",30,null],[13,"SubgroupVoteKHR","","",30,null],[13,"StorageBuffer16BitAccess","","",30,null],[13,"UniformAndStorageBuffer16BitAccess","","",30,null],[13,"StoragePushConstant16","","",30,null],[13,"StorageInputOutput16","","",30,null],[13,"DeviceGroup","","",30,null],[13,"MultiView","","",30,null],[13,"VariablePointersStorageBuffer","","",30,null],[13,"VariablePointers","","",30,null],[13,"AtomicStorageOps","","",30,null],[13,"SampleMaskPostDepthCoverage","","",30,null],[13,"StorageBuffer8BitAccess","","",30,null],[13,"UniformAndStorageBuffer8BitAccess","","",30,null],[13,"StoragePushConstant8","","",30,null],[13,"DenormPreserve","","",30,null],[13,"DenormFlushToZero","","",30,null],[13,"SignedZeroInfNanPreserve","","",30,null],[13,"RoundingModeRTE","","",30,null],[13,"RoundingModeRTZ","","",30,null],[13,"RayQueryProvisionalKHR","","",30,null],[13,"RayTraversalPrimitiveCullingProvisionalKHR","","",30,null],[13,"Float16ImageAMD","","",30,null],[13,"ImageGatherBiasLodAMD","","",30,null],[13,"FragmentMaskAMD","","",30,null],[13,"StencilExportEXT","","",30,null],[13,"ImageReadWriteLodAMD","","",30,null],[13,"ShaderClockKHR","","",30,null],[13,"SampleMaskOverrideCoverageNV","","",30,null],[13,"GeometryShaderPassthroughNV","","",30,null],[13,"ShaderViewportIndexLayerEXT","","",30,null],[13,"ShaderViewportMaskNV","","",30,null],[13,"ShaderStereoViewNV","","",30,null],[13,"PerViewAttributesNV","","",30,null],[13,"FragmentFullyCoveredEXT","","",30,null],[13,"MeshShadingNV","","",30,null],[13,"ImageFootprintNV","","",30,null],[13,"FragmentBarycentricNV","","",30,null],[13,"ComputeDerivativeGroupQuadsNV","","",30,null],[13,"FragmentDensityEXT","","",30,null],[13,"GroupNonUniformPartitionedNV","","",30,null],[13,"ShaderNonUniform","","",30,null],[13,"RuntimeDescriptorArray","","",30,null],[13,"InputAttachmentArrayDynamicIndexing","","",30,null],[13,"UniformTexelBufferArrayDynamicIndexing","","",30,null],[13,"StorageTexelBufferArrayDynamicIndexing","","",30,null],[13,"UniformBufferArrayNonUniformIndexing","","",30,null],[13,"SampledImageArrayNonUniformIndexing","","",30,null],[13,"StorageBufferArrayNonUniformIndexing","","",30,null],[13,"StorageImageArrayNonUniformIndexing","","",30,null],[13,"InputAttachmentArrayNonUniformIndexing","","",30,null],[13,"UniformTexelBufferArrayNonUniformIndexing","","",30,null],[13,"StorageTexelBufferArrayNonUniformIndexing","","",30,null],[13,"RayTracingNV","","",30,null],[13,"VulkanMemoryModel","","",30,null],[13,"VulkanMemoryModelDeviceScope","","",30,null],[13,"PhysicalStorageBufferAddresses","","",30,null],[13,"ComputeDerivativeGroupLinearNV","","",30,null],[13,"RayTracingProvisionalKHR","","",30,null],[13,"CooperativeMatrixNV","","",30,null],[13,"FragmentShaderSampleInterlockEXT","","",30,null],[13,"FragmentShaderShadingRateInterlockEXT","","",30,null],[13,"ShaderSMBuiltinsNV","","",30,null],[13,"FragmentShaderPixelInterlockEXT","","",30,null],[13,"DemoteToHelperInvocationEXT","","",30,null],[13,"SubgroupShuffleINTEL","","",30,null],[13,"SubgroupBufferBlockIOINTEL","","",30,null],[13,"SubgroupImageBlockIOINTEL","","",30,null],[13,"SubgroupImageMediaBlockIOINTEL","","",30,null],[13,"IntegerFunctions2INTEL","","",30,null],[13,"SubgroupAvcMotionEstimationINTEL","","",30,null],[13,"SubgroupAvcMotionEstimationIntraINTEL","","",30,null],[13,"SubgroupAvcMotionEstimationChromaINTEL","","",30,null],[18,"StorageUniformBufferBlock16","","",30,null],[18,"StorageUniform16","","",30,null],[18,"ShaderViewportIndexLayerNV","","",30,null],[18,"ShadingRateNV","","",30,null],[18,"ShaderNonUniformEXT","","",30,null],[18,"RuntimeDescriptorArrayEXT","","",30,null],[18,"InputAttachmentArrayDynamicIndexingEXT","","",30,null],[18,"UniformTexelBufferArrayDynamicIndexingEXT","","",30,null],[18,"StorageTexelBufferArrayDynamicIndexingEXT","","",30,null],[18,"UniformBufferArrayNonUniformIndexingEXT","","",30,null],[18,"SampledImageArrayNonUniformIndexingEXT","","",30,null],[18,"StorageBufferArrayNonUniformIndexingEXT","","",30,null],[18,"StorageImageArrayNonUniformIndexingEXT","","",30,null],[18,"InputAttachmentArrayNonUniformIndexingEXT","","",30,null],[18,"UniformTexelBufferArrayNonUniformIndexingEXT","","",30,null],[18,"StorageTexelBufferArrayNonUniformIndexingEXT","","",30,null],[18,"VulkanMemoryModelKHR","","",30,null],[18,"VulkanMemoryModelDeviceScopeKHR","","",30,null],[18,"PhysicalStorageBufferAddressesEXT","","",30,null],[11,"required_capabilities","","",30,[[]]],[4,"RayQueryIntersection","","/// SPIR-V operand kind: RayQueryIntersection",null,null],[13,"RayQueryCandidateIntersectionKHR","","",31,null],[13,"RayQueryCommittedIntersectionKHR","","",31,null],[11,"required_capabilities","","",31,[[]]],[4,"RayQueryCommittedIntersectionType","","/// SPIR-V operand kind: RayQueryCommittedIntersectionType",null,null],[13,"RayQueryCommittedIntersectionNoneKHR","","",32,null],[13,"RayQueryCommittedIntersectionTriangleKHR","","",32,null],[13,"RayQueryCommittedIntersectionGeneratedKHR","","",32,null],[11,"required_capabilities","","",32,[[]]],[4,"RayQueryCandidateIntersectionType","","/// SPIR-V operand kind: RayQueryCandidateIntersectionType",null,null],[13,"RayQueryCandidateIntersectionTriangleKHR","","",33,null],[13,"RayQueryCandidateIntersectionAABBKHR","","",33,null],[11,"required_capabilities","","",33,[[]]],[4,"Op","","SPIR-V instructions opcodes",null,null],[13,"Nop","","",34,null],[13,"Undef","","",34,null],[13,"SourceContinued","","",34,null],[13,"Source","","",34,null],[13,"SourceExtension","","",34,null],[13,"Name","","",34,null],[13,"MemberName","","",34,null],[13,"String","","",34,null],[13,"Line","","",34,null],[13,"Extension","","",34,null],[13,"ExtInstImport","","",34,null],[13,"ExtInst","","",34,null],[13,"MemoryModel","","",34,null],[13,"EntryPoint","","",34,null],[13,"ExecutionMode","","",34,null],[13,"Capability","","",34,null],[13,"TypeVoid","","",34,null],[13,"TypeBool","","",34,null],[13,"TypeInt","","",34,null],[13,"TypeFloat","","",34,null],[13,"TypeVector","","",34,null],[13,"TypeMatrix","","",34,null],[13,"TypeImage","","",34,null],[13,"TypeSampler","","",34,null],[13,"TypeSampledImage","","",34,null],[13,"TypeArray","","",34,null],[13,"TypeRuntimeArray","","",34,null],[13,"TypeStruct","","",34,null],[13,"TypeOpaque","","",34,null],[13,"TypePointer","","",34,null],[13,"TypeFunction","","",34,null],[13,"TypeEvent","","",34,null],[13,"TypeDeviceEvent","","",34,null],[13,"TypeReserveId","","",34,null],[13,"TypeQueue","","",34,null],[13,"TypePipe","","",34,null],[13,"TypeForwardPointer","","",34,null],[13,"ConstantTrue","","",34,null],[13,"ConstantFalse","","",34,null],[13,"Constant","","",34,null],[13,"ConstantComposite","","",34,null],[13,"ConstantSampler","","",34,null],[13,"ConstantNull","","",34,null],[13,"SpecConstantTrue","","",34,null],[13,"SpecConstantFalse","","",34,null],[13,"SpecConstant","","",34,null],[13,"SpecConstantComposite","","",34,null],[13,"SpecConstantOp","","",34,null],[13,"Function","","",34,null],[13,"FunctionParameter","","",34,null],[13,"FunctionEnd","","",34,null],[13,"FunctionCall","","",34,null],[13,"Variable","","",34,null],[13,"ImageTexelPointer","","",34,null],[13,"Load","","",34,null],[13,"Store","","",34,null],[13,"CopyMemory","","",34,null],[13,"CopyMemorySized","","",34,null],[13,"AccessChain","","",34,null],[13,"InBoundsAccessChain","","",34,null],[13,"PtrAccessChain","","",34,null],[13,"ArrayLength","","",34,null],[13,"GenericPtrMemSemantics","","",34,null],[13,"InBoundsPtrAccessChain","","",34,null],[13,"Decorate","","",34,null],[13,"MemberDecorate","","",34,null],[13,"DecorationGroup","","",34,null],[13,"GroupDecorate","","",34,null],[13,"GroupMemberDecorate","","",34,null],[13,"VectorExtractDynamic","","",34,null],[13,"VectorInsertDynamic","","",34,null],[13,"VectorShuffle","","",34,null],[13,"CompositeConstruct","","",34,null],[13,"CompositeExtract","","",34,null],[13,"CompositeInsert","","",34,null],[13,"CopyObject","","",34,null],[13,"Transpose","","",34,null],[13,"SampledImage","","",34,null],[13,"ImageSampleImplicitLod","","",34,null],[13,"ImageSampleExplicitLod","","",34,null],[13,"ImageSampleDrefImplicitLod","","",34,null],[13,"ImageSampleDrefExplicitLod","","",34,null],[13,"ImageSampleProjImplicitLod","","",34,null],[13,"ImageSampleProjExplicitLod","","",34,null],[13,"ImageSampleProjDrefImplicitLod","","",34,null],[13,"ImageSampleProjDrefExplicitLod","","",34,null],[13,"ImageFetch","","",34,null],[13,"ImageGather","","",34,null],[13,"ImageDrefGather","","",34,null],[13,"ImageRead","","",34,null],[13,"ImageWrite","","",34,null],[13,"Image","","",34,null],[13,"ImageQueryFormat","","",34,null],[13,"ImageQueryOrder","","",34,null],[13,"ImageQuerySizeLod","","",34,null],[13,"ImageQuerySize","","",34,null],[13,"ImageQueryLod","","",34,null],[13,"ImageQueryLevels","","",34,null],[13,"ImageQuerySamples","","",34,null],[13,"ConvertFToU","","",34,null],[13,"ConvertFToS","","",34,null],[13,"ConvertSToF","","",34,null],[13,"ConvertUToF","","",34,null],[13,"UConvert","","",34,null],[13,"SConvert","","",34,null],[13,"FConvert","","",34,null],[13,"QuantizeToF16","","",34,null],[13,"ConvertPtrToU","","",34,null],[13,"SatConvertSToU","","",34,null],[13,"SatConvertUToS","","",34,null],[13,"ConvertUToPtr","","",34,null],[13,"PtrCastToGeneric","","",34,null],[13,"GenericCastToPtr","","",34,null],[13,"GenericCastToPtrExplicit","","",34,null],[13,"Bitcast","","",34,null],[13,"SNegate","","",34,null],[13,"FNegate","","",34,null],[13,"IAdd","","",34,null],[13,"FAdd","","",34,null],[13,"ISub","","",34,null],[13,"FSub","","",34,null],[13,"IMul","","",34,null],[13,"FMul","","",34,null],[13,"UDiv","","",34,null],[13,"SDiv","","",34,null],[13,"FDiv","","",34,null],[13,"UMod","","",34,null],[13,"SRem","","",34,null],[13,"SMod","","",34,null],[13,"FRem","","",34,null],[13,"FMod","","",34,null],[13,"VectorTimesScalar","","",34,null],[13,"MatrixTimesScalar","","",34,null],[13,"VectorTimesMatrix","","",34,null],[13,"MatrixTimesVector","","",34,null],[13,"MatrixTimesMatrix","","",34,null],[13,"OuterProduct","","",34,null],[13,"Dot","","",34,null],[13,"IAddCarry","","",34,null],[13,"ISubBorrow","","",34,null],[13,"UMulExtended","","",34,null],[13,"SMulExtended","","",34,null],[13,"Any","","",34,null],[13,"All","","",34,null],[13,"IsNan","","",34,null],[13,"IsInf","","",34,null],[13,"IsFinite","","",34,null],[13,"IsNormal","","",34,null],[13,"SignBitSet","","",34,null],[13,"LessOrGreater","","",34,null],[13,"Ordered","","",34,null],[13,"Unordered","","",34,null],[13,"LogicalEqual","","",34,null],[13,"LogicalNotEqual","","",34,null],[13,"LogicalOr","","",34,null],[13,"LogicalAnd","","",34,null],[13,"LogicalNot","","",34,null],[13,"Select","","",34,null],[13,"IEqual","","",34,null],[13,"INotEqual","","",34,null],[13,"UGreaterThan","","",34,null],[13,"SGreaterThan","","",34,null],[13,"UGreaterThanEqual","","",34,null],[13,"SGreaterThanEqual","","",34,null],[13,"ULessThan","","",34,null],[13,"SLessThan","","",34,null],[13,"ULessThanEqual","","",34,null],[13,"SLessThanEqual","","",34,null],[13,"FOrdEqual","","",34,null],[13,"FUnordEqual","","",34,null],[13,"FOrdNotEqual","","",34,null],[13,"FUnordNotEqual","","",34,null],[13,"FOrdLessThan","","",34,null],[13,"FUnordLessThan","","",34,null],[13,"FOrdGreaterThan","","",34,null],[13,"FUnordGreaterThan","","",34,null],[13,"FOrdLessThanEqual","","",34,null],[13,"FUnordLessThanEqual","","",34,null],[13,"FOrdGreaterThanEqual","","",34,null],[13,"FUnordGreaterThanEqual","","",34,null],[13,"ShiftRightLogical","","",34,null],[13,"ShiftRightArithmetic","","",34,null],[13,"ShiftLeftLogical","","",34,null],[13,"BitwiseOr","","",34,null],[13,"BitwiseXor","","",34,null],[13,"BitwiseAnd","","",34,null],[13,"Not","","",34,null],[13,"BitFieldInsert","","",34,null],[13,"BitFieldSExtract","","",34,null],[13,"BitFieldUExtract","","",34,null],[13,"BitReverse","","",34,null],[13,"BitCount","","",34,null],[13,"DPdx","","",34,null],[13,"DPdy","","",34,null],[13,"Fwidth","","",34,null],[13,"DPdxFine","","",34,null],[13,"DPdyFine","","",34,null],[13,"FwidthFine","","",34,null],[13,"DPdxCoarse","","",34,null],[13,"DPdyCoarse","","",34,null],[13,"FwidthCoarse","","",34,null],[13,"EmitVertex","","",34,null],[13,"EndPrimitive","","",34,null],[13,"EmitStreamVertex","","",34,null],[13,"EndStreamPrimitive","","",34,null],[13,"ControlBarrier","","",34,null],[13,"MemoryBarrier","","",34,null],[13,"AtomicLoad","","",34,null],[13,"AtomicStore","","",34,null],[13,"AtomicExchange","","",34,null],[13,"AtomicCompareExchange","","",34,null],[13,"AtomicCompareExchangeWeak","","",34,null],[13,"AtomicIIncrement","","",34,null],[13,"AtomicIDecrement","","",34,null],[13,"AtomicIAdd","","",34,null],[13,"AtomicISub","","",34,null],[13,"AtomicSMin","","",34,null],[13,"AtomicUMin","","",34,null],[13,"AtomicSMax","","",34,null],[13,"AtomicUMax","","",34,null],[13,"AtomicAnd","","",34,null],[13,"AtomicOr","","",34,null],[13,"AtomicXor","","",34,null],[13,"Phi","","",34,null],[13,"LoopMerge","","",34,null],[13,"SelectionMerge","","",34,null],[13,"Label","","",34,null],[13,"Branch","","",34,null],[13,"BranchConditional","","",34,null],[13,"Switch","","",34,null],[13,"Kill","","",34,null],[13,"Return","","",34,null],[13,"ReturnValue","","",34,null],[13,"Unreachable","","",34,null],[13,"LifetimeStart","","",34,null],[13,"LifetimeStop","","",34,null],[13,"GroupAsyncCopy","","",34,null],[13,"GroupWaitEvents","","",34,null],[13,"GroupAll","","",34,null],[13,"GroupAny","","",34,null],[13,"GroupBroadcast","","",34,null],[13,"GroupIAdd","","",34,null],[13,"GroupFAdd","","",34,null],[13,"GroupFMin","","",34,null],[13,"GroupUMin","","",34,null],[13,"GroupSMin","","",34,null],[13,"GroupFMax","","",34,null],[13,"GroupUMax","","",34,null],[13,"GroupSMax","","",34,null],[13,"ReadPipe","","",34,null],[13,"WritePipe","","",34,null],[13,"ReservedReadPipe","","",34,null],[13,"ReservedWritePipe","","",34,null],[13,"ReserveReadPipePackets","","",34,null],[13,"ReserveWritePipePackets","","",34,null],[13,"CommitReadPipe","","",34,null],[13,"CommitWritePipe","","",34,null],[13,"IsValidReserveId","","",34,null],[13,"GetNumPipePackets","","",34,null],[13,"GetMaxPipePackets","","",34,null],[13,"GroupReserveReadPipePackets","","",34,null],[13,"GroupReserveWritePipePackets","","",34,null],[13,"GroupCommitReadPipe","","",34,null],[13,"GroupCommitWritePipe","","",34,null],[13,"EnqueueMarker","","",34,null],[13,"EnqueueKernel","","",34,null],[13,"GetKernelNDrangeSubGroupCount","","",34,null],[13,"GetKernelNDrangeMaxSubGroupSize","","",34,null],[13,"GetKernelWorkGroupSize","","",34,null],[13,"GetKernelPreferredWorkGroupSizeMultiple","","",34,null],[13,"RetainEvent","","",34,null],[13,"ReleaseEvent","","",34,null],[13,"CreateUserEvent","","",34,null],[13,"IsValidEvent","","",34,null],[13,"SetUserEventStatus","","",34,null],[13,"CaptureEventProfilingInfo","","",34,null],[13,"GetDefaultQueue","","",34,null],[13,"BuildNDRange","","",34,null],[13,"ImageSparseSampleImplicitLod","","",34,null],[13,"ImageSparseSampleExplicitLod","","",34,null],[13,"ImageSparseSampleDrefImplicitLod","","",34,null],[13,"ImageSparseSampleDrefExplicitLod","","",34,null],[13,"ImageSparseSampleProjImplicitLod","","",34,null],[13,"ImageSparseSampleProjExplicitLod","","",34,null],[13,"ImageSparseSampleProjDrefImplicitLod","","",34,null],[13,"ImageSparseSampleProjDrefExplicitLod","","",34,null],[13,"ImageSparseFetch","","",34,null],[13,"ImageSparseGather","","",34,null],[13,"ImageSparseDrefGather","","",34,null],[13,"ImageSparseTexelsResident","","",34,null],[13,"NoLine","","",34,null],[13,"AtomicFlagTestAndSet","","",34,null],[13,"AtomicFlagClear","","",34,null],[13,"ImageSparseRead","","",34,null],[13,"SizeOf","","",34,null],[13,"TypePipeStorage","","",34,null],[13,"ConstantPipeStorage","","",34,null],[13,"CreatePipeFromPipeStorage","","",34,null],[13,"GetKernelLocalSizeForSubgroupCount","","",34,null],[13,"GetKernelMaxNumSubgroups","","",34,null],[13,"TypeNamedBarrier","","",34,null],[13,"NamedBarrierInitialize","","",34,null],[13,"MemoryNamedBarrier","","",34,null],[13,"ModuleProcessed","","",34,null],[13,"ExecutionModeId","","",34,null],[13,"DecorateId","","",34,null],[13,"GroupNonUniformElect","","",34,null],[13,"GroupNonUniformAll","","",34,null],[13,"GroupNonUniformAny","","",34,null],[13,"GroupNonUniformAllEqual","","",34,null],[13,"GroupNonUniformBroadcast","","",34,null],[13,"GroupNonUniformBroadcastFirst","","",34,null],[13,"GroupNonUniformBallot","","",34,null],[13,"GroupNonUniformInverseBallot","","",34,null],[13,"GroupNonUniformBallotBitExtract","","",34,null],[13,"GroupNonUniformBallotBitCount","","",34,null],[13,"GroupNonUniformBallotFindLSB","","",34,null],[13,"GroupNonUniformBallotFindMSB","","",34,null],[13,"GroupNonUniformShuffle","","",34,null],[13,"GroupNonUniformShuffleXor","","",34,null],[13,"GroupNonUniformShuffleUp","","",34,null],[13,"GroupNonUniformShuffleDown","","",34,null],[13,"GroupNonUniformIAdd","","",34,null],[13,"GroupNonUniformFAdd","","",34,null],[13,"GroupNonUniformIMul","","",34,null],[13,"GroupNonUniformFMul","","",34,null],[13,"GroupNonUniformSMin","","",34,null],[13,"GroupNonUniformUMin","","",34,null],[13,"GroupNonUniformFMin","","",34,null],[13,"GroupNonUniformSMax","","",34,null],[13,"GroupNonUniformUMax","","",34,null],[13,"GroupNonUniformFMax","","",34,null],[13,"GroupNonUniformBitwiseAnd","","",34,null],[13,"GroupNonUniformBitwiseOr","","",34,null],[13,"GroupNonUniformBitwiseXor","","",34,null],[13,"GroupNonUniformLogicalAnd","","",34,null],[13,"GroupNonUniformLogicalOr","","",34,null],[13,"GroupNonUniformLogicalXor","","",34,null],[13,"GroupNonUniformQuadBroadcast","","",34,null],[13,"GroupNonUniformQuadSwap","","",34,null],[13,"CopyLogical","","",34,null],[13,"PtrEqual","","",34,null],[13,"PtrNotEqual","","",34,null],[13,"PtrDiff","","",34,null],[13,"SubgroupBallotKHR","","",34,null],[13,"SubgroupFirstInvocationKHR","","",34,null],[13,"SubgroupAllKHR","","",34,null],[13,"SubgroupAnyKHR","","",34,null],[13,"SubgroupAllEqualKHR","","",34,null],[13,"SubgroupReadInvocationKHR","","",34,null],[13,"TypeRayQueryProvisionalKHR","","",34,null],[13,"RayQueryInitializeKHR","","",34,null],[13,"RayQueryTerminateKHR","","",34,null],[13,"RayQueryGenerateIntersectionKHR","","",34,null],[13,"RayQueryConfirmIntersectionKHR","","",34,null],[13,"RayQueryProceedKHR","","",34,null],[13,"RayQueryGetIntersectionTypeKHR","","",34,null],[13,"GroupIAddNonUniformAMD","","",34,null],[13,"GroupFAddNonUniformAMD","","",34,null],[13,"GroupFMinNonUniformAMD","","",34,null],[13,"GroupUMinNonUniformAMD","","",34,null],[13,"GroupSMinNonUniformAMD","","",34,null],[13,"GroupFMaxNonUniformAMD","","",34,null],[13,"GroupUMaxNonUniformAMD","","",34,null],[13,"GroupSMaxNonUniformAMD","","",34,null],[13,"FragmentMaskFetchAMD","","",34,null],[13,"FragmentFetchAMD","","",34,null],[13,"ReadClockKHR","","",34,null],[13,"ImageSampleFootprintNV","","",34,null],[13,"GroupNonUniformPartitionNV","","",34,null],[13,"WritePackedPrimitiveIndices4x8NV","","",34,null],[13,"ReportIntersectionNV","","",34,null],[13,"IgnoreIntersectionNV","","",34,null],[13,"TerminateRayNV","","",34,null],[13,"TraceNV","","",34,null],[13,"TypeAccelerationStructureNV","","",34,null],[13,"ExecuteCallableNV","","",34,null],[13,"TypeCooperativeMatrixNV","","",34,null],[13,"CooperativeMatrixLoadNV","","",34,null],[13,"CooperativeMatrixStoreNV","","",34,null],[13,"CooperativeMatrixMulAddNV","","",34,null],[13,"CooperativeMatrixLengthNV","","",34,null],[13,"BeginInvocationInterlockEXT","","",34,null],[13,"EndInvocationInterlockEXT","","",34,null],[13,"DemoteToHelperInvocationEXT","","",34,null],[13,"IsHelperInvocationEXT","","",34,null],[13,"SubgroupShuffleINTEL","","",34,null],[13,"SubgroupShuffleDownINTEL","","",34,null],[13,"SubgroupShuffleUpINTEL","","",34,null],[13,"SubgroupShuffleXorINTEL","","",34,null],[13,"SubgroupBlockReadINTEL","","",34,null],[13,"SubgroupBlockWriteINTEL","","",34,null],[13,"SubgroupImageBlockReadINTEL","","",34,null],[13,"SubgroupImageBlockWriteINTEL","","",34,null],[13,"SubgroupImageMediaBlockReadINTEL","","",34,null],[13,"SubgroupImageMediaBlockWriteINTEL","","",34,null],[13,"UCountLeadingZerosINTEL","","",34,null],[13,"UCountTrailingZerosINTEL","","",34,null],[13,"AbsISubINTEL","","",34,null],[13,"AbsUSubINTEL","","",34,null],[13,"IAddSatINTEL","","",34,null],[13,"UAddSatINTEL","","",34,null],[13,"IAverageINTEL","","",34,null],[13,"UAverageINTEL","","",34,null],[13,"IAverageRoundedINTEL","","",34,null],[13,"UAverageRoundedINTEL","","",34,null],[13,"ISubSatINTEL","","",34,null],[13,"USubSatINTEL","","",34,null],[13,"IMul32x16INTEL","","",34,null],[13,"UMul32x16INTEL","","",34,null],[13,"DecorateString","","",34,null],[13,"MemberDecorateString","","",34,null],[13,"VmeImageINTEL","","",34,null],[13,"TypeVmeImageINTEL","","",34,null],[13,"TypeAvcImePayloadINTEL","","",34,null],[13,"TypeAvcRefPayloadINTEL","","",34,null],[13,"TypeAvcSicPayloadINTEL","","",34,null],[13,"TypeAvcMcePayloadINTEL","","",34,null],[13,"TypeAvcMceResultINTEL","","",34,null],[13,"TypeAvcImeResultINTEL","","",34,null],[13,"TypeAvcImeResultSingleReferenceStreamoutINTEL","","",34,null],[13,"TypeAvcImeResultDualReferenceStreamoutINTEL","","",34,null],[13,"TypeAvcImeSingleReferenceStreaminINTEL","","",34,null],[13,"TypeAvcImeDualReferenceStreaminINTEL","","",34,null],[13,"TypeAvcRefResultINTEL","","",34,null],[13,"TypeAvcSicResultINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultInterShapePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceSetInterShapePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL","","",34,null],[13,"SubgroupAvcMceSetInterDirectionPenaltyINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL","","",34,null],[13,"SubgroupAvcMceSetMotionVectorCostFunctionINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL","","",34,null],[13,"SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL","","",34,null],[13,"SubgroupAvcMceSetAcOnlyHaarINTEL","","",34,null],[13,"SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL","","",34,null],[13,"SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL","","",34,null],[13,"SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL","","",34,null],[13,"SubgroupAvcMceConvertToImePayloadINTEL","","",34,null],[13,"SubgroupAvcMceConvertToImeResultINTEL","","",34,null],[13,"SubgroupAvcMceConvertToRefPayloadINTEL","","",34,null],[13,"SubgroupAvcMceConvertToRefResultINTEL","","",34,null],[13,"SubgroupAvcMceConvertToSicPayloadINTEL","","",34,null],[13,"SubgroupAvcMceConvertToSicResultINTEL","","",34,null],[13,"SubgroupAvcMceGetMotionVectorsINTEL","","",34,null],[13,"SubgroupAvcMceGetInterDistortionsINTEL","","",34,null],[13,"SubgroupAvcMceGetBestInterDistortionsINTEL","","",34,null],[13,"SubgroupAvcMceGetInterMajorShapeINTEL","","",34,null],[13,"SubgroupAvcMceGetInterMinorShapeINTEL","","",34,null],[13,"SubgroupAvcMceGetInterDirectionsINTEL","","",34,null],[13,"SubgroupAvcMceGetInterMotionVectorCountINTEL","","",34,null],[13,"SubgroupAvcMceGetInterReferenceIdsINTEL","","",34,null],[13,"SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL","","",34,null],[13,"SubgroupAvcImeInitializeINTEL","","",34,null],[13,"SubgroupAvcImeSetSingleReferenceINTEL","","",34,null],[13,"SubgroupAvcImeSetDualReferenceINTEL","","",34,null],[13,"SubgroupAvcImeRefWindowSizeINTEL","","",34,null],[13,"SubgroupAvcImeAdjustRefOffsetINTEL","","",34,null],[13,"SubgroupAvcImeConvertToMcePayloadINTEL","","",34,null],[13,"SubgroupAvcImeSetMaxMotionVectorCountINTEL","","",34,null],[13,"SubgroupAvcImeSetUnidirectionalMixDisableINTEL","","",34,null],[13,"SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL","","",34,null],[13,"SubgroupAvcImeSetWeightedSadINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL","","",34,null],[13,"SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL","","",34,null],[13,"SubgroupAvcImeConvertToMceResultINTEL","","",34,null],[13,"SubgroupAvcImeGetSingleReferenceStreaminINTEL","","",34,null],[13,"SubgroupAvcImeGetDualReferenceStreaminINTEL","","",34,null],[13,"SubgroupAvcImeStripSingleReferenceStreamoutINTEL","","",34,null],[13,"SubgroupAvcImeStripDualReferenceStreamoutINTEL","","",34,null],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL","","",34,null],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL","","",34,null],[13,"SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL","","",34,null],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL","","",34,null],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL","","",34,null],[13,"SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL","","",34,null],[13,"SubgroupAvcImeGetBorderReachedINTEL","","",34,null],[13,"SubgroupAvcImeGetTruncatedSearchIndicationINTEL","","",34,null],[13,"SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL","","",34,null],[13,"SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL","","",34,null],[13,"SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL","","",34,null],[13,"SubgroupAvcFmeInitializeINTEL","","",34,null],[13,"SubgroupAvcBmeInitializeINTEL","","",34,null],[13,"SubgroupAvcRefConvertToMcePayloadINTEL","","",34,null],[13,"SubgroupAvcRefSetBidirectionalMixDisableINTEL","","",34,null],[13,"SubgroupAvcRefSetBilinearFilterEnableINTEL","","",34,null],[13,"SubgroupAvcRefEvaluateWithSingleReferenceINTEL","","",34,null],[13,"SubgroupAvcRefEvaluateWithDualReferenceINTEL","","",34,null],[13,"SubgroupAvcRefEvaluateWithMultiReferenceINTEL","","",34,null],[13,"SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL","","",34,null],[13,"SubgroupAvcRefConvertToMceResultINTEL","","",34,null],[13,"SubgroupAvcSicInitializeINTEL","","",34,null],[13,"SubgroupAvcSicConfigureSkcINTEL","","",34,null],[13,"SubgroupAvcSicConfigureIpeLumaINTEL","","",34,null],[13,"SubgroupAvcSicConfigureIpeLumaChromaINTEL","","",34,null],[13,"SubgroupAvcSicGetMotionVectorMaskINTEL","","",34,null],[13,"SubgroupAvcSicConvertToMcePayloadINTEL","","",34,null],[13,"SubgroupAvcSicSetIntraLumaShapePenaltyINTEL","","",34,null],[13,"SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL","","",34,null],[13,"SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL","","",34,null],[13,"SubgroupAvcSicSetBilinearFilterEnableINTEL","","",34,null],[13,"SubgroupAvcSicSetSkcForwardTransformEnableINTEL","","",34,null],[13,"SubgroupAvcSicSetBlockBasedRawSkipSadINTEL","","",34,null],[13,"SubgroupAvcSicEvaluateIpeINTEL","","",34,null],[13,"SubgroupAvcSicEvaluateWithSingleReferenceINTEL","","",34,null],[13,"SubgroupAvcSicEvaluateWithDualReferenceINTEL","","",34,null],[13,"SubgroupAvcSicEvaluateWithMultiReferenceINTEL","","",34,null],[13,"SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL","","",34,null],[13,"SubgroupAvcSicConvertToMceResultINTEL","","",34,null],[13,"SubgroupAvcSicGetIpeLumaShapeINTEL","","",34,null],[13,"SubgroupAvcSicGetBestIpeLumaDistortionINTEL","","",34,null],[13,"SubgroupAvcSicGetBestIpeChromaDistortionINTEL","","",34,null],[13,"SubgroupAvcSicGetPackedIpeLumaModesINTEL","","",34,null],[13,"SubgroupAvcSicGetIpeChromaModeINTEL","","",34,null],[13,"SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL","","",34,null],[13,"SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL","","",34,null],[13,"SubgroupAvcSicGetInterRawSadsINTEL","","",34,null],[13,"RayQueryGetRayTMinKHR","","",34,null],[13,"RayQueryGetRayFlagsKHR","","",34,null],[13,"RayQueryGetIntersectionTKHR","","",34,null],[13,"RayQueryGetIntersectionInstanceCustomIndexKHR","","",34,null],[13,"RayQueryGetIntersectionInstanceIdKHR","","",34,null],[13,"RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR","","",34,null],[13,"RayQueryGetIntersectionGeometryIndexKHR","","",34,null],[13,"RayQueryGetIntersectionPrimitiveIndexKHR","","",34,null],[13,"RayQueryGetIntersectionBarycentricsKHR","","",34,null],[13,"RayQueryGetIntersectionFrontFaceKHR","","",34,null],[13,"RayQueryGetIntersectionCandidateAABBOpaqueKHR","","",34,null],[13,"RayQueryGetIntersectionObjectRayDirectionKHR","","",34,null],[13,"RayQueryGetIntersectionObjectRayOriginKHR","","",34,null],[13,"RayQueryGetWorldRayDirectionKHR","","",34,null],[13,"RayQueryGetWorldRayOriginKHR","","",34,null],[13,"RayQueryGetIntersectionObjectToWorldKHR","","",34,null],[13,"RayQueryGetIntersectionWorldToObjectKHR","","",34,null],[18,"ReportIntersectionKHR","","",34,null],[18,"IgnoreIntersectionKHR","","",34,null],[18,"TerminateRayKHR","","",34,null],[18,"TraceRayKHR","","",34,null],[18,"TypeAccelerationStructureKHR","","",34,null],[18,"ExecuteCallableKHR","","",34,null],[18,"DecorateStringGOOGLE","","",34,null],[18,"MemberDecorateStringGOOGLE","","",34,null],[4,"GLOp","","GLSL.std.450 extended instruction opcode",null,null],[13,"Round","","",35,null],[13,"RoundEven","","",35,null],[13,"Trunc","","",35,null],[13,"FAbs","","",35,null],[13,"SAbs","","",35,null],[13,"FSign","","",35,null],[13,"SSign","","",35,null],[13,"Floor","","",35,null],[13,"Ceil","","",35,null],[13,"Fract","","",35,null],[13,"Radians","","",35,null],[13,"Degrees","","",35,null],[13,"Sin","","",35,null],[13,"Cos","","",35,null],[13,"Tan","","",35,null],[13,"Asin","","",35,null],[13,"Acos","","",35,null],[13,"Atan","","",35,null],[13,"Sinh","","",35,null],[13,"Cosh","","",35,null],[13,"Tanh","","",35,null],[13,"Asinh","","",35,null],[13,"Acosh","","",35,null],[13,"Atanh","","",35,null],[13,"Atan2","","",35,null],[13,"Pow","","",35,null],[13,"Exp","","",35,null],[13,"Log","","",35,null],[13,"Exp2","","",35,null],[13,"Log2","","",35,null],[13,"Sqrt","","",35,null],[13,"InverseSqrt","","",35,null],[13,"Determinant","","",35,null],[13,"MatrixInverse","","",35,null],[13,"Modf","","",35,null],[13,"ModfStruct","","",35,null],[13,"FMin","","",35,null],[13,"UMin","","",35,null],[13,"SMin","","",35,null],[13,"FMax","","",35,null],[13,"UMax","","",35,null],[13,"SMax","","",35,null],[13,"FClamp","","",35,null],[13,"UClamp","","",35,null],[13,"SClamp","","",35,null],[13,"FMix","","",35,null],[13,"IMix","","",35,null],[13,"Step","","",35,null],[13,"SmoothStep","","",35,null],[13,"Fma","","",35,null],[13,"Frexp","","",35,null],[13,"FrexpStruct","","",35,null],[13,"Ldexp","","",35,null],[13,"PackSnorm4x8","","",35,null],[13,"PackUnorm4x8","","",35,null],[13,"PackSnorm2x16","","",35,null],[13,"PackUnorm2x16","","",35,null],[13,"PackHalf2x16","","",35,null],[13,"PackDouble2x32","","",35,null],[13,"UnpackSnorm2x16","","",35,null],[13,"UnpackUnorm2x16","","",35,null],[13,"UnpackHalf2x16","","",35,null],[13,"UnpackSnorm4x8","","",35,null],[13,"UnpackUnorm4x8","","",35,null],[13,"UnpackDouble2x32","","",35,null],[13,"Length","","",35,null],[13,"Distance","","",35,null],[13,"Cross","","",35,null],[13,"Normalize","","",35,null],[13,"FaceForward","","",35,null],[13,"Reflect","","",35,null],[13,"Refract","","",35,null],[13,"FindILsb","","",35,null],[13,"FindSMsb","","",35,null],[13,"FindUMsb","","",35,null],[13,"InterpolateAtCentroid","","",35,null],[13,"InterpolateAtSample","","",35,null],[13,"InterpolateAtOffset","","",35,null],[13,"NMin","","",35,null],[13,"NMax","","",35,null],[13,"NClamp","","",35,null],[4,"CLOp","","OpenCL.std extended instruction opcode",null,null],[13,"acos","","",36,null],[13,"acosh","","",36,null],[13,"acospi","","",36,null],[13,"asin","","",36,null],[13,"asinh","","",36,null],[13,"asinpi","","",36,null],[13,"atan","","",36,null],[13,"atan2","","",36,null],[13,"atanh","","",36,null],[13,"atanpi","","",36,null],[13,"atan2pi","","",36,null],[13,"cbrt","","",36,null],[13,"ceil","","",36,null],[13,"copysign","","",36,null],[13,"cos","","",36,null],[13,"cosh","","",36,null],[13,"cospi","","",36,null],[13,"erfc","","",36,null],[13,"erf","","",36,null],[13,"exp","","",36,null],[13,"exp2","","",36,null],[13,"exp10","","",36,null],[13,"expm1","","",36,null],[13,"fabs","","",36,null],[13,"fdim","","",36,null],[13,"floor","","",36,null],[13,"fma","","",36,null],[13,"fmax","","",36,null],[13,"fmin","","",36,null],[13,"fmod","","",36,null],[13,"fract","","",36,null],[13,"frexp","","",36,null],[13,"hypot","","",36,null],[13,"ilogb","","",36,null],[13,"ldexp","","",36,null],[13,"lgamma","","",36,null],[13,"lgamma_r","","",36,null],[13,"log","","",36,null],[13,"log2","","",36,null],[13,"log10","","",36,null],[13,"log1p","","",36,null],[13,"logb","","",36,null],[13,"mad","","",36,null],[13,"maxmag","","",36,null],[13,"minmag","","",36,null],[13,"modf","","",36,null],[13,"nan","","",36,null],[13,"nextafter","","",36,null],[13,"pow","","",36,null],[13,"pown","","",36,null],[13,"powr","","",36,null],[13,"remainder","","",36,null],[13,"remquo","","",36,null],[13,"rint","","",36,null],[13,"rootn","","",36,null],[13,"round","","",36,null],[13,"rsqrt","","",36,null],[13,"sin","","",36,null],[13,"sincos","","",36,null],[13,"sinh","","",36,null],[13,"sinpi","","",36,null],[13,"sqrt","","",36,null],[13,"tan","","",36,null],[13,"tanh","","",36,null],[13,"tanpi","","",36,null],[13,"tgamma","","",36,null],[13,"trunc","","",36,null],[13,"half_cos","","",36,null],[13,"half_divide","","",36,null],[13,"half_exp","","",36,null],[13,"half_exp2","","",36,null],[13,"half_exp10","","",36,null],[13,"half_log","","",36,null],[13,"half_log2","","",36,null],[13,"half_log10","","",36,null],[13,"half_powr","","",36,null],[13,"half_recip","","",36,null],[13,"half_rsqrt","","",36,null],[13,"half_sin","","",36,null],[13,"half_sqrt","","",36,null],[13,"half_tan","","",36,null],[13,"native_cos","","",36,null],[13,"native_divide","","",36,null],[13,"native_exp","","",36,null],[13,"native_exp2","","",36,null],[13,"native_exp10","","",36,null],[13,"native_log","","",36,null],[13,"native_log2","","",36,null],[13,"native_log10","","",36,null],[13,"native_powr","","",36,null],[13,"native_recip","","",36,null],[13,"native_rsqrt","","",36,null],[13,"native_sin","","",36,null],[13,"native_sqrt","","",36,null],[13,"native_tan","","",36,null],[13,"s_abs","","",36,null],[13,"s_abs_diff","","",36,null],[13,"s_add_sat","","",36,null],[13,"u_add_sat","","",36,null],[13,"s_hadd","","",36,null],[13,"u_hadd","","",36,null],[13,"s_rhadd","","",36,null],[13,"u_rhadd","","",36,null],[13,"s_clamp","","",36,null],[13,"u_clamp","","",36,null],[13,"clz","","",36,null],[13,"ctz","","",36,null],[13,"s_mad_hi","","",36,null],[13,"u_mad_sat","","",36,null],[13,"s_mad_sat","","",36,null],[13,"s_max","","",36,null],[13,"u_max","","",36,null],[13,"s_min","","",36,null],[13,"u_min","","",36,null],[13,"s_mul_hi","","",36,null],[13,"rotate","","",36,null],[13,"s_sub_sat","","",36,null],[13,"u_sub_sat","","",36,null],[13,"u_upsample","","",36,null],[13,"s_upsample","","",36,null],[13,"popcount","","",36,null],[13,"s_mad24","","",36,null],[13,"u_mad24","","",36,null],[13,"s_mul24","","",36,null],[13,"u_mul24","","",36,null],[13,"u_abs","","",36,null],[13,"u_abs_diff","","",36,null],[13,"u_mul_hi","","",36,null],[13,"u_mad_hi","","",36,null],[13,"fclamp","","",36,null],[13,"degrees","","",36,null],[13,"fmax_common","","",36,null],[13,"fmin_common","","",36,null],[13,"mix","","",36,null],[13,"radians","","",36,null],[13,"step","","",36,null],[13,"smoothstep","","",36,null],[13,"sign","","",36,null],[13,"cross","","",36,null],[13,"distance","","",36,null],[13,"length","","",36,null],[13,"normalize","","",36,null],[13,"fast_distance","","",36,null],[13,"fast_length","","",36,null],[13,"fast_normalize","","",36,null],[13,"bitselect","","",36,null],[13,"select","","",36,null],[13,"vloadn","","",36,null],[13,"vstoren","","",36,null],[13,"vload_half","","",36,null],[13,"vload_halfn","","",36,null],[13,"vstore_half","","",36,null],[13,"vstore_half_r","","",36,null],[13,"vstore_halfn","","",36,null],[13,"vstore_halfn_r","","",36,null],[13,"vloada_halfn","","",36,null],[13,"vstorea_halfn","","",36,null],[13,"vstorea_halfn_r","","",36,null],[13,"shuffle","","",36,null],[13,"shuffle2","","",36,null],[13,"printf","","",36,null],[13,"prefetch","","",36,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"extend","","",2,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"extend","","",6,[[["intoiterator",8]]]],[11,"extend","","",7,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["imageoperands",3]]],[11,"clone","","",1,[[],["fpfastmathmode",3]]],[11,"clone","","",2,[[],["selectioncontrol",3]]],[11,"clone","","",3,[[],["loopcontrol",3]]],[11,"clone","","",4,[[],["functioncontrol",3]]],[11,"clone","","",5,[[],["memorysemantics",3]]],[11,"clone","","",6,[[],["memoryaccess",3]]],[11,"clone","","",7,[[],["kernelprofilinginfo",3]]],[11,"clone","","",8,[[],["rayflags",3]]],[11,"clone","","",9,[[],["sourcelanguage",4]]],[11,"clone","","",10,[[],["executionmodel",4]]],[11,"clone","","",11,[[],["addressingmodel",4]]],[11,"clone","","",12,[[],["memorymodel",4]]],[11,"clone","","",13,[[],["executionmode",4]]],[11,"clone","","",14,[[],["storageclass",4]]],[11,"clone","","",15,[[],["dim",4]]],[11,"clone","","",16,[[],["sampleraddressingmode",4]]],[11,"clone","","",17,[[],["samplerfiltermode",4]]],[11,"clone","","",18,[[],["imageformat",4]]],[11,"clone","","",19,[[],["imagechannelorder",4]]],[11,"clone","","",20,[[],["imagechanneldatatype",4]]],[11,"clone","","",21,[[],["fproundingmode",4]]],[11,"clone","","",22,[[],["linkagetype",4]]],[11,"clone","","",23,[[],["accessqualifier",4]]],[11,"clone","","",24,[[],["functionparameterattribute",4]]],[11,"clone","","",25,[[],["decoration",4]]],[11,"clone","","",26,[[],["builtin",4]]],[11,"clone","","",27,[[],["scope",4]]],[11,"clone","","",28,[[],["groupoperation",4]]],[11,"clone","","",29,[[],["kernelenqueueflags",4]]],[11,"clone","","",30,[[],["capability",4]]],[11,"clone","","",31,[[],["rayqueryintersection",4]]],[11,"clone","","",32,[[],["rayquerycommittedintersectiontype",4]]],[11,"clone","","",33,[[],["rayquerycandidateintersectiontype",4]]],[11,"clone","","",34,[[],["op",4]]],[11,"clone","","",35,[[],["glop",4]]],[11,"clone","","",36,[[],["clop",4]]],[11,"cmp","","",0,[[["imageoperands",3]],["ordering",4]]],[11,"cmp","","",1,[[["fpfastmathmode",3]],["ordering",4]]],[11,"cmp","","",2,[[["selectioncontrol",3]],["ordering",4]]],[11,"cmp","","",3,[[["loopcontrol",3]],["ordering",4]]],[11,"cmp","","",4,[[["functioncontrol",3]],["ordering",4]]],[11,"cmp","","",5,[[["memorysemantics",3]],["ordering",4]]],[11,"cmp","","",6,[[["memoryaccess",3]],["ordering",4]]],[11,"cmp","","",7,[[["kernelprofilinginfo",3]],["ordering",4]]],[11,"cmp","","",8,[[["rayflags",3]],["ordering",4]]],[11,"cmp","","",9,[[["sourcelanguage",4]],["ordering",4]]],[11,"cmp","","",10,[[["executionmodel",4]],["ordering",4]]],[11,"cmp","","",11,[[["addressingmodel",4]],["ordering",4]]],[11,"cmp","","",12,[[["memorymodel",4]],["ordering",4]]],[11,"cmp","","",13,[[["executionmode",4]],["ordering",4]]],[11,"cmp","","",14,[[["storageclass",4]],["ordering",4]]],[11,"cmp","","",15,[[["dim",4]],["ordering",4]]],[11,"cmp","","",16,[[["sampleraddressingmode",4]],["ordering",4]]],[11,"cmp","","",17,[[["samplerfiltermode",4]],["ordering",4]]],[11,"cmp","","",18,[[["imageformat",4]],["ordering",4]]],[11,"cmp","","",19,[[["imagechannelorder",4]],["ordering",4]]],[11,"cmp","","",20,[[["imagechanneldatatype",4]],["ordering",4]]],[11,"cmp","","",21,[[["fproundingmode",4]],["ordering",4]]],[11,"cmp","","",22,[[["linkagetype",4]],["ordering",4]]],[11,"cmp","","",23,[[["accessqualifier",4]],["ordering",4]]],[11,"cmp","","",24,[[["functionparameterattribute",4]],["ordering",4]]],[11,"cmp","","",25,[[["decoration",4]],["ordering",4]]],[11,"cmp","","",26,[[["builtin",4]],["ordering",4]]],[11,"cmp","","",27,[[["scope",4]],["ordering",4]]],[11,"cmp","","",28,[[["groupoperation",4]],["ordering",4]]],[11,"cmp","","",29,[[["kernelenqueueflags",4]],["ordering",4]]],[11,"cmp","","",30,[[["capability",4]],["ordering",4]]],[11,"cmp","","",31,[[["rayqueryintersection",4]],["ordering",4]]],[11,"cmp","","",32,[[["rayquerycommittedintersectiontype",4]],["ordering",4]]],[11,"cmp","","",33,[[["rayquerycandidateintersectiontype",4]],["ordering",4]]],[11,"cmp","","",34,[[["op",4]],["ordering",4]]],[11,"cmp","","",35,[[["glop",4]],["ordering",4]]],[11,"cmp","","",36,[[["clop",4]],["ordering",4]]],[11,"eq","","",0,[[["imageoperands",3]]]],[11,"ne","","",0,[[["imageoperands",3]]]],[11,"eq","","",1,[[["fpfastmathmode",3]]]],[11,"ne","","",1,[[["fpfastmathmode",3]]]],[11,"eq","","",2,[[["selectioncontrol",3]]]],[11,"ne","","",2,[[["selectioncontrol",3]]]],[11,"eq","","",3,[[["loopcontrol",3]]]],[11,"ne","","",3,[[["loopcontrol",3]]]],[11,"eq","","",4,[[["functioncontrol",3]]]],[11,"ne","","",4,[[["functioncontrol",3]]]],[11,"eq","","",5,[[["memorysemantics",3]]]],[11,"ne","","",5,[[["memorysemantics",3]]]],[11,"eq","","",6,[[["memoryaccess",3]]]],[11,"ne","","",6,[[["memoryaccess",3]]]],[11,"eq","","",7,[[["kernelprofilinginfo",3]]]],[11,"ne","","",7,[[["kernelprofilinginfo",3]]]],[11,"eq","","",8,[[["rayflags",3]]]],[11,"ne","","",8,[[["rayflags",3]]]],[11,"eq","","",9,[[["sourcelanguage",4]]]],[11,"eq","","",10,[[["executionmodel",4]]]],[11,"eq","","",11,[[["addressingmodel",4]]]],[11,"eq","","",12,[[["memorymodel",4]]]],[11,"eq","","",13,[[["executionmode",4]]]],[11,"eq","","",14,[[["storageclass",4]]]],[11,"eq","","",15,[[["dim",4]]]],[11,"eq","","",16,[[["sampleraddressingmode",4]]]],[11,"eq","","",17,[[["samplerfiltermode",4]]]],[11,"eq","","",18,[[["imageformat",4]]]],[11,"eq","","",19,[[["imagechannelorder",4]]]],[11,"eq","","",20,[[["imagechanneldatatype",4]]]],[11,"eq","","",21,[[["fproundingmode",4]]]],[11,"eq","","",22,[[["linkagetype",4]]]],[11,"eq","","",23,[[["accessqualifier",4]]]],[11,"eq","","",24,[[["functionparameterattribute",4]]]],[11,"eq","","",25,[[["decoration",4]]]],[11,"eq","","",26,[[["builtin",4]]]],[11,"eq","","",27,[[["scope",4]]]],[11,"eq","","",28,[[["groupoperation",4]]]],[11,"eq","","",29,[[["kernelenqueueflags",4]]]],[11,"eq","","",30,[[["capability",4]]]],[11,"eq","","",31,[[["rayqueryintersection",4]]]],[11,"eq","","",32,[[["rayquerycommittedintersectiontype",4]]]],[11,"eq","","",33,[[["rayquerycandidateintersectiontype",4]]]],[11,"eq","","",34,[[["op",4]]]],[11,"eq","","",35,[[["glop",4]]]],[11,"eq","","",36,[[["clop",4]]]],[11,"partial_cmp","","",0,[[["imageoperands",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["imageoperands",3]]]],[11,"le","","",0,[[["imageoperands",3]]]],[11,"gt","","",0,[[["imageoperands",3]]]],[11,"ge","","",0,[[["imageoperands",3]]]],[11,"partial_cmp","","",1,[[["fpfastmathmode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["fpfastmathmode",3]]]],[11,"le","","",1,[[["fpfastmathmode",3]]]],[11,"gt","","",1,[[["fpfastmathmode",3]]]],[11,"ge","","",1,[[["fpfastmathmode",3]]]],[11,"partial_cmp","","",2,[[["selectioncontrol",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["selectioncontrol",3]]]],[11,"le","","",2,[[["selectioncontrol",3]]]],[11,"gt","","",2,[[["selectioncontrol",3]]]],[11,"ge","","",2,[[["selectioncontrol",3]]]],[11,"partial_cmp","","",3,[[["loopcontrol",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["loopcontrol",3]]]],[11,"le","","",3,[[["loopcontrol",3]]]],[11,"gt","","",3,[[["loopcontrol",3]]]],[11,"ge","","",3,[[["loopcontrol",3]]]],[11,"partial_cmp","","",4,[[["functioncontrol",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["functioncontrol",3]]]],[11,"le","","",4,[[["functioncontrol",3]]]],[11,"gt","","",4,[[["functioncontrol",3]]]],[11,"ge","","",4,[[["functioncontrol",3]]]],[11,"partial_cmp","","",5,[[["memorysemantics",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["memorysemantics",3]]]],[11,"le","","",5,[[["memorysemantics",3]]]],[11,"gt","","",5,[[["memorysemantics",3]]]],[11,"ge","","",5,[[["memorysemantics",3]]]],[11,"partial_cmp","","",6,[[["memoryaccess",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["memoryaccess",3]]]],[11,"le","","",6,[[["memoryaccess",3]]]],[11,"gt","","",6,[[["memoryaccess",3]]]],[11,"ge","","",6,[[["memoryaccess",3]]]],[11,"partial_cmp","","",7,[[["kernelprofilinginfo",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["kernelprofilinginfo",3]]]],[11,"le","","",7,[[["kernelprofilinginfo",3]]]],[11,"gt","","",7,[[["kernelprofilinginfo",3]]]],[11,"ge","","",7,[[["kernelprofilinginfo",3]]]],[11,"partial_cmp","","",8,[[["rayflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["rayflags",3]]]],[11,"le","","",8,[[["rayflags",3]]]],[11,"gt","","",8,[[["rayflags",3]]]],[11,"ge","","",8,[[["rayflags",3]]]],[11,"partial_cmp","","",9,[[["sourcelanguage",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["executionmodel",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",11,[[["addressingmodel",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",12,[[["memorymodel",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",13,[[["executionmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",14,[[["storageclass",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",15,[[["dim",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",16,[[["sampleraddressingmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",17,[[["samplerfiltermode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[["imageformat",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",19,[[["imagechannelorder",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",20,[[["imagechanneldatatype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",21,[[["fproundingmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",22,[[["linkagetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",23,[[["accessqualifier",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",24,[[["functionparameterattribute",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",25,[[["decoration",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[["builtin",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",27,[[["scope",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",28,[[["groupoperation",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",29,[[["kernelenqueueflags",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",30,[[["capability",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[["rayqueryintersection",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",32,[[["rayquerycommittedintersectiontype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",33,[[["rayquerycandidateintersectiontype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",34,[[["op",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",35,[[["glop",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",36,[[["clop",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",0,[[["imageoperands",3]],["imageoperands",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",1,[[["fpfastmathmode",3]],["fpfastmathmode",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",2,[[["selectioncontrol",3]],["selectioncontrol",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",3,[[["loopcontrol",3]],["loopcontrol",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",4,[[["functioncontrol",3]],["functioncontrol",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",5,[[["memorysemantics",3]],["memorysemantics",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",6,[[["memoryaccess",3]],["memoryaccess",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["kernelprofilinginfo",3]],["kernelprofilinginfo",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["rayflags",3]],["rayflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",0,[[["imageoperands",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",1,[[["fpfastmathmode",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",2,[[["selectioncontrol",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[["loopcontrol",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",4,[[["functioncontrol",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["memorysemantics",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",6,[[["memoryaccess",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["kernelprofilinginfo",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["rayflags",3]]]],[11,"not","","Returns the complement of this set of flags.",0,[[],["imageoperands",3]]],[11,"not","","Returns the complement of this set of flags.",1,[[],["fpfastmathmode",3]]],[11,"not","","Returns the complement of this set of flags.",2,[[],["selectioncontrol",3]]],[11,"not","","Returns the complement of this set of flags.",3,[[],["loopcontrol",3]]],[11,"not","","Returns the complement of this set of flags.",4,[[],["functioncontrol",3]]],[11,"not","","Returns the complement of this set of flags.",5,[[],["memorysemantics",3]]],[11,"not","","Returns the complement of this set of flags.",6,[[],["memoryaccess",3]]],[11,"not","","Returns the complement of this set of flags.",7,[[],["kernelprofilinginfo",3]]],[11,"not","","Returns the complement of this set of flags.",8,[[],["rayflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",0,[[["imageoperands",3]],["imageoperands",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",1,[[["fpfastmathmode",3]],["fpfastmathmode",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",2,[[["selectioncontrol",3]],["selectioncontrol",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",3,[[["loopcontrol",3]],["loopcontrol",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["functioncontrol",3]],["functioncontrol",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["memorysemantics",3]],["memorysemantics",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",6,[[["memoryaccess",3]],["memoryaccess",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["kernelprofilinginfo",3]],["kernelprofilinginfo",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["rayflags",3]],["rayflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",0,[[["imageoperands",3]],["imageoperands",3]]],[11,"bitor","","Returns the union of the two sets of flags.",1,[[["fpfastmathmode",3]],["fpfastmathmode",3]]],[11,"bitor","","Returns the union of the two sets of flags.",2,[[["selectioncontrol",3]],["selectioncontrol",3]]],[11,"bitor","","Returns the union of the two sets of flags.",3,[[["loopcontrol",3]],["loopcontrol",3]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["functioncontrol",3]],["functioncontrol",3]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["memorysemantics",3]],["memorysemantics",3]]],[11,"bitor","","Returns the union of the two sets of flags.",6,[[["memoryaccess",3]],["memoryaccess",3]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["kernelprofilinginfo",3]],["kernelprofilinginfo",3]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["rayflags",3]],["rayflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",0,[[["imageoperands",3]],["imageoperands",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",1,[[["fpfastmathmode",3]],["fpfastmathmode",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",2,[[["selectioncontrol",3]],["selectioncontrol",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",3,[[["loopcontrol",3]],["loopcontrol",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",4,[[["functioncontrol",3]],["functioncontrol",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",5,[[["memorysemantics",3]],["memorysemantics",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",6,[[["memoryaccess",3]],["memoryaccess",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",7,[[["kernelprofilinginfo",3]],["kernelprofilinginfo",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",8,[[["rayflags",3]],["rayflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",0,[[["imageoperands",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",1,[[["fpfastmathmode",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",2,[[["selectioncontrol",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[["loopcontrol",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",4,[[["functioncontrol",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["memorysemantics",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",6,[[["memoryaccess",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["kernelprofilinginfo",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["rayflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",0,[[["imageoperands",3]]]],[11,"bitor_assign","","Adds the set of flags.",1,[[["fpfastmathmode",3]]]],[11,"bitor_assign","","Adds the set of flags.",2,[[["selectioncontrol",3]]]],[11,"bitor_assign","","Adds the set of flags.",3,[[["loopcontrol",3]]]],[11,"bitor_assign","","Adds the set of flags.",4,[[["functioncontrol",3]]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["memorysemantics",3]]]],[11,"bitor_assign","","Adds the set of flags.",6,[[["memoryaccess",3]]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["kernelprofilinginfo",3]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["rayflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",0,[[["imageoperands",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",1,[[["fpfastmathmode",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",2,[[["selectioncontrol",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[["loopcontrol",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",4,[[["functioncontrol",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["memorysemantics",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",6,[[["memoryaccess",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["kernelprofilinginfo",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["rayflags",3]]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"from_str","","",9,[[],["result",4]]],[11,"from_str","","",10,[[],["result",4]]],[11,"from_str","","",11,[[],["result",4]]],[11,"from_str","","",12,[[],["result",4]]],[11,"from_str","","",13,[[],["result",4]]],[11,"from_str","","",14,[[],["result",4]]],[11,"from_str","","",15,[[],["result",4]]],[11,"from_str","","",16,[[],["result",4]]],[11,"from_str","","",17,[[],["result",4]]],[11,"from_str","","",18,[[],["result",4]]],[11,"from_str","","",19,[[],["result",4]]],[11,"from_str","","",20,[[],["result",4]]],[11,"from_str","","",21,[[],["result",4]]],[11,"from_str","","",22,[[],["result",4]]],[11,"from_str","","",23,[[],["result",4]]],[11,"from_str","","",24,[[],["result",4]]],[11,"from_str","","",25,[[],["result",4]]],[11,"from_str","","",26,[[],["result",4]]],[11,"from_str","","",27,[[],["result",4]]],[11,"from_str","","",28,[[],["result",4]]],[11,"from_str","","",29,[[],["result",4]]],[11,"from_str","","",30,[[],["result",4]]],[11,"from_str","","",31,[[],["result",4]]],[11,"from_str","","",32,[[],["result",4]]],[11,"from_str","","",33,[[],["result",4]]],[11,"from_iter","","",0,[[["intoiterator",8]],["imageoperands",3]]],[11,"from_iter","","",1,[[["intoiterator",8]],["fpfastmathmode",3]]],[11,"from_iter","","",2,[[["intoiterator",8]],["selectioncontrol",3]]],[11,"from_iter","","",3,[[["intoiterator",8]],["loopcontrol",3]]],[11,"from_iter","","",4,[[["intoiterator",8]],["functioncontrol",3]]],[11,"from_iter","","",5,[[["intoiterator",8]],["memorysemantics",3]]],[11,"from_iter","","",6,[[["intoiterator",8]],["memoryaccess",3]]],[11,"from_iter","","",7,[[["intoiterator",8]],["kernelprofilinginfo",3]]],[11,"from_iter","","",8,[[["intoiterator",8]],["rayflags",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"from_i64","","",9,[[],["option",4]]],[11,"from_u64","","",9,[[],["option",4]]],[11,"from_i64","","",10,[[],["option",4]]],[11,"from_u64","","",10,[[],["option",4]]],[11,"from_i64","","",11,[[],["option",4]]],[11,"from_u64","","",11,[[],["option",4]]],[11,"from_i64","","",12,[[],["option",4]]],[11,"from_u64","","",12,[[],["option",4]]],[11,"from_i64","","",13,[[],["option",4]]],[11,"from_u64","","",13,[[],["option",4]]],[11,"from_i64","","",14,[[],["option",4]]],[11,"from_u64","","",14,[[],["option",4]]],[11,"from_i64","","",15,[[],["option",4]]],[11,"from_u64","","",15,[[],["option",4]]],[11,"from_i64","","",16,[[],["option",4]]],[11,"from_u64","","",16,[[],["option",4]]],[11,"from_i64","","",17,[[],["option",4]]],[11,"from_u64","","",17,[[],["option",4]]],[11,"from_i64","","",18,[[],["option",4]]],[11,"from_u64","","",18,[[],["option",4]]],[11,"from_i64","","",19,[[],["option",4]]],[11,"from_u64","","",19,[[],["option",4]]],[11,"from_i64","","",20,[[],["option",4]]],[11,"from_u64","","",20,[[],["option",4]]],[11,"from_i64","","",21,[[],["option",4]]],[11,"from_u64","","",21,[[],["option",4]]],[11,"from_i64","","",22,[[],["option",4]]],[11,"from_u64","","",22,[[],["option",4]]],[11,"from_i64","","",23,[[],["option",4]]],[11,"from_u64","","",23,[[],["option",4]]],[11,"from_i64","","",24,[[],["option",4]]],[11,"from_u64","","",24,[[],["option",4]]],[11,"from_i64","","",25,[[],["option",4]]],[11,"from_u64","","",25,[[],["option",4]]],[11,"from_i64","","",26,[[],["option",4]]],[11,"from_u64","","",26,[[],["option",4]]],[11,"from_i64","","",27,[[],["option",4]]],[11,"from_u64","","",27,[[],["option",4]]],[11,"from_i64","","",28,[[],["option",4]]],[11,"from_u64","","",28,[[],["option",4]]],[11,"from_i64","","",29,[[],["option",4]]],[11,"from_u64","","",29,[[],["option",4]]],[11,"from_i64","","",30,[[],["option",4]]],[11,"from_u64","","",30,[[],["option",4]]],[11,"from_i64","","",31,[[],["option",4]]],[11,"from_u64","","",31,[[],["option",4]]],[11,"from_i64","","",32,[[],["option",4]]],[11,"from_u64","","",32,[[],["option",4]]],[11,"from_i64","","",33,[[],["option",4]]],[11,"from_u64","","",33,[[],["option",4]]],[11,"from_i64","","",34,[[],["option",4]]],[11,"from_u64","","",34,[[],["option",4]]],[11,"from_i64","","",35,[[],["option",4]]],[11,"from_u64","","",35,[[],["option",4]]],[11,"from_i64","","",36,[[],["option",4]]],[11,"from_u64","","",36,[[],["option",4]]]],"p":[[3,"ImageOperands"],[3,"FPFastMathMode"],[3,"SelectionControl"],[3,"LoopControl"],[3,"FunctionControl"],[3,"MemorySemantics"],[3,"MemoryAccess"],[3,"KernelProfilingInfo"],[3,"RayFlags"],[4,"SourceLanguage"],[4,"ExecutionModel"],[4,"AddressingModel"],[4,"MemoryModel"],[4,"ExecutionMode"],[4,"StorageClass"],[4,"Dim"],[4,"SamplerAddressingMode"],[4,"SamplerFilterMode"],[4,"ImageFormat"],[4,"ImageChannelOrder"],[4,"ImageChannelDataType"],[4,"FPRoundingMode"],[4,"LinkageType"],[4,"AccessQualifier"],[4,"FunctionParameterAttribute"],[4,"Decoration"],[4,"BuiltIn"],[4,"Scope"],[4,"GroupOperation"],[4,"KernelEnqueueFlags"],[4,"Capability"],[4,"RayQueryIntersection"],[4,"RayQueryCommittedIntersectionType"],[4,"RayQueryCandidateIntersectionType"],[4,"Op"],[4,"GLOp"],[4,"CLOp"]]},\
"spirv_std":{"doc":"","i":[[0,"storage_class","spirv_std","Storage ClassesClass of storage for declared variables. …",null,null],[3,"UniformConstant","spirv_std::storage_class","",null,null],[11,"load","","Load the value into memory.",0,[[]]],[3,"Input","","",null,null],[11,"load","","Load the value into memory.",1,[[]]],[3,"Uniform","","",null,null],[11,"load","","Load the value into memory.",2,[[]]],[3,"Output","","",null,null],[11,"load","","Load the value into memory.",3,[[]]],[3,"Workgroup","","",null,null],[11,"load","","Load the value into memory.",4,[[]]],[3,"CrossWorkgroup","","",null,null],[11,"load","","Load the value into memory.",5,[[]]],[3,"Private","","",null,null],[11,"load","","Load the value into memory.",6,[[]]],[3,"Function","","",null,null],[11,"load","","Load the value into memory.",7,[[]]],[3,"Generic","","",null,null],[11,"load","","Load the value into memory.",8,[[]]],[3,"PushConstant","","",null,null],[11,"load","","Load the value into memory.",9,[[]]],[3,"AtomicCounter","","",null,null],[11,"load","","Load the value into memory.",10,[[]]],[3,"Image","","",null,null],[11,"load","","Load the value into memory.",11,[[]]],[3,"StorageBuffer","","",null,null],[11,"load","","Load the value into memory.",12,[[]]],[3,"CallableDataKHR","","",null,null],[11,"load","","Load the value into memory.",13,[[]]],[3,"IncomingCallableDataKHR","","",null,null],[11,"load","","Load the value into memory.",14,[[]]],[3,"RayPayloadKHR","","",null,null],[11,"load","","Load the value into memory.",15,[[]]],[3,"HitAttributeKHR","","",null,null],[11,"load","","Load the value into memory.",16,[[]]],[3,"IncomingRayPayloadKHR","","",null,null],[11,"load","","Load the value into memory.",17,[[]]],[3,"ShaderRecordBufferKHR","","",null,null],[11,"load","","Load the value into memory.",18,[[]]],[3,"PhysicalStorageBuffer","","",null,null],[11,"load","","Load the value into memory.",19,[[]]],[11,"store","","Store the value in storage.",19,[[]]],[11,"then","","A convenience function to load a value into memory and …",19,[[]]],[11,"store","","Store the value in storage.",18,[[]]],[11,"then","","A convenience function to load a value into memory and …",18,[[]]],[11,"store","","Store the value in storage.",17,[[]]],[11,"then","","A convenience function to load a value into memory and …",17,[[]]],[11,"store","","Store the value in storage.",16,[[]]],[11,"then","","A convenience function to load a value into memory and …",16,[[]]],[11,"store","","Store the value in storage.",15,[[]]],[11,"then","","A convenience function to load a value into memory and …",15,[[]]],[11,"store","","Store the value in storage.",14,[[]]],[11,"then","","A convenience function to load a value into memory and …",14,[[]]],[11,"store","","Store the value in storage.",13,[[]]],[11,"then","","A convenience function to load a value into memory and …",13,[[]]],[11,"store","","Store the value in storage.",12,[[]]],[11,"then","","A convenience function to load a value into memory and …",12,[[]]],[11,"store","","Store the value in storage.",11,[[]]],[11,"then","","A convenience function to load a value into memory and …",11,[[]]],[11,"store","","Store the value in storage.",10,[[]]],[11,"then","","A convenience function to load a value into memory and …",10,[[]]],[11,"store","","Store the value in storage.",8,[[]]],[11,"then","","A convenience function to load a value into memory and …",8,[[]]],[11,"store","","Store the value in storage.",7,[[]]],[11,"then","","A convenience function to load a value into memory and …",7,[[]]],[11,"store","","Store the value in storage.",6,[[]]],[11,"then","","A convenience function to load a value into memory and …",6,[[]]],[11,"store","","Store the value in storage.",5,[[]]],[11,"then","","A convenience function to load a value into memory and …",5,[[]]],[11,"store","","Store the value in storage.",4,[[]]],[11,"then","","A convenience function to load a value into memory and …",4,[[]]],[11,"store","","Store the value in storage.",3,[[]]],[11,"then","","A convenience function to load a value into memory and …",3,[[]]],[11,"store","","Store the value in storage.",2,[[]]],[11,"then","","A convenience function to load a value into memory and …",2,[[]]],[3,"Sampler","spirv_std","",null,null],[3,"Image2d","","",null,null],[3,"Image2dArray","","",null,null],[3,"SampledImage","","",null,null],[8,"Derivative","","",null,null],[10,"ddx","","",20,[[]]],[10,"ddx_fine","","",20,[[]]],[10,"ddx_coarse","","",20,[[]]],[10,"ddy","","",20,[[]]],[10,"ddy_fine","","",20,[[]]],[10,"ddy_coarse","","",20,[[]]],[10,"fwidth","","",20,[[]]],[10,"fwidth_fine","","",20,[[]]],[10,"fwidth_coarse","","",20,[[]]],[5,"memcmp","","libcore requires a few external symbols to be defined: …",null,[[]]],[11,"from","spirv_std::storage_class","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","spirv_std","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"clone","","",21,[[],["sampler",3]]],[11,"clone","","",22,[[],["image2d",3]]],[11,"clone","","",23,[[],["image2darray",3]]],[11,"clone","","",24,[[],["sampledimage",3]]],[11,"sample","","",22,[[["sampler",3],["vec2",3]],["vec4",3]]],[11,"sample","","",23,[[["vec3a",3],["sampler",3]],["vec4",3]]],[11,"sample","","",24,[[["vec2",3]],["vec4",3]]]],"p":[[3,"UniformConstant"],[3,"Input"],[3,"Uniform"],[3,"Output"],[3,"Workgroup"],[3,"CrossWorkgroup"],[3,"Private"],[3,"Function"],[3,"Generic"],[3,"PushConstant"],[3,"AtomicCounter"],[3,"Image"],[3,"StorageBuffer"],[3,"CallableDataKHR"],[3,"IncomingCallableDataKHR"],[3,"RayPayloadKHR"],[3,"HitAttributeKHR"],[3,"IncomingRayPayloadKHR"],[3,"ShaderRecordBufferKHR"],[3,"PhysicalStorageBuffer"],[8,"Derivative"],[3,"Sampler"],[3,"Image2d"],[3,"Image2dArray"],[3,"SampledImage"]]},\
"spirv_tools":{"doc":"","i":[[4,"SpirvResult","spirv_tools","",null,null],[13,"Success","","",0,null],[13,"Unsupported","","",0,null],[13,"EndOfStream","","",0,null],[13,"Warning","","",0,null],[13,"FailedMatch","","",0,null],[13,"RequestedTermination","","Success, but signals early termination.",0,null],[13,"InternalError","","",0,null],[13,"OutOfMemory","","",0,null],[13,"InvalidPointer","","",0,null],[13,"InvalidBinary","","",0,null],[13,"InvalidText","","",0,null],[13,"InvalidTable","","",0,null],[13,"InvalidValue","","",0,null],[13,"InvalidDiagnostic","","",0,null],[13,"InvalidLookup","","",0,null],[13,"InvalidId","","",0,null],[13,"InvalidCfg","","",0,null],[13,"InvalidLayout","","",0,null],[13,"InvalidCapability","","",0,null],[13,"InvalidData","","Indicates data rules validation failure.",0,null],[13,"MissingExtension","","",0,null],[13,"WrongVersion","","Indicates wrong SPIR-V version",0,null],[4,"TargetEnv","","Certain target environments impose additional …",null,null],[13,"Universal_1_0","","SPIR-V 1.0 latest revision, no other restrictions.",1,null],[13,"Vulkan_1_0","","Vulkan 1.0 latest revision.",1,null],[13,"Universal_1_1","","SPIR-V 1.1 latest revision, no other restrictions.",1,null],[13,"OpenCL_2_1","","OpenCL Full Profile 2.1 latest revision.",1,null],[13,"OpenCL_2_2","","OpenCL Full Profile 2.2 latest revision.",1,null],[13,"OpenGL_4_0","","OpenGL 4.0 plus GL_ARB_gl_spirv, latest revisions.",1,null],[13,"OpenGL_4_1","","OpenGL 4.1 plus GL_ARB_gl_spirv, latest revisions.",1,null],[13,"OpenGL_4_2","","OpenGL 4.2 plus GL_ARB_gl_spirv, latest revisions.",1,null],[13,"OpenGL_4_3","","OpenGL 4.3 plus GL_ARB_gl_spirv, latest revisions.",1,null],[13,"OpenGL_4_5","","OpenGL 4.5 plus GL_ARB_gl_spirv, latest revisions.",1,null],[13,"Universal_1_2","","SPIR-V 1.2, latest revision, no other restrictions.",1,null],[13,"OpenCL_1_2","","OpenCL Full Profile 1.2 plus cl_khr_il_program, latest …",1,null],[13,"OpenCLEmbedded_1_2","","OpenCL Embedded Profile 1.2 plus cl_khr_il_program, …",1,null],[13,"OpenCL_2_0","","OpenCL Full Profile 2.0 plus cl_khr_il_program, latest …",1,null],[13,"OpenCLEmbedded_2_0","","OpenCL Embedded Profile 2.0 plus cl_khr_il_program, …",1,null],[13,"OpenCLEmbedded_2_1","","OpenCL Embedded Profile 2.1 latest revision.",1,null],[13,"OpenCLEmbedded_2_2","","OpenCL Embedded Profile 2.2 latest revision.",1,null],[13,"Universal_1_3","","SPIR-V 1.3 latest revision, no other restrictions.",1,null],[13,"Vulkan_1_1","","Vulkan 1.1 latest revision.",1,null],[13,"WebGPU_0","","Work in progress WebGPU 1.0.",1,null],[13,"Universal_1_4","","SPIR-V 1.4 latest revision, no other restrictions.",1,null],[13,"Vulkan_1_1_Spirv_1_4","","Vulkan 1.1 with VK_KHR_spirv_1_4, i.e. SPIR-V 1.4 binary.",1,null],[13,"Universal_1_5","","SPIR-V 1.5 latest revision, no other restrictions.",1,null],[13,"Vulkan_1_2","","Vulkan 1.2 latest revision.",1,null],[0,"assembler","","",null,null],[0,"tool","spirv_tools::assembler","",null,null],[3,"ToolAssembler","spirv_tools::assembler::tool","",null,null],[3,"AssemblerOptions","spirv_tools::assembler","",null,null],[12,"preserve_numeric_ids","","Numeric IDs in the binary will have the same values as in …",2,null],[8,"Assembler","","",null,null],[10,"with_env","","",3,[[["targetenv",4]]]],[10,"assemble","","",3,[[["assembleroptions",3]],[["binary",4],["result",4],["error",3]]]],[5,"create","","",null,[[["option",4],["targetenv",4]]]],[0,"binary","spirv_tools","",null,null],[4,"Binary","spirv_tools::binary","",null,null],[13,"OwnedU32","","",4,null],[13,"OwnedU8","","",4,null],[0,"opt","spirv_tools","",null,null],[4,"Passes","spirv_tools::opt","",null,null],[13,"Null","","",5,null],[13,"StripAtomicCounterMemory","","",5,null],[13,"StripDebugInfo","","",5,null],[13,"StripReflectInfo","","",5,null],[13,"EliminateDeadFunctions","","",5,null],[13,"EliminateDeadMembers","","",5,null],[13,"FlattenDecoration","","",5,null],[13,"FreezeSpecConstantValue","","",5,null],[13,"FoldSpecConstantOpAndComposite","","",5,null],[13,"UnifyConstant","","",5,null],[13,"EliminateDeadConstant","","",5,null],[13,"StrengthReduction","","",5,null],[13,"BlockMerge","","",5,null],[13,"InlineExhaustive","","",5,null],[13,"InlineOpaque","","",5,null],[13,"LocalSingleBlockLoadStoreElim","","",5,null],[13,"DeadBranchElim","","",5,null],[13,"LocalMultiStoreElim","","",5,null],[13,"LocalAccessChainConvert","","",5,null],[13,"LocalSingleStoreElim","","",5,null],[13,"InsertExtractElim","","",5,null],[13,"DeadInsertElim","","",5,null],[13,"AggressiveDCE","","",5,null],[13,"PropagateLineInfo","","",5,null],[13,"RedundantLineInfoElim","","",5,null],[13,"CompactIds","","",5,null],[13,"RemoveDuplicates","","",5,null],[13,"CFGCleanup","","",5,null],[13,"DeadVariableElimination","","",5,null],[13,"MergeReturn","","",5,null],[13,"LocalRedundancyElimination","","",5,null],[13,"LoopInvariantCodeMotion","","",5,null],[13,"LoopPeeling","","",5,null],[13,"LoopUnswitch","","",5,null],[13,"RedundancyElimination","","",5,null],[13,"PrivateToLocal","","",5,null],[13,"ConditionalConstantPropagation","","",5,null],[13,"Workaround1209","","",5,null],[13,"IfConversion","","",5,null],[13,"ReplaceInvalidOpcode","","",5,null],[13,"Simplification","","",5,null],[13,"SSARewrite","","",5,null],[13,"ConvertRelaxedToHalf","","",5,null],[13,"RelaxFloatOps","","",5,null],[13,"CopyPropagateArrays","","",5,null],[13,"VectorDCE","","",5,null],[13,"ReduceLoadSize","","",5,null],[13,"CombineAccessChains","","",5,null],[13,"UpgradeMemoryModel","","",5,null],[13,"CodeSinking","","",5,null],[13,"GenerateWebGPUInitializers","","",5,null],[13,"FixStorageClass","","",5,null],[13,"LegalizeVectorShuffle","","",5,null],[13,"DecomposeInitializedVariables","","",5,null],[13,"SplitInvalidUnreachable","","",5,null],[13,"GraphicsRobustAccess","","",5,null],[13,"DescriptorScalarReplacement","","",5,null],[13,"WrapOpKill","","",5,null],[13,"AmdExtToKhr","","",5,null],[0,"tool","","",null,null],[3,"ToolOptimizer","spirv_tools::opt::tool","",null,null],[3,"Options","spirv_tools::opt","Options for specifying the behavior of the optimizer",null,null],[12,"validator_options","","Records the validator options that should be passed to …",6,null],[12,"max_id_bound","","Records the maximum possible value for the id bound.",6,null],[12,"preserve_bindings","","Records whether all bindings within the module should be …",6,null],[12,"preserve_spec_constants","","Records whether all specialization constants within the …",6,null],[8,"Optimizer","","",null,null],[10,"with_env","","",7,[[["targetenv",4]]]],[10,"optimize","","",7,[[["option",4],["options",3]],[["result",4],["binary",4],["error",3]]]],[10,"register_pass","","Register a single pass with the the optimizer.",7,[[["passes",4]]]],[10,"register_performance_passes","","Registers passes that attempt to improve performance of …",7,[[]]],[10,"register_size_passes","","Registers passes that attempt to improve the size of …",7,[[]]],[10,"register_hlsl_legalization_passes","","Registers passes that attempt to legalize the generated …",7,[[]]],[5,"create","","",null,[[["option",4],["targetenv",4]]]],[0,"val","spirv_tools","",null,null],[0,"tool","spirv_tools::val","",null,null],[3,"ToolValidator","spirv_tools::val::tool","",null,null],[3,"ValidatorOptions","spirv_tools::val","",null,null],[12,"relax_struct_store","","Record whether or not the validator should relax the …",8,null],[12,"relax_logical_pointer","","Records whether or not the validator should relax the …",8,null],[12,"before_legalization","","Records whether or not the validator should relax the …",8,null],[12,"relax_block_layout","","Records whether the validator should use \\\"relaxed\\\" block …",8,null],[12,"uniform_buffer_standard_layout","","Records whether the validator should use standard block …",8,null],[12,"scalar_block_layout","","Records whether the validator should use \\\"scalar\\\" block …",8,null],[12,"skip_block_layout","","Records whether or not the validator should skip …",8,null],[12,"max_limits","","Applies a maximum to one or more Universal limits",8,null],[8,"Validator","","",null,null],[10,"with_env","","",9,[[["targetenv",4]]]],[10,"validate","","",9,[[["option",4],["validatoroptions",3]],[["error",3],["result",4]]]],[5,"create","","",null,[[["option",4],["targetenv",4]]]],[0,"error","spirv_tools","",null,null],[4,"MessageLevel","spirv_tools::error","",null,null],[13,"Fatal","","Unrecoverable error due to environment. Will exit the …",10,null],[13,"InternalError","","Unrecoverable error due to SPIRV-Tools internals. Will …",10,null],[13,"Error","","Normal error due to user input.",10,null],[13,"Warning","","Warning information.",10,null],[13,"Info","","General information.",10,null],[13,"Debug","","Debug information.",10,null],[4,"SpirvResult","","",null,null],[13,"Success","","",0,null],[13,"Unsupported","","",0,null],[13,"EndOfStream","","",0,null],[13,"Warning","","",0,null],[13,"FailedMatch","","",0,null],[13,"RequestedTermination","","Success, but signals early termination.",0,null],[13,"InternalError","","",0,null],[13,"OutOfMemory","","",0,null],[13,"InvalidPointer","","",0,null],[13,"InvalidBinary","","",0,null],[13,"InvalidText","","",0,null],[13,"InvalidTable","","",0,null],[13,"InvalidValue","","",0,null],[13,"InvalidDiagnostic","","",0,null],[13,"InvalidLookup","","",0,null],[13,"InvalidId","","",0,null],[13,"InvalidCfg","","",0,null],[13,"InvalidLayout","","",0,null],[13,"InvalidCapability","","",0,null],[13,"InvalidData","","Indicates data rules validation failure.",0,null],[13,"MissingExtension","","",0,null],[13,"WrongVersion","","Indicates wrong SPIR-V version",0,null],[3,"Error","","",null,null],[12,"inner","","",11,null],[12,"diagnostic","","",11,null],[3,"Diagnostic","","",null,null],[12,"line","","",12,null],[12,"column","","",12,null],[12,"index","","",12,null],[12,"message","","",12,null],[12,"is_text","","",12,null],[3,"Message","","",null,null],[12,"level","","",13,null],[12,"source","","",13,null],[12,"line","","",13,null],[12,"column","","",13,null],[12,"index","","",13,null],[12,"message","","",13,null],[8,"MessageCallback","","",null,null],[10,"on_message","","",14,[[["message",3]]]],[0,"util","spirv_tools","",null,null],[5,"from_binary","spirv_tools::util","",null,[[]]],[5,"to_binary","","",null,[[],[["error",3],["result",4]]]],[11,"from","spirv_tools::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","spirv_tools","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","spirv_tools::assembler::tool","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","spirv_tools::assembler","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","spirv_tools::binary","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","spirv_tools::opt","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","spirv_tools::opt::tool","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","spirv_tools::opt","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","spirv_tools::val::tool","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","spirv_tools::val","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","spirv_tools::error","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"fmt","spirv_tools","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","spirv_tools::opt","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","spirv_tools::error","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","spirv_tools","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","spirv_tools::error","",10,[[],["messagelevel",4]]],[11,"clone","spirv_tools::opt","",5,[[],["passes",4]]],[11,"clone","spirv_tools::error","",0,[[],["spirvresult",4]]],[11,"clone","spirv_tools","",1,[[],["targetenv",4]]],[11,"from_str","","",1,[[],[["targetenv",4],["result",4]]]],[11,"eq","","",1,[[["targetenv",4]]]],[11,"eq","spirv_tools::error","",0,[[["spirvresult",4]]]],[11,"eq","","",10,[[["messagelevel",4]]]],[11,"default","spirv_tools","",1,[[],["targetenv",4]]],[11,"with_env","spirv_tools::assembler::tool","",15,[[["targetenv",4]]]],[11,"assemble","","",15,[[["assembleroptions",3]],[["binary",4],["result",4],["error",3]]]],[11,"with_env","spirv_tools::opt::tool","",16,[[["targetenv",4]]]],[11,"optimize","","",16,[[["option",4],["options",3]],[["result",4],["binary",4],["error",3]]]],[11,"register_pass","","Register a single pass with the the optimizer.",16,[[["passes",4]]]],[11,"register_performance_passes","","Registers passes that attempt to improve performance of …",16,[[]]],[11,"register_size_passes","","Registers passes that attempt to improve the size of …",16,[[]]],[11,"register_hlsl_legalization_passes","","Registers passes that attempt to legalize the generated …",16,[[]]],[11,"with_env","spirv_tools::val::tool","",17,[[["targetenv",4]]]],[11,"validate","","",17,[[["option",4],["validatoroptions",3]],[["error",3],["result",4]]]],[11,"as_ref","spirv_tools::binary","",4,[[]]],[11,"as_ref","","",4,[[]]],[11,"from","spirv_tools::error","",12,[[["string",3]]]],[11,"from","","",12,[[["message",3]]]],[11,"into","spirv_tools::assembler","",2,[[]]],[11,"clone","","",2,[[],["assembleroptions",3]]],[11,"clone","spirv_tools::opt","",6,[[],["options",3]]],[11,"clone","spirv_tools::val","",8,[[],["validatoroptions",3]]],[11,"default","spirv_tools::assembler::tool","",15,[[]]],[11,"default","spirv_tools::assembler","",2,[[],["assembleroptions",3]]],[11,"default","spirv_tools::opt::tool","",16,[[],["tooloptimizer",3]]],[11,"default","spirv_tools::opt","",6,[[],["options",3]]],[11,"default","spirv_tools::val::tool","",17,[[],["toolvalidator",3]]],[11,"default","spirv_tools::val","",8,[[],["validatoroptions",3]]],[11,"eq","spirv_tools::error","",11,[[["error",3]]]],[11,"ne","","",11,[[["error",3]]]],[11,"eq","","",12,[[["diagnostic",3]]]],[11,"ne","","",12,[[["diagnostic",3]]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"try_from","spirv_tools::binary","",4,[[["vec",3]],["result",4]]],[11,"source","spirv_tools::error","",11,[[],[["error",8],["option",4]]]]],"p":[[4,"SpirvResult"],[4,"TargetEnv"],[3,"AssemblerOptions"],[8,"Assembler"],[4,"Binary"],[4,"Passes"],[3,"Options"],[8,"Optimizer"],[3,"ValidatorOptions"],[8,"Validator"],[4,"MessageLevel"],[3,"Error"],[3,"Diagnostic"],[3,"Message"],[8,"MessageCallback"],[3,"ToolAssembler"],[3,"ToolOptimizer"],[3,"ToolValidator"]]},\
"spirv_tools_sys":{"doc":"","i":[[0,"assembler","spirv_tools_sys","",null,null],[5,"assemble","spirv_tools_sys::assembler","Encodes the given SPIR-V assembly text to its binary …",null,null],[4,"BinaryOptions","","",null,null],[13,"None","","",0,null],[13,"PreserveNumberIds","","",0,null],[0,"diagnostics","spirv_tools_sys","",null,null],[5,"diagnostic_destroy","spirv_tools_sys::diagnostics","Destroys a diagnostic object.  This is a no-op if …",null,null],[3,"Position","","",null,null],[12,"line","","",1,null],[12,"column","","",1,null],[12,"index","","",1,null],[3,"Diagnostic","","",null,null],[12,"position","","",2,null],[12,"error","","",2,null],[12,"is_text_source","","",2,null],[4,"MessageLevel","","",null,null],[13,"Fatal","","Unrecoverable error due to environment. Will exit the …",3,null],[13,"InternalError","","Unrecoverable error due to SPIRV-Tools internals. Will …",3,null],[13,"Error","","Normal error due to user input.",3,null],[13,"Warning","","Warning information.",3,null],[13,"Info","","General information.",3,null],[13,"Debug","","Debug information.",3,null],[6,"MessageCallback","","",null,null],[0,"opt","spirv_tools_sys","",null,null],[5,"optimizer_create","spirv_tools_sys::opt","",null,null],[5,"optimizer_destroy","","",null,null],[5,"optimizer_run","","",null,null],[5,"optimizer_options_create","","Creates an optimizer options object with default options. …",null,null],[5,"optimizer_options_destroy","","Destroys the given optimizer options object.",null,null],[5,"optimizer_options_run_validator","","Records whether or not the optimizer should run the …",null,null],[5,"optimizer_options_set_validator_options","","Records the validator options that should be passed to …",null,null],[5,"optimizer_options_set_max_id_bound","","Records the maximum possible value for the id bound.",null,null],[5,"optimizer_options_preserve_bindings","","Records whether all bindings within the module should be …",null,null],[5,"optimizer_options_preserve_spec_constants","","Records whether all specialization constants within the …",null,null],[5,"optimizer_register_pass","","",null,null],[5,"optimizer_register_performance_passes","","Registers passes that attempt to improve performance of …",null,null],[5,"optimizer_register_size_passes","","Registers passes that attempt to improve the size of …",null,null],[5,"optimizer_register_vulkan_to_webgpu_passes","","Registers passes that have been prescribed for converting …",null,null],[5,"optimizer_register_webgpu_to_vulkan_passes","","Registers passes that have been prescribed for converting …",null,null],[5,"optimizer_register_hlsl_legalization_passes","","Registers passes that attempt to legalize the generated …",null,null],[3,"Optimizer","","",null,null],[3,"OptimizerOptions","","",null,null],[4,"Passes","","",null,null],[13,"Null","","",4,null],[13,"StripAtomicCounterMemory","","",4,null],[13,"StripDebugInfo","","",4,null],[13,"StripReflectInfo","","",4,null],[13,"EliminateDeadFunctions","","",4,null],[13,"EliminateDeadMembers","","",4,null],[13,"FlattenDecoration","","",4,null],[13,"FreezeSpecConstantValue","","",4,null],[13,"FoldSpecConstantOpAndComposite","","",4,null],[13,"UnifyConstant","","",4,null],[13,"EliminateDeadConstant","","",4,null],[13,"StrengthReduction","","",4,null],[13,"BlockMerge","","",4,null],[13,"InlineExhaustive","","",4,null],[13,"InlineOpaque","","",4,null],[13,"LocalSingleBlockLoadStoreElim","","",4,null],[13,"DeadBranchElim","","",4,null],[13,"LocalMultiStoreElim","","",4,null],[13,"LocalAccessChainConvert","","",4,null],[13,"LocalSingleStoreElim","","",4,null],[13,"InsertExtractElim","","",4,null],[13,"DeadInsertElim","","",4,null],[13,"AggressiveDCE","","",4,null],[13,"PropagateLineInfo","","",4,null],[13,"RedundantLineInfoElim","","",4,null],[13,"CompactIds","","",4,null],[13,"RemoveDuplicates","","",4,null],[13,"CFGCleanup","","",4,null],[13,"DeadVariableElimination","","",4,null],[13,"MergeReturn","","",4,null],[13,"LocalRedundancyElimination","","",4,null],[13,"LoopInvariantCodeMotion","","",4,null],[13,"LoopPeeling","","",4,null],[13,"LoopUnswitch","","",4,null],[13,"RedundancyElimination","","",4,null],[13,"PrivateToLocal","","",4,null],[13,"ConditionalConstantPropagation","","",4,null],[13,"Workaround1209","","",4,null],[13,"IfConversion","","",4,null],[13,"ReplaceInvalidOpcode","","",4,null],[13,"Simplification","","",4,null],[13,"SSARewrite","","",4,null],[13,"ConvertRelaxedToHalf","","",4,null],[13,"RelaxFloatOps","","",4,null],[13,"CopyPropagateArrays","","",4,null],[13,"VectorDCE","","",4,null],[13,"ReduceLoadSize","","",4,null],[13,"CombineAccessChains","","",4,null],[13,"UpgradeMemoryModel","","",4,null],[13,"CodeSinking","","",4,null],[13,"GenerateWebGPUInitializers","","",4,null],[13,"FixStorageClass","","",4,null],[13,"LegalizeVectorShuffle","","",4,null],[13,"DecomposeInitializedVariables","","",4,null],[13,"SplitInvalidUnreachable","","",4,null],[13,"GraphicsRobustAccess","","",4,null],[13,"DescriptorScalarReplacement","","",4,null],[13,"WrapOpKill","","",4,null],[13,"AmdExtToKhr","","",4,null],[0,"shared","spirv_tools_sys","",null,null],[5,"context_create","spirv_tools_sys::shared","Creates a context object for most of the SPIRV-Tools API. …",null,null],[5,"context_destroy","","Destroys the given context object.",null,null],[5,"binary_destroy","","Frees a binary stream from memory. This is a no-op if …",null,null],[4,"TargetEnv","","Certain target environments impose additional …",null,null],[13,"Universal_1_0","","SPIR-V 1.0 latest revision, no other restrictions.",5,null],[13,"Vulkan_1_0","","Vulkan 1.0 latest revision.",5,null],[13,"Universal_1_1","","SPIR-V 1.1 latest revision, no other restrictions.",5,null],[13,"OpenCL_2_1","","OpenCL Full Profile 2.1 latest revision.",5,null],[13,"OpenCL_2_2","","OpenCL Full Profile 2.2 latest revision.",5,null],[13,"OpenGL_4_0","","OpenGL 4.0 plus GL_ARB_gl_spirv, latest revisions.",5,null],[13,"OpenGL_4_1","","OpenGL 4.1 plus GL_ARB_gl_spirv, latest revisions.",5,null],[13,"OpenGL_4_2","","OpenGL 4.2 plus GL_ARB_gl_spirv, latest revisions.",5,null],[13,"OpenGL_4_3","","OpenGL 4.3 plus GL_ARB_gl_spirv, latest revisions.",5,null],[13,"OpenGL_4_5","","OpenGL 4.5 plus GL_ARB_gl_spirv, latest revisions.",5,null],[13,"Universal_1_2","","SPIR-V 1.2, latest revision, no other restrictions.",5,null],[13,"OpenCL_1_2","","OpenCL Full Profile 1.2 plus cl_khr_il_program, latest …",5,null],[13,"OpenCLEmbedded_1_2","","OpenCL Embedded Profile 1.2 plus cl_khr_il_program, …",5,null],[13,"OpenCL_2_0","","OpenCL Full Profile 2.0 plus cl_khr_il_program, latest …",5,null],[13,"OpenCLEmbedded_2_0","","OpenCL Embedded Profile 2.0 plus cl_khr_il_program, …",5,null],[13,"OpenCLEmbedded_2_1","","OpenCL Embedded Profile 2.1 latest revision.",5,null],[13,"OpenCLEmbedded_2_2","","OpenCL Embedded Profile 2.2 latest revision.",5,null],[13,"Universal_1_3","","SPIR-V 1.3 latest revision, no other restrictions.",5,null],[13,"Vulkan_1_1","","Vulkan 1.1 latest revision.",5,null],[13,"WebGPU_0","","Work in progress WebGPU 1.0.",5,null],[13,"Universal_1_4","","SPIR-V 1.4 latest revision, no other restrictions.",5,null],[13,"Vulkan_1_1_Spirv_1_4","","Vulkan 1.1 with VK_KHR_spirv_1_4, i.e. SPIR-V 1.4 binary.",5,null],[13,"Universal_1_5","","SPIR-V 1.5 latest revision, no other restrictions.",5,null],[13,"Vulkan_1_2","","Vulkan 1.2 latest revision.",5,null],[4,"SpirvResult","","",null,null],[13,"Success","","",6,null],[13,"Unsupported","","",6,null],[13,"EndOfStream","","",6,null],[13,"Warning","","",6,null],[13,"FailedMatch","","",6,null],[13,"RequestedTermination","","Success, but signals early termination.",6,null],[13,"InternalError","","",6,null],[13,"OutOfMemory","","",6,null],[13,"InvalidPointer","","",6,null],[13,"InvalidBinary","","",6,null],[13,"InvalidText","","",6,null],[13,"InvalidTable","","",6,null],[13,"InvalidValue","","",6,null],[13,"InvalidDiagnostic","","",6,null],[13,"InvalidLookup","","",6,null],[13,"InvalidId","","",6,null],[13,"InvalidCfg","","",6,null],[13,"InvalidLayout","","",6,null],[13,"InvalidCapability","","",6,null],[13,"InvalidData","","Indicates data rules validation failure.",6,null],[13,"MissingExtension","","",6,null],[13,"WrongVersion","","Indicates wrong SPIR-V version",6,null],[3,"Binary","","",null,null],[12,"code","","",7,null],[12,"size","","",7,null],[3,"ToolContext","","",null,null],[0,"val","spirv_tools_sys","",null,null],[5,"validate","spirv_tools_sys::val","Validates a SPIR-V binary for correctness. Any errors …",null,null],[5,"validate_with_options","","Validates a SPIR-V binary for correctness. Uses the …",null,null],[5,"validator_options_create","","Creates a Validator options object with default options. …",null,null],[5,"validator_options_destroy","","Destroys the given Validator options object.",null,null],[5,"validator_options_set_limit","","Records the maximum Universal Limit that is considered …",null,null],[5,"validator_options_set_relax_store_struct","","Record whether or not the validator should relax the …",null,null],[5,"validator_options_set_relax_logical_pointer","","Records whether or not the validator should relax the …",null,null],[5,"validator_options_set_before_legalization","","Records whether or not the validator should relax the …",null,null],[5,"validator_options_set_relax_block_layout","","Records whether the validator should use \\\"relaxed\\\" block …",null,null],[5,"validator_options_set_uniform_buffer_standard_layout","","Records whether the validator should use standard block …",null,null],[5,"validator_options_set_scalar_block_layout","","Records whether the validator should use \\\"scalar\\\" block …",null,null],[5,"validator_options_set_skip_block_layout","","Records whether or not the validator should skip …",null,null],[3,"ValidatorOptions","","",null,null],[4,"ValidatorLimits","","",null,null],[13,"StructMembers","","",8,null],[13,"StructDepth","","",8,null],[13,"LocalVariables","","",8,null],[13,"GlobalVariables","","",8,null],[13,"SwitchBranches","","",8,null],[13,"FunctionArgs","","",8,null],[13,"ControlFlowNestingDepth","","",8,null],[13,"AccessChainIndexes","","",8,null],[13,"IdBound","","",8,null],[11,"from","spirv_tools_sys::assembler","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","spirv_tools_sys::diagnostics","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","spirv_tools_sys::opt","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","spirv_tools_sys::shared","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","spirv_tools_sys::val","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"clone","spirv_tools_sys::diagnostics","",3,[[],["messagelevel",4]]],[11,"clone","spirv_tools_sys::opt","",4,[[],["passes",4]]],[11,"clone","spirv_tools_sys::shared","",5,[[],["targetenv",4]]],[11,"clone","","",6,[[],["spirvresult",4]]],[11,"clone","spirv_tools_sys::val","",8,[[],["validatorlimits",4]]],[11,"default","spirv_tools_sys::shared","",5,[[]]],[11,"eq","spirv_tools_sys::diagnostics","",3,[[["messagelevel",4]]]],[11,"eq","spirv_tools_sys::shared","",5,[[["targetenv",4]]]],[11,"eq","","",6,[[["spirvresult",4]]]],[11,"fmt","spirv_tools_sys::diagnostics","",3,[[["formatter",3]],["result",6]]],[11,"fmt","spirv_tools_sys::opt","",4,[[["formatter",3]],["result",6]]],[11,"fmt","spirv_tools_sys::shared","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","spirv_tools_sys::val","",8,[[["formatter",3]],["result",6]]],[11,"fmt","spirv_tools_sys::shared","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"from_str","","",5,[[],["result",4]]]],"p":[[4,"BinaryOptions"],[3,"Position"],[3,"Diagnostic"],[4,"MessageLevel"],[4,"Passes"],[4,"TargetEnv"],[4,"SpirvResult"],[3,"Binary"],[4,"ValidatorLimits"],[3,"Optimizer"],[3,"OptimizerOptions"],[3,"ToolContext"],[3,"ValidatorOptions"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[0,"token","","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[],["punctuated",3]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",110,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",111,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",112,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",113,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",113,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",113,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",113,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",113,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",113,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",113,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",113,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",113,[[]]],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",113,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",113,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",113,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",114,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",114,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",114,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",114,[[],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",115,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",115,[[["totokens",8],["display",8]]]],[11,"span","","The source location of the error.",115,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",115,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",115,[[["error",3]]]],[4,"AttrStyle","syn","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",116,null],[13,"Inner","","",116,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",117,null],[12,"style","","",117,null],[12,"bracket_token","","",117,null],[12,"path","","",117,null],[12,"tokens","","",117,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",118,null],[13,"List","","A structured list within an attribute, like …",118,null],[13,"NameValue","","A name-value pair within an attribute, like …",118,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",119,null],[12,"paren_token","","",119,null],[12,"nested","","",119,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",120,null],[12,"eq_token","","",120,null],[12,"lit","","",120,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",121,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",121,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",122,null],[12,"vis","","Visibility of the field.",122,null],[12,"ident","","Name of the field, if any.",122,null],[12,"colon_token","","",122,null],[12,"ty","","Type of the field.",122,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",123,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",123,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",123,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",124,null],[12,"named","","",124,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",125,null],[12,"unnamed","","",125,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",126,null],[12,"ident","","Name of the variant.",126,null],[12,"fields","","Content stored in the variant.",126,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",126,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",127,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",128,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",129,null],[12,"paren_token","","",129,null],[12,"in_token","","",129,null],[12,"path","","",129,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",130,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",130,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",130,null],[13,"Inherited","","An inherited visibility, which usually means private.",130,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",131,null],[12,"pat","","",131,null],[12,"guard","","",131,null],[12,"fat_arrow_token","","",131,null],[12,"body","","",131,null],[12,"comma","","",131,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",132,null],[12,"member","","Name or index of the field.",132,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",132,null],[12,"expr","","Value of the field.",132,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",133,null],[13,"Const","","A const expression. Must be inside of a block.",133,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",134,null],[12,"colon_token","","",134,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",135,null],[12,"lt_token","","",135,null],[12,"args","","",135,null],[12,"gt_token","","",135,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",136,null],[13,"Closed","","Inclusive at the beginning and end.",136,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",137,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",137,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",137,null],[13,"Async","","An async block: <code>async { ... }</code>.",137,null],[13,"Await","","An await expression: <code>fut.await</code>.",137,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",137,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",137,null],[13,"Box","","A box expression: <code>box f</code>.",137,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",137,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",137,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",137,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",137,null],[13,"Continue","","A <code>continue</code>, with an optional label.",137,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",137,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",137,null],[13,"Group","","An expression contained within invisible delimiters.",137,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",137,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",137,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",137,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",137,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",137,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",137,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",137,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",137,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",137,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",137,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",137,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",137,null],[13,"Repeat","","An array literal constructed from one repeated element: …",137,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",137,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",137,null],[13,"Try","","A try-expression: <code>expr?</code>.",137,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",137,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",137,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",137,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",137,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",137,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",137,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",137,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",137,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",138,null],[12,"bracket_token","","",138,null],[12,"elems","","",138,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",139,null],[12,"left","","",139,null],[12,"eq_token","","",139,null],[12,"right","","",139,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"op","","",140,null],[12,"right","","",140,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",141,null],[12,"async_token","","",141,null],[12,"capture","","",141,null],[12,"block","","",141,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",142,null],[12,"base","","",142,null],[12,"dot_token","","",142,null],[12,"await_token","","",142,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",143,null],[12,"left","","",143,null],[12,"op","","",143,null],[12,"right","","",143,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",144,null],[12,"label","","",144,null],[12,"block","","",144,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",145,null],[12,"box_token","","",145,null],[12,"expr","","",145,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",146,null],[12,"break_token","","",146,null],[12,"label","","",146,null],[12,"expr","","",146,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",147,null],[12,"func","","",147,null],[12,"paren_token","","",147,null],[12,"args","","",147,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",148,null],[12,"expr","","",148,null],[12,"as_token","","",148,null],[12,"ty","","",148,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",149,null],[12,"asyncness","","",149,null],[12,"movability","","",149,null],[12,"capture","","",149,null],[12,"or1_token","","",149,null],[12,"inputs","","",149,null],[12,"or2_token","","",149,null],[12,"output","","",149,null],[12,"body","","",149,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",150,null],[12,"continue_token","","",150,null],[12,"label","","",150,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",151,null],[12,"base","","",151,null],[12,"dot_token","","",151,null],[12,"member","","",151,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",152,null],[12,"label","","",152,null],[12,"for_token","","",152,null],[12,"pat","","",152,null],[12,"in_token","","",152,null],[12,"expr","","",152,null],[12,"body","","",152,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",153,null],[12,"group_token","","",153,null],[12,"expr","","",153,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",154,null],[12,"if_token","","",154,null],[12,"cond","","",154,null],[12,"then_branch","","",154,null],[12,"else_branch","","",154,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",155,null],[12,"expr","","",155,null],[12,"bracket_token","","",155,null],[12,"index","","",155,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",156,null],[12,"let_token","","",156,null],[12,"pat","","",156,null],[12,"eq_token","","",156,null],[12,"expr","","",156,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",157,null],[12,"lit","","",157,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",158,null],[12,"label","","",158,null],[12,"loop_token","","",158,null],[12,"body","","",158,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",159,null],[12,"mac","","",159,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",160,null],[12,"match_token","","",160,null],[12,"expr","","",160,null],[12,"brace_token","","",160,null],[12,"arms","","",160,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",161,null],[12,"receiver","","",161,null],[12,"dot_token","","",161,null],[12,"method","","",161,null],[12,"turbofish","","",161,null],[12,"paren_token","","",161,null],[12,"args","","",161,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",162,null],[12,"paren_token","","",162,null],[12,"expr","","",162,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",163,null],[12,"qself","","",163,null],[12,"path","","",163,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",164,null],[12,"from","","",164,null],[12,"limits","","",164,null],[12,"to","","",164,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",165,null],[12,"and_token","","",165,null],[12,"raw","","",165,null],[12,"mutability","","",165,null],[12,"expr","","",165,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",166,null],[12,"bracket_token","","",166,null],[12,"expr","","",166,null],[12,"semi_token","","",166,null],[12,"len","","",166,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",167,null],[12,"return_token","","",167,null],[12,"expr","","",167,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",168,null],[12,"path","","",168,null],[12,"brace_token","","",168,null],[12,"fields","","",168,null],[12,"dot2_token","","",168,null],[12,"rest","","",168,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",169,null],[12,"expr","","",169,null],[12,"question_token","","",169,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",170,null],[12,"try_token","","",170,null],[12,"block","","",170,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",171,null],[12,"paren_token","","",171,null],[12,"elems","","",171,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",172,null],[12,"expr","","",172,null],[12,"colon_token","","",172,null],[12,"ty","","",172,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",173,null],[12,"op","","",173,null],[12,"expr","","",173,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",174,null],[12,"unsafe_token","","",174,null],[12,"block","","",174,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"label","","",175,null],[12,"while_token","","",175,null],[12,"cond","","",175,null],[12,"body","","",175,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",176,null],[12,"yield_token","","",176,null],[12,"expr","","",176,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",177,null],[12,"span","","",177,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",178,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",178,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",179,null],[12,"lt_token","","",179,null],[12,"lifetimes","","",179,null],[12,"gt_token","","",179,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",180,null],[12,"const_token","","",180,null],[12,"ident","","",180,null],[12,"colon_token","","",180,null],[12,"ty","","",180,null],[12,"eq_token","","",180,null],[12,"default","","",180,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",181,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",181,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",181,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",182,null],[12,"params","","",182,null],[12,"gt_token","","",182,null],[12,"where_clause","","",182,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",183,null],[12,"lifetime","","",183,null],[12,"colon_token","","",183,null],[12,"bounds","","",183,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",184,null],[12,"eq_token","","",184,null],[12,"rhs_ty","","",184,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",185,null],[12,"colon_token","","",185,null],[12,"bounds","","",185,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",186,null],[12,"bounded_ty","","The type being bounded",186,null],[12,"colon_token","","",186,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",186,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",187,null],[12,"modifier","","",187,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",187,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",188,null],[13,"Maybe","","",188,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",189,null],[12,"ident","","",189,null],[12,"colon_token","","",189,null],[12,"bounds","","",189,null],[12,"eq_token","","",189,null],[12,"default","","",189,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",190,null],[13,"Lifetime","","",190,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",191,null],[12,"predicates","","",191,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",192,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",192,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",192,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",193,null],[13,"Typed","","A function argument accepted by pattern and type.",193,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",194,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",194,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",194,null],[13,"Macro","","A macro invocation within an extern block.",194,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",194,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",195,null],[12,"vis","","",195,null],[12,"sig","","",195,null],[12,"semi_token","","",195,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",196,null],[12,"mac","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",197,null],[12,"vis","","",197,null],[12,"static_token","","",197,null],[12,"mutability","","",197,null],[12,"ident","","",197,null],[12,"colon_token","","",197,null],[12,"ty","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"type_token","","",198,null],[12,"ident","","",198,null],[12,"semi_token","","",198,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",199,null],[13,"Method","","A method within an impl block.",199,null],[13,"Type","","An associated type within an impl block.",199,null],[13,"Macro","","A macro invocation within an impl block.",199,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",199,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",200,null],[12,"vis","","",200,null],[12,"defaultness","","",200,null],[12,"const_token","","",200,null],[12,"ident","","",200,null],[12,"colon_token","","",200,null],[12,"ty","","",200,null],[12,"eq_token","","",200,null],[12,"expr","","",200,null],[12,"semi_token","","",200,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",201,null],[12,"mac","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",202,null],[12,"vis","","",202,null],[12,"defaultness","","",202,null],[12,"sig","","",202,null],[12,"block","","",202,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"type_token","","",203,null],[12,"ident","","",203,null],[12,"generics","","",203,null],[12,"eq_token","","",203,null],[12,"ty","","",203,null],[12,"semi_token","","",203,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",204,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",204,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",204,null],[13,"Fn","","A free-standing function: …",204,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",204,null],[13,"Impl","","An impl block providing trait or associated items: …",204,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",204,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",204,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",204,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",204,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",204,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",204,null],[13,"TraitAlias","","A trait alias: …",204,null],[13,"Type","","A type alias: …",204,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",204,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",204,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",204,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",205,null],[12,"vis","","",205,null],[12,"const_token","","",205,null],[12,"ident","","",205,null],[12,"colon_token","","",205,null],[12,"ty","","",205,null],[12,"eq_token","","",205,null],[12,"expr","","",205,null],[12,"semi_token","","",205,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"enum_token","","",206,null],[12,"ident","","",206,null],[12,"generics","","",206,null],[12,"brace_token","","",206,null],[12,"variants","","",206,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"extern_token","","",207,null],[12,"crate_token","","",207,null],[12,"ident","","",207,null],[12,"rename","","",207,null],[12,"semi_token","","",207,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"sig","","",208,null],[12,"block","","",208,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",209,null],[12,"abi","","",209,null],[12,"brace_token","","",209,null],[12,"items","","",209,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",210,null],[12,"defaultness","","",210,null],[12,"unsafety","","",210,null],[12,"impl_token","","",210,null],[12,"generics","","",210,null],[12,"trait_","","Trait this impl implements.",210,null],[12,"self_ty","","The Self type of the impl.",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",211,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",211,null],[12,"mac","","",211,null],[12,"semi_token","","",211,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",212,null],[12,"vis","","",212,null],[12,"macro_token","","",212,null],[12,"ident","","",212,null],[12,"rules","","",212,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"mod_token","","",213,null],[12,"ident","","",213,null],[12,"content","","",213,null],[12,"semi","","",213,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"static_token","","",214,null],[12,"mutability","","",214,null],[12,"ident","","",214,null],[12,"colon_token","","",214,null],[12,"ty","","",214,null],[12,"eq_token","","",214,null],[12,"expr","","",214,null],[12,"semi_token","","",214,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"struct_token","","",215,null],[12,"ident","","",215,null],[12,"generics","","",215,null],[12,"fields","","",215,null],[12,"semi_token","","",215,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"unsafety","","",216,null],[12,"auto_token","","",216,null],[12,"trait_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"colon_token","","",216,null],[12,"supertraits","","",216,null],[12,"brace_token","","",216,null],[12,"items","","",216,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"eq_token","","",217,null],[12,"bounds","","",217,null],[12,"semi_token","","",217,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"type_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"ty","","",218,null],[12,"semi_token","","",218,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"union_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"fields","","",219,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"use_token","","",220,null],[12,"leading_colon","","",220,null],[12,"tree","","",220,null],[12,"semi_token","","",220,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",221,null],[12,"reference","","",221,null],[12,"mutability","","",221,null],[12,"self_token","","",221,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",222,null],[12,"asyncness","","",222,null],[12,"unsafety","","",222,null],[12,"abi","","",222,null],[12,"fn_token","","",222,null],[12,"ident","","",222,null],[12,"generics","","",222,null],[12,"paren_token","","",222,null],[12,"inputs","","",222,null],[12,"variadic","","",222,null],[12,"output","","",222,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",223,null],[13,"Method","","A trait method within the definition of a trait.",223,null],[13,"Type","","An associated type within the definition of a trait.",223,null],[13,"Macro","","A macro invocation within the definition of a trait.",223,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",223,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",224,null],[12,"const_token","","",224,null],[12,"ident","","",224,null],[12,"colon_token","","",224,null],[12,"ty","","",224,null],[12,"default","","",224,null],[12,"semi_token","","",224,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"mac","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"sig","","",226,null],[12,"default","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"type_token","","",227,null],[12,"ident","","",227,null],[12,"generics","","",227,null],[12,"colon_token","","",227,null],[12,"bounds","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",228,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",229,null],[12,"items","","",229,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",230,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",231,null],[12,"colon2_token","","",231,null],[12,"tree","","",231,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",232,null],[12,"as_token","","",232,null],[12,"rename","","",232,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",233,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",233,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",233,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",233,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",233,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",234,null],[12,"attrs","","",234,null],[12,"items","","",234,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",235,null],[12,"ident","","",235,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",236,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",236,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",236,null],[13,"Char","","A character literal: <code>\'a\'</code>.",236,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",236,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",236,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",236,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",236,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",237,null],[12,"span","","",237,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",238,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",238,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",239,null],[12,"bang_token","","",239,null],[12,"delimiter","","",239,null],[12,"tokens","","",239,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",240,null],[13,"Brace","","",240,null],[13,"Bracket","","",240,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",241,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",241,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",242,null],[12,"brace_token","","",242,null],[12,"variants","","",242,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",243,null],[12,"fields","","",243,null],[12,"semi_token","","",243,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",244,null],[12,"fields","","",244,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",245,null],[12,"vis","","Visibility of the struct or enum.",245,null],[12,"ident","","Name of the struct or enum.",245,null],[12,"generics","","Generics required to complete the definition.",245,null],[12,"data","","Data within the struct or enum.",245,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",246,null],[13,"Sub","","The <code>-</code> operator (subtraction)",246,null],[13,"Mul","","The <code>*</code> operator (multiplication)",246,null],[13,"Div","","The <code>/</code> operator (division)",246,null],[13,"Rem","","The <code>%</code> operator (modulus)",246,null],[13,"And","","The <code>&&</code> operator (logical and)",246,null],[13,"Or","","The <code>||</code> operator (logical or)",246,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",246,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",246,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",246,null],[13,"Shl","","The <code><<</code> operator (shift left)",246,null],[13,"Shr","","The <code>>></code> operator (shift right)",246,null],[13,"Eq","","The <code>==</code> operator (equality)",246,null],[13,"Lt","","The <code><</code> operator (less than)",246,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",246,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",246,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",246,null],[13,"Gt","","The <code>></code> operator (greater than)",246,null],[13,"AddEq","","The <code>+=</code> operator",246,null],[13,"SubEq","","The <code>-=</code> operator",246,null],[13,"MulEq","","The <code>*=</code> operator",246,null],[13,"DivEq","","The <code>/=</code> operator",246,null],[13,"RemEq","","The <code>%=</code> operator",246,null],[13,"BitXorEq","","The <code>^=</code> operator",246,null],[13,"BitAndEq","","The <code>&=</code> operator",246,null],[13,"BitOrEq","","The <code>|=</code> operator",246,null],[13,"ShlEq","","The <code><<=</code> operator",246,null],[13,"ShrEq","","The <code>>>=</code> operator",246,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",247,null],[13,"Not","","The <code>!</code> operator for logical inversion",247,null],[13,"Neg","","The <code>-</code> operator for negation",247,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",248,null],[12,"stmts","","Statements in a block",248,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",249,null],[12,"let_token","","",249,null],[12,"pat","","",249,null],[12,"init","","",249,null],[12,"semi_token","","",249,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",250,null],[13,"Item","","An item definition.",250,null],[13,"Expr","","Expr without trailing semicolon.",250,null],[13,"Semi","","Expression with trailing semicolon.",250,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",251,null],[12,"name","","",251,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",252,null],[12,"name","","",252,null],[12,"ty","","",252,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",253,null],[13,"Type","","A particular type is returned.",253,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",254,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",254,null],[13,"Group","","A type contained within invisible delimiters.",254,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",254,null],[13,"Infer","","Indication that a type should be inferred by the …",254,null],[13,"Macro","","A macro in the type position.",254,null],[13,"Never","","The never type: <code>!</code>.",254,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",254,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",254,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",254,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",254,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",254,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",254,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",254,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",254,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",255,null],[12,"elem","","",255,null],[12,"semi_token","","",255,null],[12,"len","","",255,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",256,null],[12,"unsafety","","",256,null],[12,"abi","","",256,null],[12,"fn_token","","",256,null],[12,"paren_token","","",256,null],[12,"inputs","","",256,null],[12,"variadic","","",256,null],[12,"output","","",256,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",257,null],[12,"elem","","",257,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",258,null],[12,"bounds","","",258,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",259,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",260,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",261,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",262,null],[12,"elem","","",262,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",263,null],[12,"path","","",263,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",264,null],[12,"const_token","","",264,null],[12,"mutability","","",264,null],[12,"elem","","",264,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",265,null],[12,"lifetime","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",266,null],[12,"elem","","",266,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",267,null],[12,"bounds","","",267,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",268,null],[12,"elems","","",268,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",269,null],[12,"dots","","",269,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",270,null],[12,"member","","",270,null],[12,"colon_token","","",270,null],[12,"pat","","",270,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",271,null],[13,"Ident","","A pattern that binds a new variable: …",271,null],[13,"Lit","","A literal pattern: <code>0</code>.",271,null],[13,"Macro","","A macro in pattern position.",271,null],[13,"Or","","A pattern that matches any one of a set of cases.",271,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",271,null],[13,"Range","","A range pattern: <code>1..=2</code>.",271,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",271,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",271,null],[13,"Slice","","A dynamically sized slice pattern: …",271,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",271,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",271,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",271,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",271,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",271,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",271,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",272,null],[12,"box_token","","",272,null],[12,"pat","","",272,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",273,null],[12,"by_ref","","",273,null],[12,"mutability","","",273,null],[12,"ident","","",273,null],[12,"subpat","","",273,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",274,null],[12,"expr","","",274,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",275,null],[12,"mac","","",275,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",276,null],[12,"leading_vert","","",276,null],[12,"cases","","",276,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",277,null],[12,"qself","","",277,null],[12,"path","","",277,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",278,null],[12,"lo","","",278,null],[12,"limits","","",278,null],[12,"hi","","",278,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",279,null],[12,"and_token","","",279,null],[12,"mutability","","",279,null],[12,"pat","","",279,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",280,null],[12,"dot2_token","","",280,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",281,null],[12,"bracket_token","","",281,null],[12,"elems","","",281,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",282,null],[12,"path","","",282,null],[12,"brace_token","","",282,null],[12,"fields","","",282,null],[12,"dot2_token","","",282,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",283,null],[12,"paren_token","","",283,null],[12,"elems","","",283,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",284,null],[12,"path","","",284,null],[12,"pat","","",284,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",285,null],[12,"pat","","",285,null],[12,"colon_token","","",285,null],[12,"ty","","",285,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",286,null],[12,"underscore_token","","",286,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",287,null],[12,"lt_token","","",287,null],[12,"args","","",287,null],[12,"gt_token","","",287,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",288,null],[12,"eq_token","","",288,null],[12,"ty","","",288,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",289,null],[12,"colon_token","","",289,null],[12,"bounds","","",289,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",290,null],[13,"Type","","A type argument.",290,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",290,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",290,null],[13,"Const","","A const expression. Must be inside of a block.",290,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",291,null],[12,"inputs","","<code>(A, B)</code>",291,null],[12,"output","","<code>C</code>",291,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",292,null],[12,"segments","","",292,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",293,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",293,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",293,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",294,null],[12,"arguments","","",294,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",295,null],[12,"ty","","",295,null],[12,"position","","",295,null],[12,"as_token","","",295,null],[12,"gt_token","","",295,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["file",3],["result",6]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","","",296,[[],["span",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"to_string","","",296,[[],["string",3]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"to_string","","",235,[[],["string",3]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"to_string","","",304,[[],["string",3]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"fmt","syn","",296,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",296,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"cmp","","",296,[[["ident",3]],["ordering",4]]],[11,"fmt","","",296,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",296,[[],["ident",3]]],[11,"hash","","",296,[[]]],[11,"eq","","",296,[[["ident",3]]]],[11,"eq","","",296,[[]]],[11,"span","","",296,[[],[["span",3],["option",4]]]],[11,"fmt","","",296,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_tokens","","",296,[[["tokenstream",3]]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",300,[[["cursor",3]]]],[11,"display","","",300,[[]]],[11,"peek","","",301,[[["cursor",3]]]],[11,"display","","",301,[[]]],[11,"peek","","",302,[[["cursor",3]]]],[11,"display","","",302,[[]]],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"peek","","",304,[[["cursor",3]]]],[11,"display","","",304,[[]]],[11,"peek","","",305,[[["cursor",3]]]],[11,"display","","",305,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","syn::token","",0,[[["cursor",3]]]],[11,"display","","",0,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","","",99,[[["cursor",3]]]],[11,"display","","",99,[[]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",102,[[["cursor",3]]]],[11,"display","","",102,[[]]],[11,"peek","","",1,[[["cursor",3]]]],[11,"display","","",1,[[]]],[11,"peek","","",2,[[["cursor",3]]]],[11,"display","","",2,[[]]],[11,"peek","","",3,[[["cursor",3]]]],[11,"display","","",3,[[]]],[11,"peek","","",4,[[["cursor",3]]]],[11,"display","","",4,[[]]],[11,"peek","","",5,[[["cursor",3]]]],[11,"display","","",5,[[]]],[11,"peek","","",6,[[["cursor",3]]]],[11,"display","","",6,[[]]],[11,"peek","","",7,[[["cursor",3]]]],[11,"display","","",7,[[]]],[11,"peek","","",8,[[["cursor",3]]]],[11,"display","","",8,[[]]],[11,"peek","","",9,[[["cursor",3]]]],[11,"display","","",9,[[]]],[11,"peek","","",10,[[["cursor",3]]]],[11,"display","","",10,[[]]],[11,"peek","","",11,[[["cursor",3]]]],[11,"display","","",11,[[]]],[11,"peek","","",12,[[["cursor",3]]]],[11,"display","","",12,[[]]],[11,"peek","","",13,[[["cursor",3]]]],[11,"display","","",13,[[]]],[11,"peek","","",14,[[["cursor",3]]]],[11,"display","","",14,[[]]],[11,"peek","","",15,[[["cursor",3]]]],[11,"display","","",15,[[]]],[11,"peek","","",16,[[["cursor",3]]]],[11,"display","","",16,[[]]],[11,"peek","","",17,[[["cursor",3]]]],[11,"display","","",17,[[]]],[11,"peek","","",18,[[["cursor",3]]]],[11,"display","","",18,[[]]],[11,"peek","","",19,[[["cursor",3]]]],[11,"display","","",19,[[]]],[11,"peek","","",20,[[["cursor",3]]]],[11,"display","","",20,[[]]],[11,"peek","","",21,[[["cursor",3]]]],[11,"display","","",21,[[]]],[11,"peek","","",22,[[["cursor",3]]]],[11,"display","","",22,[[]]],[11,"peek","","",23,[[["cursor",3]]]],[11,"display","","",23,[[]]],[11,"peek","","",24,[[["cursor",3]]]],[11,"display","","",24,[[]]],[11,"peek","","",25,[[["cursor",3]]]],[11,"display","","",25,[[]]],[11,"peek","","",26,[[["cursor",3]]]],[11,"display","","",26,[[]]],[11,"peek","","",27,[[["cursor",3]]]],[11,"display","","",27,[[]]],[11,"peek","","",28,[[["cursor",3]]]],[11,"display","","",28,[[]]],[11,"peek","","",29,[[["cursor",3]]]],[11,"display","","",29,[[]]],[11,"peek","","",30,[[["cursor",3]]]],[11,"display","","",30,[[]]],[11,"peek","","",31,[[["cursor",3]]]],[11,"display","","",31,[[]]],[11,"peek","","",32,[[["cursor",3]]]],[11,"display","","",32,[[]]],[11,"peek","","",33,[[["cursor",3]]]],[11,"display","","",33,[[]]],[11,"peek","","",34,[[["cursor",3]]]],[11,"display","","",34,[[]]],[11,"peek","","",35,[[["cursor",3]]]],[11,"display","","",35,[[]]],[11,"peek","","",36,[[["cursor",3]]]],[11,"display","","",36,[[]]],[11,"peek","","",37,[[["cursor",3]]]],[11,"display","","",37,[[]]],[11,"peek","","",38,[[["cursor",3]]]],[11,"display","","",38,[[]]],[11,"peek","","",39,[[["cursor",3]]]],[11,"display","","",39,[[]]],[11,"peek","","",40,[[["cursor",3]]]],[11,"display","","",40,[[]]],[11,"peek","","",41,[[["cursor",3]]]],[11,"display","","",41,[[]]],[11,"peek","","",42,[[["cursor",3]]]],[11,"display","","",42,[[]]],[11,"peek","","",43,[[["cursor",3]]]],[11,"display","","",43,[[]]],[11,"peek","","",44,[[["cursor",3]]]],[11,"display","","",44,[[]]],[11,"peek","","",45,[[["cursor",3]]]],[11,"display","","",45,[[]]],[11,"peek","","",46,[[["cursor",3]]]],[11,"display","","",46,[[]]],[11,"peek","","",47,[[["cursor",3]]]],[11,"display","","",47,[[]]],[11,"peek","","",48,[[["cursor",3]]]],[11,"display","","",48,[[]]],[11,"peek","","",49,[[["cursor",3]]]],[11,"display","","",49,[[]]],[11,"peek","","",50,[[["cursor",3]]]],[11,"display","","",50,[[]]],[11,"peek","","",51,[[["cursor",3]]]],[11,"display","","",51,[[]]],[11,"peek","","",52,[[["cursor",3]]]],[11,"display","","",52,[[]]],[11,"peek","","",53,[[["cursor",3]]]],[11,"display","","",53,[[]]],[11,"peek","","",54,[[["cursor",3]]]],[11,"display","","",54,[[]]],[11,"peek","","",55,[[["cursor",3]]]],[11,"display","","",55,[[]]],[11,"peek","","",56,[[["cursor",3]]]],[11,"display","","",56,[[]]],[11,"peek","","",57,[[["cursor",3]]]],[11,"display","","",57,[[]]],[11,"peek","","",58,[[["cursor",3]]]],[11,"display","","",58,[[]]],[11,"peek","","",59,[[["cursor",3]]]],[11,"display","","",59,[[]]],[11,"peek","","",60,[[["cursor",3]]]],[11,"display","","",60,[[]]],[11,"peek","","",61,[[["cursor",3]]]],[11,"display","","",61,[[]]],[11,"peek","","",62,[[["cursor",3]]]],[11,"display","","",62,[[]]],[11,"peek","","",63,[[["cursor",3]]]],[11,"display","","",63,[[]]],[11,"peek","","",64,[[["cursor",3]]]],[11,"display","","",64,[[]]],[11,"peek","","",65,[[["cursor",3]]]],[11,"display","","",65,[[]]],[11,"peek","","",66,[[["cursor",3]]]],[11,"display","","",66,[[]]],[11,"peek","","",67,[[["cursor",3]]]],[11,"display","","",67,[[]]],[11,"peek","","",68,[[["cursor",3]]]],[11,"display","","",68,[[]]],[11,"peek","","",69,[[["cursor",3]]]],[11,"display","","",69,[[]]],[11,"peek","","",70,[[["cursor",3]]]],[11,"display","","",70,[[]]],[11,"peek","","",71,[[["cursor",3]]]],[11,"display","","",71,[[]]],[11,"peek","","",72,[[["cursor",3]]]],[11,"display","","",72,[[]]],[11,"peek","","",73,[[["cursor",3]]]],[11,"display","","",73,[[]]],[11,"peek","","",74,[[["cursor",3]]]],[11,"display","","",74,[[]]],[11,"peek","","",75,[[["cursor",3]]]],[11,"display","","",75,[[]]],[11,"peek","","",76,[[["cursor",3]]]],[11,"display","","",76,[[]]],[11,"peek","","",77,[[["cursor",3]]]],[11,"display","","",77,[[]]],[11,"peek","","",78,[[["cursor",3]]]],[11,"display","","",78,[[]]],[11,"peek","","",79,[[["cursor",3]]]],[11,"display","","",79,[[]]],[11,"peek","","",80,[[["cursor",3]]]],[11,"display","","",80,[[]]],[11,"peek","","",81,[[["cursor",3]]]],[11,"display","","",81,[[]]],[11,"peek","","",82,[[["cursor",3]]]],[11,"display","","",82,[[]]],[11,"peek","","",83,[[["cursor",3]]]],[11,"display","","",83,[[]]],[11,"peek","","",84,[[["cursor",3]]]],[11,"display","","",84,[[]]],[11,"peek","","",85,[[["cursor",3]]]],[11,"display","","",85,[[]]],[11,"peek","","",86,[[["cursor",3]]]],[11,"display","","",86,[[]]],[11,"peek","","",87,[[["cursor",3]]]],[11,"display","","",87,[[]]],[11,"peek","","",88,[[["cursor",3]]]],[11,"display","","",88,[[]]],[11,"peek","","",89,[[["cursor",3]]]],[11,"display","","",89,[[]]],[11,"peek","","",90,[[["cursor",3]]]],[11,"display","","",90,[[]]],[11,"peek","","",91,[[["cursor",3]]]],[11,"display","","",91,[[]]],[11,"peek","","",92,[[["cursor",3]]]],[11,"display","","",92,[[]]],[11,"peek","","",93,[[["cursor",3]]]],[11,"display","","",93,[[]]],[11,"peek","","",94,[[["cursor",3]]]],[11,"display","","",94,[[]]],[11,"peek","","",95,[[["cursor",3]]]],[11,"display","","",95,[[]]],[11,"peek","","",96,[[["cursor",3]]]],[11,"display","","",96,[[]]],[11,"peek","","",97,[[["cursor",3]]]],[11,"display","","",97,[[]]],[11,"peek","","",98,[[["cursor",3]]]],[11,"display","","",98,[[]]],[11,"peek","syn","",296,[[["cursor",3]]]],[11,"display","","",296,[[]]],[11,"parse_any","","",296,[[["parsestream",6]],["result",6]]],[11,"unraw","","",296,[[],["ident",3]]],[11,"advance_to","syn::parse","",113,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",296,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",130,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",154,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",134,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],["result",6]]],[11,"parse","","",136,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],[["usetree",4],["result",6]]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",300,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",294,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",113,[[]]],[11,"from","syn","",296,[[["selfvalue",3]],["ident",3]]],[11,"from","","",296,[[["selftype",3]],["ident",3]]],[11,"from","","",296,[[["super",3]],["ident",3]]],[11,"from","","",296,[[["crate",3]],["ident",3]]],[11,"from","","",296,[[["extern",3]],["ident",3]]],[11,"from","","",296,[[["underscore",3]],["ident",3]]],[11,"from","","",118,[[["path",3]],["meta",4]]],[11,"from","","",118,[[["metalist",3]],["meta",4]]],[11,"from","","",118,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",121,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",121,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",123,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",123,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",130,[[["vispublic",3]],["visibility",4]]],[11,"from","","",130,[[["viscrate",3]],["visibility",4]]],[11,"from","","",130,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",137,[[["exprarray",3]],["expr",4]]],[11,"from","","",137,[[["exprassign",3]],["expr",4]]],[11,"from","","",137,[[["exprassignop",3]],["expr",4]]],[11,"from","","",137,[[["exprasync",3]],["expr",4]]],[11,"from","","",137,[[["exprawait",3]],["expr",4]]],[11,"from","","",137,[[["exprbinary",3]],["expr",4]]],[11,"from","","",137,[[["exprblock",3]],["expr",4]]],[11,"from","","",137,[[["exprbox",3]],["expr",4]]],[11,"from","","",137,[[["exprbreak",3]],["expr",4]]],[11,"from","","",137,[[["exprcall",3]],["expr",4]]],[11,"from","","",137,[[["exprcast",3]],["expr",4]]],[11,"from","","",137,[[["exprclosure",3]],["expr",4]]],[11,"from","","",137,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",137,[[["exprfield",3]],["expr",4]]],[11,"from","","",137,[[["exprforloop",3]],["expr",4]]],[11,"from","","",137,[[["exprgroup",3]],["expr",4]]],[11,"from","","",137,[[["exprif",3]],["expr",4]]],[11,"from","","",137,[[["exprindex",3]],["expr",4]]],[11,"from","","",137,[[["exprlet",3]],["expr",4]]],[11,"from","","",137,[[["exprlit",3]],["expr",4]]],[11,"from","","",137,[[["exprloop",3]],["expr",4]]],[11,"from","","",137,[[["exprmacro",3]],["expr",4]]],[11,"from","","",137,[[["exprmatch",3]],["expr",4]]],[11,"from","","",137,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",137,[[["exprparen",3]],["expr",4]]],[11,"from","","",137,[[["exprpath",3]],["expr",4]]],[11,"from","","",137,[[["exprrange",3]],["expr",4]]],[11,"from","","",137,[[["exprreference",3]],["expr",4]]],[11,"from","","",137,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",137,[[["exprreturn",3]],["expr",4]]],[11,"from","","",137,[[["exprstruct",3]],["expr",4]]],[11,"from","","",137,[[["exprtry",3]],["expr",4]]],[11,"from","","",137,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",137,[[["exprtuple",3]],["expr",4]]],[11,"from","","",137,[[["exprtype",3]],["expr",4]]],[11,"from","","",137,[[["exprunary",3]],["expr",4]]],[11,"from","","",137,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",137,[[["exprwhile",3]],["expr",4]]],[11,"from","","",137,[[["expryield",3]],["expr",4]]],[11,"from","","",177,[[],["index",3]]],[11,"from","","",181,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",181,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",181,[[["constparam",3]],["genericparam",4]]],[11,"from","","",189,[[["ident",3]]]],[11,"from","","",190,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",190,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",192,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",192,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",204,[[["itemconst",3]],["item",4]]],[11,"from","","",204,[[["itemenum",3]],["item",4]]],[11,"from","","",204,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",204,[[["itemfn",3]],["item",4]]],[11,"from","","",204,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",204,[[["itemimpl",3]],["item",4]]],[11,"from","","",204,[[["itemmacro",3]],["item",4]]],[11,"from","","",204,[[["itemmacro2",3]],["item",4]]],[11,"from","","",204,[[["itemmod",3]],["item",4]]],[11,"from","","",204,[[["itemstatic",3]],["item",4]]],[11,"from","","",204,[[["itemstruct",3]],["item",4]]],[11,"from","","",204,[[["itemtrait",3]],["item",4]]],[11,"from","","",204,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",204,[[["itemtype",3]],["item",4]]],[11,"from","","",204,[[["itemunion",3]],["item",4]]],[11,"from","","",204,[[["itemuse",3]],["item",4]]],[11,"from","","",204,[[["deriveinput",3]],["item",4]]],[11,"from","","",245,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",245,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",233,[[["usepath",3]],["usetree",4]]],[11,"from","","",233,[[["usename",3]],["usetree",4]]],[11,"from","","",233,[[["userename",3]],["usetree",4]]],[11,"from","","",233,[[["useglob",3]],["usetree",4]]],[11,"from","","",233,[[["usegroup",3]],["usetree",4]]],[11,"from","","",194,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",194,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",223,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",223,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",223,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",199,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",199,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",199,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",193,[[["receiver",3]],["fnarg",4]]],[11,"from","","",193,[[["pattype",3]],["fnarg",4]]],[11,"from","","",236,[[["litstr",3]],["lit",4]]],[11,"from","","",236,[[["litbytestr",3]],["lit",4]]],[11,"from","","",236,[[["litbyte",3]],["lit",4]]],[11,"from","","",236,[[["litchar",3]],["lit",4]]],[11,"from","","",236,[[["litint",3]],["lit",4]]],[11,"from","","",236,[[["litfloat",3]],["lit",4]]],[11,"from","","",236,[[["litbool",3]],["lit",4]]],[11,"from","","",304,[[["literal",3]]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",241,[[["datastruct",3]],["data",4]]],[11,"from","","",241,[[["dataenum",3]],["data",4]]],[11,"from","","",241,[[["dataunion",3]],["data",4]]],[11,"from","","",254,[[["typearray",3]],["type",4]]],[11,"from","","",254,[[["typebarefn",3]],["type",4]]],[11,"from","","",254,[[["typegroup",3]],["type",4]]],[11,"from","","",254,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",254,[[["typeinfer",3]],["type",4]]],[11,"from","","",254,[[["typemacro",3]],["type",4]]],[11,"from","","",254,[[["typenever",3]],["type",4]]],[11,"from","","",254,[[["typeparen",3]],["type",4]]],[11,"from","","",254,[[["typepath",3]],["type",4]]],[11,"from","","",254,[[["typeptr",3]],["type",4]]],[11,"from","","",254,[[["typereference",3]],["type",4]]],[11,"from","","",254,[[["typeslice",3]],["type",4]]],[11,"from","","",254,[[["typetraitobject",3]],["type",4]]],[11,"from","","",254,[[["typetuple",3]],["type",4]]],[11,"from","","",271,[[["patbox",3]],["pat",4]]],[11,"from","","",271,[[["patident",3]],["pat",4]]],[11,"from","","",271,[[["patlit",3]],["pat",4]]],[11,"from","","",271,[[["patmacro",3]],["pat",4]]],[11,"from","","",271,[[["pator",3]],["pat",4]]],[11,"from","","",271,[[["patpath",3]],["pat",4]]],[11,"from","","",271,[[["patrange",3]],["pat",4]]],[11,"from","","",271,[[["patreference",3]],["pat",4]]],[11,"from","","",271,[[["patrest",3]],["pat",4]]],[11,"from","","",271,[[["patslice",3]],["pat",4]]],[11,"from","","",271,[[["patstruct",3]],["pat",4]]],[11,"from","","",271,[[["pattuple",3]],["pat",4]]],[11,"from","","",271,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",271,[[["pattype",3]],["pat",4]]],[11,"from","","",271,[[["patwild",3]],["pat",4]]],[11,"from","","",292,[[]]],[11,"from","","",294,[[]]],[11,"from","syn::parse","",115,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",115,[[["intoiterator",8]]]],[11,"into_iter","syn","",123,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",115,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",297,[[]]],[11,"clone","","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",251,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","syn::parse","",112,[[]]],[11,"clone","","",115,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",182,[[]]],[11,"default","","",179,[[]]],[11,"default","","",293,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",235,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",178,[[]]],[11,"eq","","",177,[[]]],[11,"eq","","",235,[[["lifetime",3]]]],[11,"eq","syn::buffer","",104,[[]]],[11,"partial_cmp","syn","",235,[[["lifetime",3]],[["ordering",4],["option",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",112,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[]]],[11,"index_mut","","",106,[[]]],[11,"hash","syn","",178,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",235,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["option",4],["span",3]]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"span","","",177,[[],[["option",4],["span",3]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",296,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",296,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",296,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",117,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",117,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",117,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",117,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",117,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"path","","Returns the identifier that begins this structured meta …",118,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",122,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",123,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",123,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",123,[[]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",123,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",137,[[["parsestream",6]],[["expr",4],["result",6]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",182,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",182,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",182,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",182,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",182,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",182,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",182,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for …",182,[[]]],[11,"as_turbofish","","Turn a type\'s generics like <code><X, Y></code> into a turbofish like …",298,[[],["turbofish",3]]],[11,"new","","",183,[[["lifetime",3]]]],[11,"receiver","","A method\'s <code>self</code> receiver, such as <code>&self</code> or <code>self: Box<Self></code>…",222,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",221,[[],[["lifetime",3],["option",4]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",235,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",236,[[["literal",3]]]],[11,"suffix","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","",300,[[["span",3]]]],[11,"value","","",300,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",300,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",300,[[["parser",8]],["result",6]]],[11,"span","","",300,[[],["span",3]]],[11,"set_span","","",300,[[["span",3]]]],[11,"suffix","","",300,[[]]],[11,"new","","",301,[[["span",3]]]],[11,"value","","",301,[[],["vec",3]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[]]],[11,"new","","",303,[[["span",3]]]],[11,"value","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[]]],[11,"new","","",304,[[["span",3]]]],[11,"base10_digits","","",304,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",304,[[],["result",6]]],[11,"suffix","","",304,[[]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"new","","",305,[[["span",3]]]],[11,"base10_digits","","",305,[[]]],[11,"base10_parse","","",305,[[],["result",6]]],[11,"suffix","","",305,[[]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters …",239,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters …",239,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",248,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",253,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",267,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",292,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",292,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the …",292,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",293,[[]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",312,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse …",312,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"tar":{"doc":"A library for reading and writing TAR archives","i":[[3,"Archive","tar","A top-level representation of an archive file.",null,null],[3,"Entries","","An iterator over the entries of an archive.",null,null],[3,"Builder","","A structure for building archives",null,null],[3,"Entry","","A read-only view into an entry of an archive.",null,null],[4,"Unpacked","","When unpacking items the unpacked thing is returned to …",null,null],[13,"File","","A file was unpacked.",0,null],[4,"EntryType","","Indicate for the type of file described by a header.",null,null],[13,"Regular","","Regular file",1,null],[13,"Link","","Hard link",1,null],[13,"Symlink","","Symbolic link",1,null],[13,"Char","","Character device",1,null],[13,"Block","","Block device",1,null],[13,"Directory","","Directory",1,null],[13,"Fifo","","Named pipe (fifo)",1,null],[13,"Continuous","","Implementation-defined \'high-performance\' type, treated …",1,null],[13,"GNULongName","","GNU extension - long file name",1,null],[13,"GNULongLink","","GNU extension - long link name (link target)",1,null],[13,"GNUSparse","","GNU extension - sparse file",1,null],[13,"XGlobalHeader","","Global extended header",1,null],[13,"XHeader","","Extended Header",1,null],[3,"GnuExtSparseHeader","","Representation of the entry found to represent extended …",null,null],[12,"sparse","","",2,null],[12,"isextended","","",2,null],[12,"padding","","",2,null],[3,"GnuHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",3,null],[12,"mode","","",3,null],[12,"uid","","",3,null],[12,"gid","","",3,null],[12,"size","","",3,null],[12,"mtime","","",3,null],[12,"cksum","","",3,null],[12,"typeflag","","",3,null],[12,"linkname","","",3,null],[12,"magic","","",3,null],[12,"version","","",3,null],[12,"uname","","",3,null],[12,"gname","","",3,null],[12,"dev_major","","",3,null],[12,"dev_minor","","",3,null],[12,"atime","","",3,null],[12,"ctime","","",3,null],[12,"offset","","",3,null],[12,"longnames","","",3,null],[12,"unused","","",3,null],[12,"sparse","","",3,null],[12,"isextended","","",3,null],[12,"realsize","","",3,null],[12,"pad","","",3,null],[3,"GnuSparseHeader","","Description of the header of a spare entry.",null,null],[12,"offset","","",4,null],[12,"numbytes","","",4,null],[3,"Header","","Representation of the header of an entry in an archive",null,null],[4,"HeaderMode","","Declares the information that should be included when …",null,null],[13,"Complete","","All supported metadata, including mod/access times and …",5,null],[13,"Deterministic","","Only metadata that is directly relevant to the identity …",5,null],[3,"OldHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",6,null],[12,"mode","","",6,null],[12,"uid","","",6,null],[12,"gid","","",6,null],[12,"size","","",6,null],[12,"mtime","","",6,null],[12,"cksum","","",6,null],[12,"linkflag","","",6,null],[12,"linkname","","",6,null],[12,"pad","","",6,null],[3,"UstarHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",7,null],[12,"mode","","",7,null],[12,"uid","","",7,null],[12,"gid","","",7,null],[12,"size","","",7,null],[12,"mtime","","",7,null],[12,"cksum","","",7,null],[12,"typeflag","","",7,null],[12,"linkname","","",7,null],[12,"magic","","",7,null],[12,"version","","",7,null],[12,"uname","","",7,null],[12,"gname","","",7,null],[12,"dev_major","","",7,null],[12,"dev_minor","","",7,null],[12,"prefix","","",7,null],[12,"pad","","",7,null],[3,"PaxExtension","","A key/value pair corresponding to a pax extension.",null,null],[3,"PaxExtensions","","An iterator over the pax extensions in an archive entry.",null,null],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"drop","","",10,[[]]],[11,"next","","",9,[[],[["option",4],["result",6]]]],[11,"next","","",13,[[],[["result",6],["option",4]]]],[11,"clone","","",1,[[],["entrytype",4]]],[11,"clone","","",5,[[],["headermode",4]]],[11,"clone","","",12,[[],["header",3]]],[11,"default","","",2,[[]]],[11,"eq","","",1,[[["entrytype",4]]]],[11,"ne","","",1,[[["entrytype",4]]]],[11,"eq","","",5,[[["headermode",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"read","","",11,[[],["result",6]]],[11,"new","","Create a new archive with the underlying object as the …",8,[[],["archive",3]]],[11,"into_inner","","Unwrap this archive, returning the underlying object.",8,[[]]],[11,"entries","","Construct an iterator over the entries in this archive.",8,[[],[["result",6],["entries",3]]]],[11,"unpack","","Unpacks the contents tarball into the specified <code>dst</code>.",8,[[["asref",8],["path",3]],["result",6]]],[11,"set_unpack_xattrs","","Indicate whether extended file attributes (xattrs on …",8,[[]]],[11,"set_preserve_permissions","","Indicate whether extended permissions (like suid on Unix) …",8,[[]]],[11,"set_overwrite","","Indicate whether files and symlinks should be overwritten …",8,[[]]],[11,"set_preserve_mtime","","Indicate whether access time information is preserved …",8,[[]]],[11,"set_ignore_zeros","","Ignore zeroed headers, which would otherwise indicate to …",8,[[]]],[11,"raw","","Indicates whether this iterator will return raw entries …",9,[[],["entries",3]]],[11,"new","","Create a new archive builder with the underlying object …",10,[[],["builder",3]]],[11,"mode","","Changes the HeaderMode that will be used when reading fs …",10,[[["headermode",4]]]],[11,"follow_symlinks","","Follow symlinks, archiving the contents of the file they …",10,[[]]],[11,"get_ref","","Gets shared reference to the underlying object.",10,[[]]],[11,"get_mut","","Gets mutable reference to the underlying object.",10,[[]]],[11,"into_inner","","Unwrap this archive, returning the underlying object.",10,[[],["result",6]]],[11,"append","","Adds a new entry to this archive.",10,[[["header",3],["read",8]],["result",6]]],[11,"append_data","","Adds a new entry to this archive with the specified path.",10,[[["asref",8],["read",8],["header",3],["path",3]],["result",6]]],[11,"append_path","","Adds a file on the local filesystem to this archive.",10,[[["asref",8],["path",3]],["result",6]]],[11,"append_path_with_name","","Adds a file on the local filesystem to this archive under …",10,[[["asref",8],["path",3]],["result",6]]],[11,"append_file","","Adds a file to this archive with the given path as the …",10,[[["file",3],["asref",8],["path",3]],["result",6]]],[11,"append_dir","","Adds a directory to this archive with the given path as …",10,[[],["result",6]]],[11,"append_dir_all","","Adds a directory and all of its contents (recursively) to …",10,[[],["result",6]]],[11,"finish","","Finish writing this archive, emitting the termination …",10,[[],["result",6]]],[11,"path","","Returns the path name for this entry.",11,[[],[["cow",4],["result",6]]]],[11,"path_bytes","","Returns the raw bytes listed for this entry.",11,[[],["cow",4]]],[11,"link_name","","Returns the link name for this entry, if any is found.",11,[[],[["option",4],["result",6]]]],[11,"link_name_bytes","","Returns the link name for this entry, in bytes, if listed.",11,[[],[["cow",4],["option",4]]]],[11,"pax_extensions","","Returns an iterator over the pax extensions contained in …",11,[[],[["result",6],["option",4]]]],[11,"header","","Returns access to the header of this entry in the archive.",11,[[],["header",3]]],[11,"size","","Returns access to the size of this entry in the archive.",11,[[]]],[11,"raw_header_position","","Returns the starting position, in bytes, of the header of …",11,[[]]],[11,"raw_file_position","","Returns the starting position, in bytes, of the file of …",11,[[]]],[11,"unpack","","Writes this file to the specified location.",11,[[["asref",8],["path",3]],[["unpacked",4],["result",6]]]],[11,"unpack_in","","Extracts this file under the specified path, avoiding …",11,[[["asref",8],["path",3]],["result",6]]],[11,"set_unpack_xattrs","","Indicate whether extended file attributes (xattrs on …",11,[[]]],[11,"set_preserve_permissions","","Indicate whether extended permissions (like suid on Unix) …",11,[[]]],[11,"set_preserve_mtime","","Indicate whether access time information is preserved …",11,[[]]],[11,"new","","Creates a new entry type from a raw byte.",1,[[],["entrytype",4]]],[11,"as_byte","","Returns the raw underlying byte that this entry type …",1,[[]]],[11,"file","","Creates a new entry type representing a regular file.",1,[[],["entrytype",4]]],[11,"hard_link","","Creates a new entry type representing a hard link.",1,[[],["entrytype",4]]],[11,"symlink","","Creates a new entry type representing a symlink.",1,[[],["entrytype",4]]],[11,"character_special","","Creates a new entry type representing a character special …",1,[[],["entrytype",4]]],[11,"block_special","","Creates a new entry type representing a block special …",1,[[],["entrytype",4]]],[11,"dir","","Creates a new entry type representing a directory.",1,[[],["entrytype",4]]],[11,"fifo","","Creates a new entry type representing a FIFO.",1,[[],["entrytype",4]]],[11,"contiguous","","Creates a new entry type representing a contiguous file.",1,[[],["entrytype",4]]],[11,"is_file","","Returns whether this type represents a regular file.",1,[[]]],[11,"is_hard_link","","Returns whether this type represents a hard link.",1,[[]]],[11,"is_symlink","","Returns whether this type represents a symlink.",1,[[]]],[11,"is_character_special","","Returns whether this type represents a character special …",1,[[]]],[11,"is_block_special","","Returns whether this type represents a block special …",1,[[]]],[11,"is_dir","","Returns whether this type represents a directory.",1,[[]]],[11,"is_fifo","","Returns whether this type represents a FIFO.",1,[[]]],[11,"is_contiguous","","Returns whether this type represents a contiguous file.",1,[[]]],[11,"is_gnu_longname","","Returns whether this type represents a GNU long name …",1,[[]]],[11,"is_gnu_sparse","","Returns whether this type represents a GNU sparse header.",1,[[]]],[11,"is_gnu_longlink","","Returns whether this type represents a GNU long link …",1,[[]]],[11,"is_pax_global_extensions","","Returns whether this type represents a GNU long name …",1,[[]]],[11,"is_pax_local_extensions","","Returns whether this type represents a GNU long link …",1,[[]]],[11,"new_gnu","","Creates a new blank GNU header.",12,[[],["header",3]]],[11,"new_ustar","","Creates a new blank UStar header.",12,[[],["header",3]]],[11,"new_old","","Creates a new blank old header.",12,[[],["header",3]]],[11,"as_old","","View this archive header as a raw \\\"old\\\" archive header.",12,[[],["oldheader",3]]],[11,"as_old_mut","","Same as <code>as_old</code>, but the mutable version.",12,[[],["oldheader",3]]],[11,"as_ustar","","View this archive header as a raw UStar archive header.",12,[[],[["option",4],["ustarheader",3]]]],[11,"as_ustar_mut","","Same as <code>as_ustar_mut</code>, but the mutable version.",12,[[],[["option",4],["ustarheader",3]]]],[11,"as_gnu","","View this archive header as a raw GNU archive header.",12,[[],[["gnuheader",3],["option",4]]]],[11,"as_gnu_mut","","Same as <code>as_gnu</code>, but the mutable version.",12,[[],[["option",4],["gnuheader",3]]]],[11,"from_byte_slice","","Treats the given byte slice as a header.",12,[[],["header",3]]],[11,"as_bytes","","Returns a view into this header as a byte array.",12,[[]]],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",12,[[]]],[11,"set_metadata","","Blanket sets the metadata in this header from the …",12,[[["metadata",3]]]],[11,"set_metadata_in_mode","","Sets only the metadata relevant to the given HeaderMode …",12,[[["metadata",3],["headermode",4]]]],[11,"entry_size","","Returns the size of entry\'s data this header represents.",12,[[],["result",6]]],[11,"size","","Returns the file size this header represents.",12,[[],["result",6]]],[11,"set_size","","Encodes the <code>size</code> argument into the size field of this …",12,[[]]],[11,"path","","Returns the raw path name stored in this header.",12,[[],[["cow",4],["result",6]]]],[11,"path_bytes","","Returns the pathname stored in this header as a byte …",12,[[],["cow",4]]],[11,"set_path","","Sets the path name for this header.",12,[[["asref",8],["path",3]],["result",6]]],[11,"link_name","","Returns the link name stored in this header, if any is …",12,[[],[["option",4],["result",6]]]],[11,"link_name_bytes","","Returns the link name stored in this header as a byte …",12,[[],[["cow",4],["option",4]]]],[11,"set_link_name","","Sets the link name for this header.",12,[[["asref",8],["path",3]],["result",6]]],[11,"mode","","Returns the mode bits for this file",12,[[],["result",6]]],[11,"set_mode","","Encodes the <code>mode</code> provided into this header.",12,[[]]],[11,"uid","","Returns the value of the owner\'s user ID field",12,[[],["result",6]]],[11,"set_uid","","Encodes the <code>uid</code> provided into this header.",12,[[]]],[11,"gid","","Returns the value of the group\'s user ID field",12,[[],["result",6]]],[11,"set_gid","","Encodes the <code>gid</code> provided into this header.",12,[[]]],[11,"mtime","","Returns the last modification time in Unix time format",12,[[],["result",6]]],[11,"set_mtime","","Encodes the <code>mtime</code> provided into this header.",12,[[]]],[11,"username","","Return the user name of the owner of this file.",12,[[],[["utf8error",3],["result",4],["option",4]]]],[11,"username_bytes","","Returns the user name of the owner of this file, if …",12,[[],["option",4]]],[11,"set_username","","Sets the username inside this header.",12,[[],["result",6]]],[11,"groupname","","Return the group name of the owner of this file.",12,[[],[["utf8error",3],["result",4],["option",4]]]],[11,"groupname_bytes","","Returns the group name of the owner of this file, if …",12,[[],["option",4]]],[11,"set_groupname","","Sets the group name inside this header.",12,[[],["result",6]]],[11,"device_major","","Returns the device major number, if present.",12,[[],[["option",4],["result",6]]]],[11,"set_device_major","","Encodes the value <code>major</code> into the dev_major field of this …",12,[[],["result",6]]],[11,"device_minor","","Returns the device minor number, if present.",12,[[],[["option",4],["result",6]]]],[11,"set_device_minor","","Encodes the value <code>minor</code> into the dev_minor field of this …",12,[[],["result",6]]],[11,"entry_type","","Returns the type of file described by this header.",12,[[],["entrytype",4]]],[11,"set_entry_type","","Sets the type of file that will be described by this …",12,[[["entrytype",4]]]],[11,"cksum","","Returns the checksum field of this header.",12,[[],["result",6]]],[11,"set_cksum","","Sets the checksum field of this header based on the …",12,[[]]],[11,"as_header","","Views this as a normal <code>Header</code>",6,[[],["header",3]]],[11,"as_header_mut","","Views this as a normal <code>Header</code>",6,[[],["header",3]]],[11,"path_bytes","","See <code>Header::path_bytes</code>",7,[[],["cow",4]]],[11,"set_path","","See <code>Header::set_path</code>",7,[[["asref",8],["path",3]],["result",6]]],[11,"username_bytes","","See <code>Header::username_bytes</code>",7,[[]]],[11,"set_username","","See <code>Header::set_username</code>",7,[[],["result",6]]],[11,"groupname_bytes","","See <code>Header::groupname_bytes</code>",7,[[]]],[11,"set_groupname","","See <code>Header::set_groupname</code>",7,[[],["result",6]]],[11,"device_major","","See <code>Header::device_major</code>",7,[[],["result",6]]],[11,"set_device_major","","See <code>Header::set_device_major</code>",7,[[]]],[11,"device_minor","","See <code>Header::device_minor</code>",7,[[],["result",6]]],[11,"set_device_minor","","See <code>Header::set_device_minor</code>",7,[[]]],[11,"as_header","","Views this as a normal <code>Header</code>",7,[[],["header",3]]],[11,"as_header_mut","","Views this as a normal <code>Header</code>",7,[[],["header",3]]],[11,"username_bytes","","See <code>Header::username_bytes</code>",3,[[]]],[11,"set_username","","See <code>Header::set_username</code>",3,[[],["result",6]]],[11,"groupname_bytes","","See <code>Header::groupname_bytes</code>",3,[[]]],[11,"set_groupname","","See <code>Header::set_groupname</code>",3,[[],["result",6]]],[11,"device_major","","See <code>Header::device_major</code>",3,[[],["result",6]]],[11,"set_device_major","","See <code>Header::set_device_major</code>",3,[[]]],[11,"device_minor","","See <code>Header::device_minor</code>",3,[[],["result",6]]],[11,"set_device_minor","","See <code>Header::set_device_minor</code>",3,[[]]],[11,"atime","","Returns the last modification time in Unix time format",3,[[],["result",6]]],[11,"set_atime","","Encodes the <code>atime</code> provided into this header.",3,[[]]],[11,"ctime","","Returns the last modification time in Unix time format",3,[[],["result",6]]],[11,"set_ctime","","Encodes the <code>ctime</code> provided into this header.",3,[[]]],[11,"real_size","","Returns the \\\"real size\\\" of the file this header …",3,[[],["result",6]]],[11,"is_extended","","Indicates whether this header will be followed by …",3,[[]]],[11,"as_header","","Views this as a normal <code>Header</code>",3,[[],["header",3]]],[11,"as_header_mut","","Views this as a normal <code>Header</code>",3,[[],["header",3]]],[11,"is_empty","","Returns true if block is empty",4,[[]]],[11,"offset","","Offset of the block from the start of the file",4,[[],["result",6]]],[11,"length","","Length of the block",4,[[],["result",6]]],[11,"new","","Crates a new zero\'d out sparse header entry.",2,[[],["gnuextsparseheader",3]]],[11,"as_bytes","","Returns a view into this header as a byte array.",2,[[]]],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",2,[[]]],[11,"sparse","","Returns a slice of the underlying sparse headers.",2,[[]]],[11,"is_extended","","Indicates if another sparse header should be following …",2,[[]]],[11,"key","","Returns the key for this key/value pair parsed as a …",14,[[],[["result",4],["utf8error",3]]]],[11,"key_bytes","","Returns the underlying raw bytes for the key of this …",14,[[]]],[11,"value","","Returns the value for this key/value pair parsed as a …",14,[[],[["result",4],["utf8error",3]]]],[11,"value_bytes","","Returns the underlying raw bytes for this value of this …",14,[[]]]],"p":[[4,"Unpacked"],[4,"EntryType"],[3,"GnuExtSparseHeader"],[3,"GnuHeader"],[3,"GnuSparseHeader"],[4,"HeaderMode"],[3,"OldHeader"],[3,"UstarHeader"],[3,"Archive"],[3,"Entries"],[3,"Builder"],[3,"Entry"],[3,"Header"],[3,"PaxExtensions"],[3,"PaxExtension"]]},\
"tempfile":{"doc":"Temporary files and directories.","i":[[5,"tempdir","tempfile","Create a new temporary directory.",null,[[],[["tempdir",3],["result",6]]]],[5,"tempdir_in","","Create a new temporary directory.",null,[[["asref",8],["path",3]],[["tempdir",3],["result",6]]]],[3,"TempDir","","A directory in the filesystem that is automatically …",null,null],[5,"tempfile","","Create a new temporary file.",null,[[],[["result",6],["file",3]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",null,[[["asref",8],["path",3]],[["result",6],["file",3]]]],[3,"NamedTempFile","","A named temporary file.",null,null],[3,"PathPersistError","","Error returned when persisting a temporary file path …",null,null],[12,"error","","The underlying IO error.",0,null],[12,"path","","The temporary file path that couldn\'t be persisted.",0,null],[3,"PersistError","","Error returned when persisting a temporary file fails.",null,null],[12,"error","","The underlying IO error.",1,null],[12,"file","","The temporary file that couldn\'t be persisted.",1,null],[3,"TempPath","","A path to a named temporary file without an open file …",null,null],[5,"spooled_tempfile","","Create a new spooled temporary file.",null,[[],["spooledtempfile",3]]],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but …",null,null],[3,"Builder","","Create a new temporary file or directory with custom …",null,null],[11,"new","","Create a new <code>Builder</code>.",2,[[]]],[11,"prefix","","Set a custom filename prefix.",2,[[]]],[11,"suffix","","Set a custom filename suffix.",2,[[]]],[11,"rand_bytes","","Set the number of random bytes.",2,[[]]],[11,"append","","Set the file to be opened in append mode.",2,[[]]],[11,"tempfile","","Create the named temporary file.",2,[[],[["result",6],["namedtempfile",3]]]],[11,"tempfile_in","","Create the named temporary file in the specified …",2,[[["asref",8],["path",3]],[["result",6],["namedtempfile",3]]]],[11,"tempdir","","Attempts to make a temporary directory inside of …",2,[[],[["tempdir",3],["result",6]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of <code>dir</code>. The …",2,[[["asref",8],["path",3]],[["tempdir",3],["result",6]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"as_ref","","",3,[[],["path",3]]],[11,"as_ref","","",4,[[],["path",3]]],[11,"as_ref","","",4,[[],["osstr",3]]],[11,"as_ref","","",5,[[],["path",3]]],[11,"from","","",4,[[["pathpersisterror",3]],["temppath",3]]],[11,"from","","",5,[[["persisterror",3]],["namedtempfile",3]]],[11,"clone","","",2,[[],["builder",3]]],[11,"default","","",2,[[]]],[11,"eq","","",2,[[["builder",3]]]],[11,"ne","","",2,[[["builder",3]]]],[11,"deref","","",4,[[],["path",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"read","","",5,[[],["result",6]]],[11,"read","","",6,[[],["result",6]]],[11,"seek","","",5,[[["seekfrom",4]],["result",6]]],[11,"seek","","",6,[[["seekfrom",4]],["result",6]]],[11,"write","","",5,[[],["result",6]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","","",6,[[],["result",6]]],[11,"flush","","",6,[[],["result",6]]],[11,"as_raw_fd","","",5,[[],["rawfd",6]]],[11,"new","","Attempts to make a temporary directory inside of …",3,[[],[["tempdir",3],["result",6]]]],[11,"new_in","","Attempts to make a temporary directory inside of <code>dir</code>. The …",3,[[["asref",8],["path",3]],[["tempdir",3],["result",6]]]],[11,"path","","Accesses the <code>Path</code> to the temporary directory.",3,[[],["path",3]]],[11,"into_path","","Persist the temporary directory to disk, returning the …",3,[[],["pathbuf",3]]],[11,"close","","Closes and removes the temporary directory, returing a …",3,[[],["result",6]]],[11,"close","","Close and remove the temporary file.",4,[[],["result",6]]],[11,"persist","","Persist the temporary file at the target path.",4,[[["asref",8],["path",3]],[["result",4],["pathpersisterror",3]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file …",4,[[["asref",8],["path",3]],[["result",4],["pathpersisterror",3]]]],[11,"keep","","Keep the temporary file from being deleted. This function …",4,[[],[["pathpersisterror",3],["pathbuf",3],["result",4]]]],[11,"new","","Create a new named temporary file.",5,[[],[["result",6],["namedtempfile",3]]]],[11,"new_in","","Create a new named temporary file in the specified …",5,[[["asref",8],["path",3]],[["result",6],["namedtempfile",3]]]],[11,"path","","Get the temporary file\'s path.",5,[[],["path",3]]],[11,"close","","Close and remove the temporary file.",5,[[],["result",6]]],[11,"persist","","Persist the temporary file at the target path.",5,[[["asref",8],["path",3]],[["result",4],["persisterror",3],["file",3]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file …",5,[[["asref",8],["path",3]],[["result",4],["persisterror",3],["file",3]]]],[11,"keep","","Keep the temporary file from being deleted. This function …",5,[[],[["result",4],["persisterror",3]]]],[11,"reopen","","Securely reopen the temporary file.",5,[[],[["result",6],["file",3]]]],[11,"as_file","","Get a reference to the underlying file.",5,[[],["file",3]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",5,[[],["file",3]]],[11,"into_file","","Convert the temporary file into a <code>std::fs::File</code>.",5,[[],["file",3]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",5,[[],["temppath",3]]],[11,"into_parts","","Converts the named temporary file into its constituent …",5,[[]]],[11,"new","","",6,[[],["spooledtempfile",3]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",6,[[]]],[11,"roll","","Rolls over to a file on disk, regardless of current size. …",6,[[],["result",6]]],[11,"set_len","","",6,[[],[["result",4],["error",3]]]]],"p":[[3,"PathPersistError"],[3,"PersistError"],[3,"Builder"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"]]},\
"thread_local":{"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a <code>CachedThreadLocal</code>.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a <code>CachedThreadLocal</code>.",null,null],[3,"CachedThreadLocal","","Wrapper around <code>ThreadLocal</code> which adds a fast path for a …",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[11,"new","","Creates a new empty <code>ThreadLocal</code>.",0,[[],["threadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it …",0,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it …",0,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all …",0,[[],["itermut",3]]],[11,"clear","","Removes all thread-specific values from the <code>ThreadLocal</code>, …",0,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a …",0,[[]]],[3,"IterMut","","Mutable iterator over the contents of a <code>ThreadLocal</code>.",null,null],[3,"IntoIter","","An iterator that moves out of a <code>ThreadLocal</code>.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"into_iter","","",1,[[],["cachedintoiter",3]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"default","","",1,[[],["cachedthreadlocal",3]]],[11,"default","","",0,[[],["threadlocal",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new empty <code>CachedThreadLocal</code>.",1,[[],["cachedthreadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it …",1,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it …",1,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all …",1,[[],["cacheditermut",3]]],[11,"clear","","Removes all thread-specific values from the <code>ThreadLocal</code>, …",1,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a …",1,[[]]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"CachedIterMut"],[3,"CachedIntoIter"],[3,"IterMut"],[3,"IntoIter"]]},\
"topological_sort":{"doc":"Performs topological sorting.","i":[[3,"TopologicalSort","topological_sort","Performs topological sorting.",null,null],[11,"new","","Creates new empty <code>TopologicalSort</code>.",0,[[],["topologicalsort",3]]],[11,"len","","Returns the number of elements in the <code>TopologicalSort</code>.",0,[[]]],[11,"is_empty","","Returns true if the <code>TopologicalSort</code> contains no elements.",0,[[]]],[11,"add_dependency","","Registers the two elements\' dependency.",0,[[]]],[11,"add_link","","Registers a dependency link.",0,[[["dependencylink",3]]]],[11,"insert","","Inserts an element, without adding any dependencies from …",0,[[]]],[11,"pop","","Removes the item that is not depended on by any other …",0,[[],["option",4]]],[11,"pop_all","","Removes all items that are not depended on by any other …",0,[[],["vec",3]]],[11,"peek","","Return a reference to the first item that does not depend …",0,[[],["option",4]]],[11,"peek_all","","Return a vector of references to all items that do not …",0,[[],["vec",3]]],[3,"DependencyLink","","A link between two items in a sort.",null,null],[12,"prec","","The element which is depened upon by <code>succ</code>.",1,null],[12,"succ","","The element which depends on <code>prec</code>.",1,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"clone","","",0,[[],["topologicalsort",3]]],[11,"clone","","",1,[[],["dependencylink",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"from_iter","","",0,[[["intoiterator",8]],["topologicalsort",3]]],[11,"from_iter","","",0,[[["intoiterator",8]],["topologicalsort",3]]]],"p":[[3,"TopologicalSort"],[3,"DependencyLink"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the …",0,[[]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the …",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"xattr":{"doc":"A pure-Rust library to manage extended attributes.","i":[[3,"UnsupportedPlatformError","xattr","The error type returned on unsupported platforms.",null,null],[3,"XAttrs","","An iterator over a set of extended attributes names.",null,null],[17,"SUPPORTED_PLATFORM","","A constant indicating whether or not the target platform …",null,null],[5,"get","","Get an extended attribute for the specified file.",null,[[],[["option",4],["result",6]]]],[5,"set","","Set an extended attribute on the specified file.",null,[[],["result",6]]],[5,"remove","","Remove an extended attribute from the specified file.",null,[[],["result",6]]],[5,"list","","List extended attributes attached to the specified file.",null,[[],[["result",6],["xattrs",3]]]],[8,"FileExt","","Extension trait to manipulate extended attributes on <code>File</code>…",null,null],[11,"get_xattr","","Get an extended attribute for the specified file.",0,[[],[["option",4],["result",6]]]],[11,"set_xattr","","Set an extended attribute on the specified file.",0,[[],["result",6]]],[11,"remove_xattr","","Remove an extended attribute from the specified file.",0,[[],["result",6]]],[11,"list_xattr","","List extended attributes attached to the specified file.",0,[[],[["result",6],["xattrs",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next","","",2,[[],[["osstring",3],["option",4]]]],[11,"size_hint","","",2,[[]]],[11,"clone","","",1,[[],["unsupportedplatformerror",3]]],[11,"clone","","",2,[[]]],[11,"clone_from","","",2,[[["xattrs",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"description","","",1,[[]]]],"p":[[8,"FileExt"],[3,"UnsupportedPlatformError"],[3,"XAttrs"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);